{"version":3,"sources":["App/components/Animation/animation.glb","App/components/Animation/index.jsx","App/components/Button/Default.jsx","App/components/Button/Spring.jsx","App/components/Button/index.jsx","App/utils/KeyboardControls/index.js","App/utils/MathCircle/index.js","App/utils/ZeroFill/index.js","App/components/Clock/Analogue.jsx","App/components/Clock/Digital.jsx","App/components/Clock/index.jsx","App/components/Cube/index.jsx","App/components/Face/index.jsx","App/components/Gauge/index.jsx","App/components/Image/UV_Grid_Sm.jpg","App/components/Image/Default.jsx","App/components/Image/arteveldehogeschool_logo.svg","App/components/Image/SVG_logo.svg","App/components/Image/Svg.jsx","App/components/Image/index.jsx","App/components/Lighting/Demo.jsx","App/components/Lighting/DemoHelpers.jsx","App/components/Lighting/Studio.jsx","App/components/Lighting/StudioHelpers.jsx","App/components/Lighting/ThreePoint.jsx","App/components/Lighting/ThreePointHelpers.jsx","App/components/Lighting/index.jsx","App/components/Logo/gltf-logo.glb","App/components/Logo/Default.jsx","App/components/Logo/Double.jsx","App/components/Logo/index.jsx","App/lib/FontFamily/index.js","App/lib/MatCap/index.js","App/components/LoremIpsum/index.jsx","App/components/Normals/normals.glb","App/components/Normals/index.jsx","App/components/Socket/index.jsx","App/components/Spring/index.jsx","App/components/Suzanne/suzanne.glb","App/components/Suzanne/Default.jsx","App/components/Suzanne/MatcapTexture.jsx","App/components/Suzanne/NormalTexture.jsx","App/components/Suzanne/PhysicalMaterial.jsx","App/components/Suzanne/StandardMaterial.jsx","App/components/Suzanne/ToonMaterial.jsx","App/components/Suzanne/index.jsx","App/components/SvgLoader/Shape.jsx","App/components/SvgLoader/Group.jsx","App/components/SvgLoader/index.jsx","App/components/Texture/TexturedCube.glb","App/components/Texture/Default.jsx","App/components/Texture/BakedNormals.glb","App/components/Texture/BakedNormals.jsx","App/components/Texture/index.jsx","App/components/Tripod/index.jsx","App/components/World/index.jsx","App/components/World/audio/bensound-badass.mp3","App/components/World/audio/bensound-evolution.mp3","App/components/World/Sound.jsx","App/components/Wouter/index.jsx","App/components/Wouter/PathRouter.jsx","App/components/Wouter/PathWouter.jsx","App/Content.jsx","App/index.jsx","reportWebVitals.js","index.jsx"],"names":["Animation","useGLTF","animationGlb","animations","scene","animationRef","useRef","mixer","useMemo","AnimationMixer","useEffect","current","clipAction","play","useFrame","state","delta","update","object","ref","ButtonDefault","useState","hover","setHover","color","setColor","onClick","onDoubleClick","onPointerOut","onPointerOver","opacity","transparent","args","Text","fontSize","position","Spring","props","toggle","setToggle","colorCurrent","setColorCurrent","useSpring","rotation","MathUtils","degToRad","scale","group","mesh","meshBasicMaterial","BUTTON","Default","Button","useButton","useControls","label","options","value","enableButton","name","AZERTY","LEFT","UP","DIRECTION","QWERTY","KeyboardControls","this","event","console","log","code","info","window","addEventListener","keyDownHandler","keyUpHandler","removeEventListener","MathCircle","radius","degrees","angle","x","Math","cos","y","sin","ZeroFill","number","zeros","postfix","zeroFill","floor","toString","string","length","isHour","tick","CLOCK","HAND","HH","LENGTH","WIDTH","MM","SS","COLOR","THICKNESS","MARK","OFFSET","ClockAnalogue","clockRef","handHoursRef","handMinutesRef","handSecondsRef","angleStart","d","Date","z","getHours","getMinutes","getSeconds","map","Array","fill","index","getCoordinates","receiveShadow","side","DoubleSide","castShadow","radians","ClockDigital","text","toLocaleTimeString","Analogue","Digital","Clock","useClock","enableClock","Cube","colors","random","meshMatcapMaterial","Face","NEEDLE_STEP","Gauge","TICK_MARKS","angleStep","valueRange","valueStep","needleRef","needleAngle","needleValue","needleStep","forEach","tickMark","children","material","setColorName","metalness","roughness","ImageDefault","texture","useTexture","uvGrid","offset","Vector2","repeat","center","ImageSvg","source","logoNl","svgLogo","IMAGE","Svg","Image","useImage","enableImage","LightingDemo","intensity","groundColor","penumbra","LightingDemoHelpers","ambientLight","folder","max","min","directionalLight","hemisphereLight","pointLight","spotLight","Spotlight","target","useThree","Object3D","add","directionalLightRef","hemisphereLightRef","pointLightRef","spotLightRef","useHelper","DirectionalLightHelper","PointLightHelper","SpotLightHelper","HemisphereLightHelper","translateX","translateZ","LightingStudio","LightingStudioHelpers","ambientLightColor","ambientLightIntensity","frontLightColor","frontLightIntensity","leftLightColor","leftLightIntensity","rightLightColor","rightLightIntensity","frontLightRef","leftLightRef","rightLightRef","LightingThreePoint","LightingThreePointHelpers","backLightColor","backLightIntensity","fillLightColor","fillLightIntensity","keyLightColor","keyLightIntensity","backLightRef","fillLightRef","keyLightRef","LIGHTING","Lighting","useLighting","useHelpers","enableLighting","helpers","Demo","DemoHelpers","Studio","StudioHelpers","ThreePoint","ThreePointHelpers","LogoDefault","clockwise","setClockwise","gltfLogo","gltfLogoGlb","logoRef","LogoDouble","logo1Ref","logo2Ref","clone","LOGO","Double","useLogo","enableLogo","FontFamily","Architects_Daughter","Press_Start_2P","Roboto_Slab","MatCap","id","GREEN_CRYSTAL","SILVERY","TITANIUM","WORN_GOLD","size","XS","SM","MD","LG","XL","LoremIpsum","useMatcapTexture","matcapGreenCrystal","matcapSilvery","matcapWornGold","font","matcap","outlineColor","outlineWidth","Normals","normals","normalsGlb","normalsRef","Socket","distanceRef","speedRef","socket","Manager","on","connected","message","distance","speed","flexDirection","flexWrap","justifyContent","config","duration","easing","easings","delay","from","to","SuzanneDefault","rotate","setRotate","suzanneGlb","nodes","materials","objectRef","geometry","Suzanne","SuzanneMatcapTexture","SuzanneNormalTexture","Textures","normalAnisotropy","step","normalOffset","normalRepeat","normalScale","normalTextureId","useNormalTexture","anisotropy","normalMap","SuzannePhysicalMaterial","Materials","Material","dithering","emissive","emissiveIntensity","refractionRatio","wireframe","clearcoat","clearcoatRoughness","ior","reflectivity","sheen","sheenRoughness","sheenTint","specularIntensity","specularTint","thickness","transmission","v","SuzanneStandardMaterial","SuzanneToonMaterial","SUZANNE","useSuzanne","enableSuzanne","MatcapTexture","NormalTexture","PhysicalMaterial","StandardMaterial","ToonMaterial","SvgLoaderShape","shape","SvgLoaderGroup","paths","path","shapes","toShapes","pathIndex","Shape","SvgLoader","setPaths","Promise","resolve","SVGLoader","load","data","then","Group","TextureDefault","cubeGlb","Cube_1","Cube_2","child","TextureBakedNormals","Plane","degree","TEXTURE","Texture","enableTexture","Tripod","i","MOVE_SPEED","World","enablePointerLockControls","pointerRef","addEventListeners","getObject","removeEventListeners","moveForward","forwardDirection","moveRight","rightDirection","upDirection","PointerLockControls","BOX_SIZE","extend","PositionalAudioHelper","WorldSound","audioRef","audioListener","AudioListener","audioBuffer","useLoader","AudioLoader","evolutionAudioFile","positionalAudioRef","setBuffer","setLoop","setVolume","PositionalAudio","loop","url","badassAudioFile","Wouter","useLocation","setLocation","route","WouterPathRouter","WouterPathWouter","currentLocation","location","hash","replace","useHashLocation","handler","useCallback","CONTROLS","Orbit","Trackball","Content","enableEffects","enableStats","Helpers","enableAxesHelper","enableGizmoHelper","enableGridHelper","useInputControls","COMPONENT","useComponent","enableInputControls","enableComponent","base","process","hook","OrbitControls","enablePan","enableRotate","enableZoom","TrackballControls","GizmoHelper","alignment","margin","GizmoViewport","axisColors","labelColor","Stats","height","luminanceThreshold","luminanceSmoothing","fallback","Logo","component","App","linear","shadows","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","render","document","getElementById"],"mappings":"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","file":"static/js/main.f50c0a3d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/animation.07175b80.glb\";","import { useEffect, useMemo, useRef } from \"react\";\r\nimport { AnimationMixer } from \"three\";\r\nimport { useFrame } from \"@react-three/fiber\";\r\nimport { useGLTF } from \"@react-three/drei\";\r\n\r\nimport animationGlb from \"./animation.glb\";\r\n\r\nconst Animation = () => {\r\n  const { animations, scene } = useGLTF(animationGlb, true);\r\n  const animationRef = useRef();\r\n  const mixer = useMemo(() => new AnimationMixer(), []);\r\n\r\n  useEffect(() => {\r\n    if (animationRef.current) {\r\n      mixer.clipAction(animations[0], animationRef.current).play();\r\n    }\r\n  }, [animations, mixer]);\r\n\r\n  useFrame((state, delta) => {\r\n    mixer.update(delta);\r\n  });\r\n\r\n  return <primitive object={scene} ref={animationRef} />;\r\n};\r\n\r\nexport default Animation;\r\n","import { useState } from \"react\";\r\nimport { Text } from \"@react-three/drei\";\r\n\r\nconst ButtonDefault = () => {\r\n  const [hover, setHover] = useState(false);\r\n  const [color, setColor] = useState(0x00ff00);\r\n\r\n  return (\r\n    <group\r\n      onClick={() => setColor(0xff0000)}\r\n      onDoubleClick={() => setColor(0x0000ff)}\r\n      onPointerOut={() => setHover(false)}\r\n      onPointerOver={() => setHover(true)}\r\n    >\r\n      <mesh>\r\n        <meshMatcapMaterial\r\n          color={color}\r\n          opacity={hover ? 0.75 : 1}\r\n          transparent={true}\r\n        />\r\n        <planeGeometry args={[1, 0.5]} />\r\n      </mesh>\r\n      <Text color=\"white\" fontSize={0.2} position={[0, 0, 0.01]}>\r\n        Click Me!\r\n      </Text>\r\n    </group>\r\n  );\r\n};\r\n\r\nexport default ButtonDefault;\r\n","import { useState } from \"react\";\r\nimport { MathUtils } from \"three\";\r\nimport { Text } from \"@react-three/drei\";\r\nimport { animated, useSpring } from \"@react-spring/three\";\r\n\r\nconst Spring = (props) => {\r\n  const [hover, setHover] = useState(false);\r\n  const [toggle, setToggle] = useState(false);\r\n  const [colorCurrent, setColorCurrent] = useState(0xff0000);\r\n  const { opacity, rotation, scale } = useSpring({\r\n    opacity: toggle ? 0.5 : 0.2,\r\n    rotation: toggle ? [MathUtils.degToRad(-45), 0, 0] : [0, 0, 0],\r\n    scale: hover ? [1.5, 1.25, 1] : [1, 1, 1],\r\n  });\r\n\r\n  return (\r\n    <animated.group\r\n      {...props}\r\n      onClick={() => setToggle(!toggle)}\r\n      onDoubleClick={() => setColorCurrent(colorCurrent >> 8)}\r\n      onPointerOut={() => setHover(false)}\r\n      onPointerOver={() => setHover(true)}\r\n      rotation={rotation}\r\n    >\r\n      <animated.mesh scale={scale}>\r\n        <planeGeometry args={[1, 0.5]} />\r\n        <animated.meshBasicMaterial\r\n          color={0xff0000}\r\n          opacity={opacity}\r\n          transparent={true}\r\n        />\r\n      </animated.mesh>\r\n      <Text color=\"white\" fontSize={0.2} position={[0, 0, 0.01]}>\r\n        Click Me!\r\n      </Text>\r\n    </animated.group>\r\n  );\r\n};\r\n\r\nexport default Spring;\r\n","import { useControls } from \"leva\";\r\n\r\nimport Default from \"./Default\";\r\nimport Spring from \"./Spring\";\r\n\r\nconst BUTTON = {\r\n  Default: \"Default\",\r\n  Spring: \"Spring\",\r\n};\r\n\r\nconst Button = () => {\r\n  const { useButton } = useControls(\"Components\", {\r\n    useButton: {\r\n      label: \"Button\",\r\n      options: BUTTON,\r\n      value: BUTTON.Default,\r\n    },\r\n  });\r\n\r\n  function enableButton(name) {\r\n    return useButton === name;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {enableButton(BUTTON.Default) && <Default />}\r\n      {enableButton(BUTTON.Spring) && <Spring />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","const AZERTY = {\r\n  LEFT: \"KeyQ\",\r\n  UP: \"KeyZ\",\r\n};\r\nconst DIRECTION = {\r\n  BACK: -1,\r\n  DOWN: -1,\r\n  FORWARD: 1,\r\n  LEFT: -1,\r\n  NONE: 0,\r\n  RIGHT: 1,\r\n  UP: 1,\r\n};\r\nconst QWERTY = {\r\n  LEFT: \"KeyA\",\r\n  UP: \"KeyW\",\r\n};\r\n\r\nclass KeyboardControls {\r\n  static #forwardDirection = DIRECTION.NONE;\r\n  static #keyboard = QWERTY;\r\n  static #rightDirection = DIRECTION.NONE;\r\n  static #upDirection = DIRECTION.NONE;\r\n\r\n  static get forwardDirection() {\r\n    return this.#forwardDirection;\r\n  }\r\n\r\n  static get rightDirection() {\r\n    return this.#rightDirection;\r\n  }\r\n\r\n  static get upDirection() {\r\n    return this.#upDirection;\r\n  }\r\n\r\n  static keyDownHandler(event) {\r\n    console.log(\"KeyboardControls: keyDownHandler\", `'${event.code}'`);\r\n    switch (event.code) {\r\n      case \"ArrowDown\":\r\n      case \"KeyS\":\r\n        KeyboardControls.#forwardDirection = DIRECTION.BACK;\r\n        break;\r\n      case \"ArrowLeft\":\r\n      case KeyboardControls.#keyboard.LEFT:\r\n        KeyboardControls.#rightDirection = DIRECTION.LEFT;\r\n        break;\r\n      case \"ArrowRight\":\r\n      case \"KeyD\":\r\n        KeyboardControls.#rightDirection = DIRECTION.RIGHT;\r\n        break;\r\n      case \"ArrowUp\":\r\n      case KeyboardControls.#keyboard.UP:\r\n        KeyboardControls.#forwardDirection = DIRECTION.FORWARD;\r\n        break;\r\n      case \"KeyF\":\r\n        KeyboardControls.#upDirection = DIRECTION.DOWN;\r\n        break;\r\n      case \"KeyR\":\r\n        KeyboardControls.#upDirection = DIRECTION.UP;\r\n        break;\r\n      default:\r\n    }\r\n  }\r\n\r\n  static keyUpHandler(event) {\r\n    console.log(\"KeyboardControls: keyUpHandler\", `'${event.code}'`);\r\n    switch (event.code) {\r\n      case \"ArrowDown\":\r\n      case \"ArrowUp\":\r\n      case \"KeyS\":\r\n      case KeyboardControls.#keyboard.UP:\r\n        KeyboardControls.#forwardDirection = DIRECTION.NONE;\r\n        break;\r\n      case \"ArrowLeft\":\r\n      case \"ArrowRight\":\r\n      case \"KeyD\":\r\n      case KeyboardControls.#keyboard.LEFT:\r\n        KeyboardControls.#rightDirection = DIRECTION.NONE;\r\n        break;\r\n      case \"KeyF\":\r\n      case \"KeyR\":\r\n        KeyboardControls.#upDirection = DIRECTION.NONE;\r\n        break;\r\n      default:\r\n    }\r\n  }\r\n\r\n  static addEventListeners() {\r\n    console.info(\"KeyboardControls: addEventListeners\");\r\n    window.addEventListener(\"keydown\", KeyboardControls.keyDownHandler);\r\n    window.addEventListener(\"keyup\", KeyboardControls.keyUpHandler);\r\n  }\r\n\r\n  static removeEventListeners() {\r\n    console.info(\"KeyboardControls: removeEventListeners\");\r\n    window.removeEventListener(\"keydown\", KeyboardControls.keyDownHandler);\r\n    window.removeEventListener(\"keyup\", KeyboardControls.keyUpHandler);\r\n  }\r\n\r\n  static setKeyboardAzerty() {\r\n    console.log(this.#keyboard);\r\n    this.#keyboard = AZERTY;\r\n    console.log(this.#keyboard);\r\n  }\r\n\r\n  static setKeyboardQwerty() {\r\n    this.#keyboard = QWERTY;\r\n  }\r\n}\r\n\r\nexport default KeyboardControls;\r\n","import { MathUtils } from \"three\";\r\n\r\nclass MathCircle {\r\n  #radius = 1;\r\n  #angle = 0;\r\n\r\n  constructor(radius = 1) {\r\n    this.#radius = radius;\r\n  }\r\n\r\n  get angle() {\r\n    return this.#angle;\r\n  }\r\n\r\n  set angle(degrees) {\r\n    this.#angle = MathUtils.degToRad(degrees);\r\n  }\r\n\r\n  getCoordinates(degrees) {\r\n    this.angle = degrees;\r\n    const x = Math.cos(this.angle) * this.#radius;\r\n    const y = Math.sin(this.angle) * this.#radius;\r\n\r\n    return { x, y };\r\n  }\r\n}\r\n\r\nexport default MathCircle;\r\n","class ZeroFill {\r\n  #number;\r\n  #postfix;\r\n  #zeros;\r\n\r\n  constructor(number = 0, zeros = 0, postfix = \"\") {\r\n    this.number = number;\r\n    this.#postfix = postfix;\r\n    this.#zeros = zeros;\r\n  }\r\n\r\n  get number() {\r\n    return this.zeroFill(this.#number);\r\n  }\r\n\r\n  set number(number) {\r\n    this.#number = Math.floor(number).toString();\r\n  }\r\n\r\n  toString() {\r\n    return this.number + this.#postfix;\r\n  }\r\n\r\n  zeroFill(string) {\r\n    while (string.length < this.#zeros) {\r\n      string = `0${string}`;\r\n    }\r\n    return string;\r\n  }\r\n}\r\n\r\nexport default ZeroFill;\r\n","import { useRef } from \"react\";\r\nimport { DoubleSide, MathUtils } from \"three\";\r\nimport { useFrame } from \"@react-three/fiber\";\r\nimport { Text } from \"@react-three/drei\";\r\nimport { MathCircle } from \"App/utils\";\r\n\r\nfunction isHour(tick) {\r\n  return !(tick % 5);\r\n}\r\n\r\nconst HH = 12;\r\nconst MM = 60;\r\nconst SS = 60;\r\n\r\nconst CLOCK_SIZE = 2;\r\n\r\nconst CLOCK = {\r\n  HAND: {\r\n    HH: {\r\n      LENGTH: 0.6 * CLOCK_SIZE,\r\n      WIDTH: 0.02 * CLOCK_SIZE,\r\n    },\r\n    MM: { LENGTH: 0.7 * CLOCK_SIZE },\r\n    SS: { COLOR: 0xffcc66, LENGTH: 0.8 * CLOCK_SIZE },\r\n    THICKNESS: 0.02 * CLOCK_SIZE,\r\n  },\r\n  MARK: {\r\n    HH: {\r\n      COLOR: 0xff0000,\r\n      LENGTH: 0.1 * CLOCK_SIZE,\r\n      WIDTH: 0.02 * CLOCK_SIZE,\r\n    },\r\n    MM: {\r\n      COLOR: 0xffffff,\r\n      LENGTH: 0.08 * CLOCK_SIZE,\r\n      WIDTH: 0.01 * CLOCK_SIZE,\r\n    },\r\n    OFFSET: 0.05 * CLOCK_SIZE,\r\n  },\r\n};\r\n\r\n/**\r\n * Clock using standard React Three Fiber JSX\r\n */\r\nconst ClockAnalogue = (props) => {\r\n  const clockRef = useRef();\r\n  const handHoursRef = useRef();\r\n  const handMinutesRef = useRef();\r\n  const handSecondsRef = useRef();\r\n\r\n  const angleStart = MathUtils.degToRad(90);\r\n\r\n  useFrame(() => {\r\n    const d = new Date();\r\n    if (handHoursRef.current) {\r\n      handHoursRef.current.rotation.z = MathUtils.degToRad(\r\n        (d.getHours() + d.getMinutes() / MM) * -(360 / HH)\r\n      );\r\n    }\r\n    if (handMinutesRef.current) {\r\n      handMinutesRef.current.rotation.z = MathUtils.degToRad(\r\n        d.getMinutes() * -(360 / MM)\r\n      );\r\n    }\r\n    if (handSecondsRef.current) {\r\n      handSecondsRef.current.rotation.z = MathUtils.degToRad(\r\n        d.getSeconds() * -(360 / SS)\r\n      );\r\n    }\r\n  });\r\n\r\n  return (\r\n    <group ref={clockRef} {...props}>\r\n      <group>\r\n        <Text\r\n          color=\"black\"\r\n          fontSize={0.1 * CLOCK_SIZE}\r\n          position={[0, -0.25, 0.01].map((value) => value * CLOCK_SIZE)}\r\n        >\r\n          Arteveldehogeschool\r\n        </Text>\r\n        {Array(HH)\r\n          .fill(null)\r\n          .map((value, index) => {\r\n            const c = new MathCircle(CLOCK.MARK.HH.LENGTH * 7.5);\r\n            const angle = (index * 360) / HH + 90;\r\n            const { x, y } = c.getCoordinates(angle);\r\n            return (\r\n              <Text\r\n                color={CLOCK.HAND.SS.COLOR}\r\n                fontSize={0.1 * CLOCK_SIZE}\r\n                key={index}\r\n                position={[x, y, 0.01]}\r\n                scale={Array(3).fill(1)}\r\n              >\r\n                {(12 - index).toString()}\r\n              </Text>\r\n            );\r\n          })}\r\n      </group>\r\n      <group rotation={[0, 0, angleStart]}>\r\n        <mesh receiveShadow={true}>\r\n          <circleGeometry args={[CLOCK_SIZE, MM]} />\r\n          <meshStandardMaterial\r\n            opacity={0.25}\r\n            side={DoubleSide}\r\n            transparent={true}\r\n          />\r\n        </mesh>\r\n        <group position={[0, 0, CLOCK.HAND.THICKNESS / 2]}>\r\n          <group position={[0, 0, CLOCK.HAND.THICKNESS / 2]} ref={handHoursRef}>\r\n            <mesh castShadow={true} position={[CLOCK.HAND.HH.LENGTH / 2, 0, 0]}>\r\n              <boxGeometry\r\n                args={[\r\n                  CLOCK.HAND.HH.LENGTH,\r\n                  0.06 * CLOCK_SIZE,\r\n                  CLOCK.HAND.THICKNESS,\r\n                ]}\r\n              />\r\n              <meshStandardMaterial />\r\n            </mesh>\r\n          </group>\r\n          <group\r\n            position={[0, 0, CLOCK.HAND.THICKNESS * 2]}\r\n            ref={handMinutesRef}\r\n          >\r\n            <mesh castShadow={true} position={[CLOCK.HAND.MM.LENGTH / 2, 0, 0]}>\r\n              <boxGeometry\r\n                args={[CLOCK.HAND.MM.LENGTH, 0.04, CLOCK.HAND.THICKNESS]}\r\n              />\r\n              <meshStandardMaterial />\r\n            </mesh>\r\n          </group>\r\n          <group\r\n            position={[\r\n              0,\r\n              0,\r\n              CLOCK.HAND.THICKNESS * 3 + CLOCK.HAND.THICKNESS / 2,\r\n            ]}\r\n            ref={handSecondsRef}\r\n          >\r\n            <mesh castShadow={true} position={[CLOCK.HAND.SS.LENGTH / 2, 0, 0]}>\r\n              <boxGeometry\r\n                args={[CLOCK.HAND.SS.LENGTH, 0.02, CLOCK.HAND.THICKNESS]}\r\n              />\r\n              <meshStandardMaterial color={CLOCK.HAND.SS.COLOR} />\r\n            </mesh>\r\n          </group>\r\n        </group>\r\n        {Array(MM)\r\n          .fill(null)\r\n          .map((value, index) => {\r\n            const radians = MathUtils.degToRad((360 / MM) * index);\r\n            return (\r\n              <group\r\n                key={index}\r\n                rotation={[0, 0, radians]}\r\n                position={[0, 0, 0.005]}\r\n              >\r\n                <mesh\r\n                  position={[\r\n                    CLOCK_SIZE -\r\n                      CLOCK.MARK.OFFSET -\r\n                      (isHour(index)\r\n                        ? CLOCK.MARK.HH.LENGTH - 0.01\r\n                        : CLOCK.MARK.HH.LENGTH) /\r\n                        2,\r\n                    0,\r\n                    0,\r\n                  ]}\r\n                >\r\n                  <boxGeometry\r\n                    args={[\r\n                      isHour(index)\r\n                        ? CLOCK.MARK.HH.LENGTH\r\n                        : CLOCK.MARK.MM.LENGTH,\r\n                      isHour(index) ? CLOCK.MARK.HH.WIDTH : CLOCK.MARK.MM.WIDTH,\r\n                      0.01,\r\n                    ]}\r\n                  />\r\n                  <meshStandardMaterial\r\n                    color={\r\n                      index === 0\r\n                        ? 0x0000ff\r\n                        : isHour(index)\r\n                        ? CLOCK.MARK.HH.COLOR\r\n                        : CLOCK.MARK.MM.COLOR\r\n                    }\r\n                  />\r\n                </mesh>\r\n              </group>\r\n            );\r\n          })}\r\n        <mesh\r\n          castShadow={true}\r\n          position={[0, 0, 0.05]}\r\n          rotation={[-90, 0, 0].map((degrees) => MathUtils.degToRad(degrees))}\r\n        >\r\n          <cylinderGeometry args={[0.1, 0.05, CLOCK.HAND.THICKNESS * 7, 36]} />\r\n          <meshStandardMaterial />\r\n        </mesh>\r\n      </group>\r\n    </group>\r\n  );\r\n};\r\n\r\nexport default ClockAnalogue;\r\n","import { useEffect, useRef } from \"react\";\r\nimport { MathUtils } from \"three\";\r\nimport { useFrame } from \"@react-three/fiber\";\r\nimport { Text } from \"@react-three/drei\";\r\n\r\nconst ClockDigital = (props) => {\r\n  const clockRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (clockRef.current) {\r\n      clockRef.current.rotation.x = MathUtils.degToRad(-30);\r\n    }\r\n  }, []);\r\n\r\n  useFrame(() => {\r\n    if (clockRef.current) {\r\n      clockRef.current.text = new Date().toLocaleTimeString();\r\n    }\r\n  });\r\n\r\n  return <Text fontSize={2} ref={clockRef} {...props} />;\r\n};\r\n\r\nexport default ClockDigital;\r\n","import { useControls } from \"leva\";\r\n\r\nimport Analogue from \"./Analogue\";\r\nimport Digital from \"./Digital\";\r\n\r\nconst CLOCK = {\r\n  Analogue: \"Analogue\",\r\n  Digital: \"Digital\",\r\n};\r\n\r\nconst Clock = () => {\r\n  const { useClock } = useControls(\"Components\", {\r\n    useClock: {\r\n      label: \"Clock\",\r\n      options: CLOCK,\r\n      value: CLOCK.Analogue,\r\n    },\r\n  });\r\n\r\n  const enableClock = (name) => {\r\n    return useClock === name;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {enableClock(CLOCK.Analogue) && <Analogue />}\r\n      {enableClock(CLOCK.Digital) && <Digital />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Clock;\r\n","import { useState } from \"react\";\r\nimport { animated, useSpring } from \"@react-spring/three\";\r\n\r\nconst Cube = (props) => {\r\n  const colors = [\"#f00\", \"#ff0\", \"#0f0\", \"#0ff\", \"#00f\", \"#f0f\"];\r\n  const color = colors[Math.floor(Math.random() * colors.length)];\r\n  const [toggle, setToggle] = useState(true);\r\n  const { opacity, position } = useSpring({\r\n    opacity: toggle ? 1 : 0.5,\r\n    position: toggle ? [0, 0, 0] : getPosition(),\r\n  });\r\n\r\n  function getPosition() {\r\n    return [4, 4, 0].map((value) => (Math.random() * 2 - 1) * value);\r\n  }\r\n\r\n  return (\r\n    <animated.mesh\r\n      {...props}\r\n      onClick={() => setToggle(!toggle)}\r\n      position={position}\r\n    >\r\n      <boxGeometry args={[1, 1, 1]} />\r\n      <animated.meshMatcapMaterial\r\n        color={color}\r\n        opacity={opacity}\r\n        transparent={true}\r\n      />\r\n    </animated.mesh>\r\n  );\r\n};\r\n\r\nexport default Cube;\r\n","import { MathUtils } from \"three\";\r\nimport { Plane } from \"@react-three/drei\";\r\n\r\nconst Face = (props) => {\r\n  return (\r\n    <Plane\r\n      args={[10, 10]}\r\n      rotation={[MathUtils.degToRad(-90), 0, 0]}\r\n      {...props}\r\n    >\r\n      <meshStandardMaterial />\r\n    </Plane>\r\n  );\r\n};\r\n\r\nexport default Face;\r\n","// @todo Rotate gauge based on range, in stead of compensating rotation in calculation.\r\nimport { useRef } from \"react\";\r\nimport { MathUtils } from \"three\";\r\nimport { useFrame } from \"@react-three/fiber\";\r\nimport { Box, Circle, Cone, Cylinder } from \"@react-three/drei\";\r\n\r\nconst ANGLE_RANGE = 270;\r\nconst NEEDLE_STEP = {\r\n  DOWN: -250,\r\n  UP: 60,\r\n};\r\n\r\nconst Gauge = (props) => {\r\n  const TICK_MARKS = [\r\n    { color: \"green\", label: \"0\", ref: useRef(), value: 0 },\r\n    { color: \"white\", label: \"10\", ref: useRef(), value: 1000 },\r\n    { color: \"white\", label: \"20\", ref: useRef(), value: 2000 },\r\n    { color: \"white\", label: \"30\", ref: useRef(), value: 3000 },\r\n    { color: \"white\", label: \"40\", ref: useRef(), value: 4000 },\r\n    { color: \"white\", label: \"50\", ref: useRef(), value: 5000 },\r\n    { color: \"orange\", label: \"60\", ref: useRef(), value: 6000 },\r\n    { color: \"red\", label: \"70\", ref: useRef(), value: 7000 },\r\n    { color: \"red\", label: \"80\", ref: useRef(), value: 8000 },\r\n  ];\r\n  const angleStep = ANGLE_RANGE / (TICK_MARKS.length - 1);\r\n  const angleStart = MathUtils.degToRad(-(90 + (360 - ANGLE_RANGE) / 2));\r\n  const valueRange = (TICK_MARKS.length - 1) * 1000;\r\n  const valueStep = ANGLE_RANGE / valueRange;\r\n  const needleRef = useRef();\r\n  let needleAngle = 0;\r\n  let needleValue = 0;\r\n  let needleStep = NEEDLE_STEP.UP;\r\n\r\n  useFrame(() => {\r\n    if (needleValue <= 0) {\r\n      needleStep = NEEDLE_STEP.UP;\r\n    } else if (valueRange <= needleValue) {\r\n      needleStep = NEEDLE_STEP.DOWN;\r\n    }\r\n    needleValue += needleStep;\r\n    needleAngle = MathUtils.degToRad(-(valueStep * needleValue));\r\n    needleRef.current.rotation.z = needleAngle;\r\n\r\n    TICK_MARKS.forEach((tickMark) => {\r\n      tickMark.ref.current.children[0].material.color.setColorName(\r\n        tickMark.value <= needleValue ? \"blue\" : tickMark.color\r\n      );\r\n    });\r\n  });\r\n\r\n  return (\r\n    <group {...props} rotation={[0, 0, angleStart]}>\r\n      <Circle args={[1.2, 62]} position={[0, 0, 0]} receiveShadow={true}>\r\n        <meshStandardMaterial opacity={0.25} transparent={true} />\r\n      </Circle>\r\n      {TICK_MARKS.map((tickMark, index) => {\r\n        return (\r\n          <group\r\n            key={index}\r\n            ref={tickMark.ref}\r\n            rotation={[0, 0, -angleStep * index].map((degrees) =>\r\n              MathUtils.degToRad(degrees)\r\n            )}\r\n          >\r\n            <Box args={[0.25, 0.05, 0.02]} position={[1, 0, 0.01]}>\r\n              <meshStandardMaterial\r\n                color={tickMark.color}\r\n                metalness={0.1}\r\n                opacity={0.5}\r\n                roughness={0.6}\r\n                transparent={true}\r\n              />\r\n            </Box>\r\n          </group>\r\n        );\r\n      })}\r\n\r\n      <group position={[0, 0, 0.05]}>\r\n        <group ref={needleRef}>\r\n          <group\r\n            rotation={[0, 0, -90].map((degrees) => MathUtils.degToRad(degrees))}\r\n          >\r\n            <Cone args={[0.03, 1, 4]} castShadow={true} position={[0, 0.5, 0]}>\r\n              <meshStandardMaterial\r\n                color=\"orange\"\r\n                metalness={0.1}\r\n                roughness={0.6}\r\n              />\r\n            </Cone>\r\n          </group>\r\n        </group>\r\n        <Cylinder\r\n          args={[0.1, 0.05, 0.1, 36]}\r\n          castShadow={true}\r\n          rotation={[-90, 0, 0].map((degrees) => MathUtils.degToRad(degrees))}\r\n        >\r\n          <meshStandardMaterial />\r\n        </Cylinder>\r\n      </group>\r\n    </group>\r\n  );\r\n};\r\n\r\nexport default Gauge;\r\n","export default __webpack_public_path__ + \"static/media/UV_Grid_Sm.8ab40f71.jpg\";","import { DoubleSide, Vector2 } from \"three\";\r\nimport { useTexture } from \"@react-three/drei\";\r\n\r\nimport uvGrid from \"./UV_Grid_Sm.jpg\";\r\n\r\nconst ImageDefault = () => {\r\n  const texture = useTexture(uvGrid, true);\r\n  texture.offset = new Vector2(0, 0);\r\n  texture.repeat = new Vector2(1, 1);\r\n\r\n  return (\r\n    <mesh>\r\n      <planeGeometry args={[1, 1, 1]} />\r\n      <meshStandardMaterial center map={texture} side={DoubleSide} />\r\n    </mesh>\r\n  );\r\n};\r\n\r\nexport default ImageDefault;\r\n","export default __webpack_public_path__ + \"static/media/arteveldehogeschool_logo.6220cd57.svg\";","export default __webpack_public_path__ + \"static/media/SVG_logo.e87754b4.svg\";","import { SvgLoader } from \"App/components\";\r\n\r\nimport logoNl from \"./arteveldehogeschool_logo.svg\";\r\nimport svgLogo from \"./SVG_logo.svg\";\r\n\r\nconst svgLogoUrl =\r\n  \"https://upload.wikimedia.org/wikipedia/commons/0/02/SVG_logo.svg\";\r\n\r\nconst ImageSvg = (props) => {\r\n  const scale = 0.0075;\r\n\r\n  return (\r\n    <>\r\n      <SvgLoader position={[0, 0, 0]} scale={scale} source={svgLogoUrl} />;\r\n      <SvgLoader position={[0, 0, -1]} scale={scale} source={logoNl} />;\r\n      <SvgLoader position={[0, 0, -2]} scale={scale} source={svgLogo} />;\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImageSvg;\r\n","import { useControls } from \"leva\";\r\n\r\nimport Default from \"./Default\";\r\nimport Svg from \"./Svg\";\r\n\r\nconst IMAGE = {\r\n  Default: \"Default\",\r\n  Svg: \"Svg\",\r\n};\r\n\r\nconst Image = () => {\r\n  const { useImage } = useControls(\"Components\", {\r\n    useImage: {\r\n      label: \"Image\",\r\n      options: IMAGE,\r\n      value: IMAGE.Default,\r\n    },\r\n  });\r\n\r\n  function enableImage(name) {\r\n    return useImage === name;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {enableImage(IMAGE.Default) && <Default />}\r\n      {enableImage(IMAGE.Svg) && <Svg />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Image;\r\n","import { MathUtils } from \"three\";\r\n\r\nconst LightingDemo = () => {\r\n  return (\r\n    <>\r\n      <ambientLight color={0xffffff} intensity={0.1} />\r\n      <directionalLight\r\n        castShadow={true}\r\n        color={0xffffff}\r\n        intensity={1}\r\n        position={[4, 4, 1]}\r\n      />\r\n      <hemisphereLight\r\n        castShadow={true}\r\n        color={0xffffff}\r\n        groundColor={0xffffff}\r\n        position={[0, 1, 0]}\r\n      />\r\n      <pointLight\r\n        castShadow={true}\r\n        color={0xffcc77}\r\n        intensity={0.5}\r\n        position={[-4, 1, -4]}\r\n      />\r\n      <spotLight\r\n        angle={MathUtils.degToRad(30)}\r\n        castShadow={true}\r\n        color={0xffcc77}\r\n        intensity={1}\r\n        penumbra={0.5}\r\n        position={[0, 4, 0]}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LightingDemo;\r\n","import { useRef } from \"react\";\r\nimport {\r\n  DirectionalLightHelper,\r\n  HemisphereLightHelper,\r\n  MathUtils,\r\n  Object3D,\r\n  PointLightHelper,\r\n  SpotLightHelper,\r\n} from \"three\";\r\nimport { useFrame, useThree } from \"@react-three/fiber\";\r\nimport { useHelper } from \"@react-three/drei\";\r\nimport { folder, useControls } from \"leva\";\r\n\r\nconst LightingDemoHelpers = () => {\r\n  const ambientLight = useControls(\"Lightings\", {\r\n    \"Ambient Light\": folder({\r\n      color: { label: \"Color\", value: \"#ffffff\" },\r\n      intensity: {\r\n        label: \"Intensity\",\r\n        max: 1,\r\n        min: 0,\r\n        value: 0.1,\r\n      },\r\n    }),\r\n  });\r\n  const directionalLight = useControls(\"Lightings\", {\r\n    \"Directional Light\": folder({\r\n      castShadow: { label: \"Cast Shadow\", value: true },\r\n      color: { label: \"Color\", value: \"#ffffff\" },\r\n      intensity: {\r\n        label: \"Intensity\",\r\n        max: 1,\r\n        min: 0,\r\n        value: 1,\r\n      },\r\n      position: {\r\n        label: \"Position\",\r\n        value: { x: 4, y: 4, z: 1 },\r\n      },\r\n    }),\r\n  });\r\n  const hemisphereLight = useControls(\"Lightings\", {\r\n    \"Hemisphere Light\": folder({\r\n      castShadow: { label: \"Cast Shadow\", value: true },\r\n      color: { label: \"Sky Color\", value: \"#ffffff\" },\r\n      groundColor: { label: \"Ground Color\", value: \"#ffffff\" },\r\n      intensity: {\r\n        label: \"Intensity\",\r\n        max: 1,\r\n        min: 0,\r\n        value: 1,\r\n      },\r\n      position: {\r\n        label: \"Position\",\r\n        value: { x: 0, y: 1, z: 0 },\r\n      },\r\n    }),\r\n  });\r\n  const pointLight = useControls(\"Lightings\", {\r\n    \"Point Light\": folder({\r\n      castShadow: { label: \"Cast Shadow\", value: true },\r\n      color: { label: \"Color\", value: \"#ffcc77\" },\r\n      intensity: { label: \"Intensity\", max: 20, min: 0, value: 0.5 },\r\n      position: { label: \"Position\", value: { x: -4, y: 1, z: -4 } },\r\n    }),\r\n  });\r\n  const spotLight = useControls(\"Lightings\", {\r\n    Spotlight: folder({\r\n      castShadow: { label: \"Cast Shadow\", value: true },\r\n      color: { label: \"Color\", value: \"#ffcc77\" },\r\n      intensity: { label: \"Intensity\", max: 20, min: 0, value: 1 },\r\n      penumbra: { label: \"Penumbra\", value: 0.5 },\r\n      position: { label: \"Position\", value: { x: 0, y: 4, z: 0 } },\r\n      target: { label: \"Target\", value: { x: 0, y: 0, z: 0 } },\r\n    }),\r\n  });\r\n\r\n  const { scene } = useThree();\r\n  const target = new Object3D();\r\n  scene.add(target);\r\n\r\n  const directionalLightRef = useRef();\r\n  const hemisphereLightRef = useRef();\r\n  const pointLightRef = useRef();\r\n  const spotLightRef = useRef();\r\n  const helperSize = 0.5;\r\n  useHelper(\r\n    directionalLightRef,\r\n    DirectionalLightHelper,\r\n    helperSize,\r\n    directionalLight.color\r\n  );\r\n  useHelper(pointLightRef, PointLightHelper, helperSize, pointLight.color);\r\n  useHelper(spotLightRef, SpotLightHelper, spotLight.color);\r\n  useHelper(hemisphereLightRef, HemisphereLightHelper, helperSize);\r\n\r\n  useFrame(() => {\r\n    target.translateX(spotLight.target.x);\r\n    target.translateZ(spotLight.target.z);\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <ambientLight\r\n        color={ambientLight.color}\r\n        intensity={ambientLight.intensity}\r\n      />\r\n      <directionalLight\r\n        castShadow={directionalLight.castShadow}\r\n        color={directionalLight.color}\r\n        intensity={directionalLight.intensity}\r\n        position={[\r\n          directionalLight.position.x,\r\n          directionalLight.position.y,\r\n          directionalLight.position.z,\r\n        ]}\r\n        ref={directionalLightRef}\r\n      />\r\n      <hemisphereLight\r\n        castShadow={hemisphereLight.castShadow}\r\n        color={hemisphereLight.color}\r\n        groundColor={hemisphereLight.groundColor}\r\n        intensity={hemisphereLight.intensity}\r\n        position={[\r\n          hemisphereLight.position.x,\r\n          hemisphereLight.position.y,\r\n          hemisphereLight.position.z,\r\n        ]}\r\n        ref={hemisphereLightRef}\r\n      />\r\n      <pointLight\r\n        castShadow={pointLight.castShadow}\r\n        color={pointLight.color}\r\n        intensity={pointLight.intensity}\r\n        position={[\r\n          pointLight.position.x,\r\n          pointLight.position.y,\r\n          pointLight.position.z,\r\n        ]}\r\n        ref={pointLightRef}\r\n      />\r\n      <spotLight\r\n        angle={MathUtils.degToRad(30)}\r\n        castShadow={spotLight.castShadow}\r\n        color={spotLight.color}\r\n        intensity={spotLight.intensity}\r\n        penumbra={spotLight.penumbra}\r\n        position={[\r\n          spotLight.position.x,\r\n          spotLight.position.y,\r\n          spotLight.position.z,\r\n        ]}\r\n        ref={spotLightRef}\r\n        target={target}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LightingDemoHelpers;\r\n","const LightingStudio = () => {\r\n  return (\r\n    <>\r\n      <ambientLight intensity={0.1} />\r\n      <directionalLight\r\n        castShadow={true}\r\n        color=\"hsl(0, 0%, 70%)\"\r\n        intensity={0.4}\r\n        position={[0, 2, 4]}\r\n      />\r\n      <directionalLight\r\n        castShadow={true}\r\n        color=\"hsl(210, 100%, 70%)\"\r\n        position={[-4, 0, 0]}\r\n      />\r\n      <directionalLight\r\n        castShadow={true}\r\n        color=\"hsl(30, 100%, 70%)\"\r\n        position={[4, 0, 0]}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LightingStudio;\r\n","import { useRef } from \"react\";\r\nimport { DirectionalLightHelper } from \"three\";\r\nimport { folder, useControls } from \"leva\";\r\nimport { useHelper } from \"@react-three/drei\";\r\n\r\nconst LightingStudioHelpers = () => {\r\n  const {\r\n    ambientLightColor,\r\n    ambientLightIntensity,\r\n    frontLightColor,\r\n    frontLightIntensity,\r\n    leftLightColor,\r\n    leftLightIntensity,\r\n    rightLightColor,\r\n    rightLightIntensity,\r\n  } = useControls(\"Lightings\", {\r\n    \"Ambient Light\": folder({\r\n      ambientLightColor: { label: \"Color\", value: \"hsl(0, 0%, 100%)\" },\r\n      ambientLightIntensity: { label: \"Intensity\", max: 1, min: 0, value: 0.1 },\r\n    }),\r\n    \"Front Light\": folder({\r\n      frontLightColor: { label: \"Color\", value: \"hsl(0, 0%, 70%)\" },\r\n      frontLightIntensity: { label: \"Intensity\", max: 2, min: 0, value: 0.4 },\r\n    }),\r\n    \"Left Light\": folder({\r\n      leftLightColor: { label: \"Color\", value: \"hsl(210, 100%, 70%)\" },\r\n      leftLightIntensity: { label: \"Intensity\", max: 2, min: 0, value: 1 },\r\n    }),\r\n    \"Right Light\": folder({\r\n      rightLightColor: { label: \"Color\", value: \"hsl(30, 100%, 70%)\" },\r\n      rightLightIntensity: { label: \"Intensity\", max: 2, min: 0, value: 1 },\r\n    }),\r\n  });\r\n\r\n  const frontLightRef = useRef();\r\n  const leftLightRef = useRef();\r\n  const rightLightRef = useRef();\r\n  const helperSize = 0.5;\r\n  useHelper(frontLightRef, DirectionalLightHelper, helperSize, frontLightColor);\r\n  useHelper(leftLightRef, DirectionalLightHelper, helperSize, leftLightColor);\r\n  useHelper(rightLightRef, DirectionalLightHelper, helperSize, rightLightColor);\r\n\r\n  return (\r\n    <>\r\n      <ambientLight\r\n        color={ambientLightColor}\r\n        intensity={ambientLightIntensity}\r\n      />\r\n      <directionalLight\r\n        castShadow={true}\r\n        color={frontLightColor}\r\n        intensity={frontLightIntensity}\r\n        position={[0, 2, 4]}\r\n        ref={frontLightRef}\r\n      />\r\n      <directionalLight\r\n        castShadow={true}\r\n        color={leftLightColor}\r\n        intensity={leftLightIntensity}\r\n        position={[-4, 0, 0]}\r\n        ref={leftLightRef}\r\n      />\r\n      <directionalLight\r\n        castShadow={true}\r\n        color={rightLightColor}\r\n        intensity={rightLightIntensity}\r\n        position={[4, 0, 0]}\r\n        ref={rightLightRef}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LightingStudioHelpers;\r\n","const LightingThreePoint = () => {\r\n  return (\r\n    <>\r\n      <ambientLight intensity={0.1} />\r\n      <spotLight\r\n        castShadow={true}\r\n        color=\"hsl(0, 0%, 70%)\"\r\n        intensity={0.75}\r\n        position={[4, 2, -4]}\r\n      />\r\n      <spotLight\r\n        castShadow={true}\r\n        color=\"hsl(210, 100%, 70%)\"\r\n        intensity={0.75}\r\n        position={[-4, 2, 4]}\r\n      />\r\n      <spotLight\r\n        castShadow={true}\r\n        color=\"hsl(30, 100%, 70%)\"\r\n        intensity={0.75}\r\n        position={[4, 2, 4]}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LightingThreePoint;\r\n","import { useRef } from \"react\";\r\nimport { SpotLightHelper } from \"three\";\r\nimport { useHelper } from \"@react-three/drei\";\r\nimport { folder, useControls } from \"leva\";\r\n\r\nconst LightingThreePointHelpers = () => {\r\n  const {\r\n    ambientLightColor,\r\n    ambientLightIntensity,\r\n    backLightColor,\r\n    backLightIntensity,\r\n    fillLightColor,\r\n    fillLightIntensity,\r\n    keyLightColor,\r\n    keyLightIntensity,\r\n  } = useControls(\"Lightings\", {\r\n    \"Ambient Light\": folder({\r\n      ambientLightColor: { label: \"Color\", value: \"hsl(0, 0%, 100%)\" },\r\n      ambientLightIntensity: {\r\n        label: \"Intensity\",\r\n        max: 1,\r\n        min: 0,\r\n        value: 0.1,\r\n      },\r\n    }),\r\n    \"Back Light\": folder({\r\n      backLightColor: { label: \"Color\", value: \"hsl(0, 0%, 70%)\" },\r\n      backLightIntensity: { label: \"Intensity\", max: 2, min: 0, value: 0.75 },\r\n    }),\r\n    \"Fill Light\": folder({\r\n      fillLightColor: { label: \"Color\", value: \"hsl(210, 100%, 70%)\" },\r\n      fillLightIntensity: { label: \"Intensity\", max: 2, min: 0, value: 0.75 },\r\n    }),\r\n    \"Key Light\": folder({\r\n      keyLightColor: { label: \"Color\", value: \"hsl(30, 100%, 70%)\" },\r\n      keyLightIntensity: { label: \"Intensity\", max: 2, min: 0, value: 0.75 },\r\n    }),\r\n  });\r\n\r\n  const backLightRef = useRef();\r\n  const fillLightRef = useRef();\r\n  const keyLightRef = useRef();\r\n  useHelper(backLightRef, SpotLightHelper, backLightColor);\r\n  useHelper(fillLightRef, SpotLightHelper, fillLightColor);\r\n  useHelper(keyLightRef, SpotLightHelper, keyLightColor);\r\n\r\n  return (\r\n    <>\r\n      <ambientLight\r\n        color={ambientLightColor}\r\n        intensity={ambientLightIntensity}\r\n      />\r\n      <spotLight\r\n        castShadow={true}\r\n        color={backLightColor}\r\n        intensity={backLightIntensity}\r\n        position={[4, 2, -4]}\r\n        ref={backLightRef}\r\n      />\r\n      <spotLight\r\n        castShadow={true}\r\n        color={fillLightColor}\r\n        intensity={fillLightIntensity}\r\n        position={[-4, 2, 4]}\r\n        ref={fillLightRef}\r\n      />\r\n      <spotLight\r\n        castShadow={true}\r\n        color={keyLightColor}\r\n        intensity={keyLightIntensity}\r\n        position={[4, 2, 4]}\r\n        ref={keyLightRef}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LightingThreePointHelpers;\r\n","import { useControls } from \"leva\";\r\n\r\nimport Demo from \"./Demo\";\r\nimport DemoHelpers from \"./DemoHelpers\";\r\nimport Studio from \"./Studio\";\r\nimport StudioHelpers from \"./StudioHelpers\";\r\nimport ThreePoint from \"./ThreePoint\";\r\nimport ThreePointHelpers from \"./ThreePointHelpers\";\r\n\r\nconst LIGHTING = {\r\n  Demo: \"Demo\",\r\n  Studio: \"Studio\",\r\n  ThreePoint: \"ThreePoint\",\r\n};\r\n\r\nconst Lighting = () => {\r\n  const { useHelpers, useLighting } = useControls(\"Lightings\", {\r\n    useLighting: {\r\n      label: \"Lighting\",\r\n      options: {\r\n        \"Demo       \": LIGHTING.Demo,\r\n        \"Studio     \": LIGHTING.Studio,\r\n        \"Three Point\": LIGHTING.ThreePoint,\r\n      },\r\n      value: LIGHTING.Studio,\r\n    },\r\n    useHelpers: {\r\n      label: \"Helpers\",\r\n      value: false,\r\n    },\r\n  });\r\n\r\n  function enableLighting(name, helpers = false) {\r\n    return useLighting === name && useHelpers === helpers;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {enableLighting(LIGHTING.Demo) && <Demo />}\r\n      {enableLighting(LIGHTING.Demo, true) && <DemoHelpers />}\r\n      {enableLighting(LIGHTING.Studio) && <Studio />}\r\n      {enableLighting(LIGHTING.Studio, true) && <StudioHelpers />}\r\n      {enableLighting(LIGHTING.ThreePoint) && <ThreePoint />}\r\n      {enableLighting(LIGHTING.ThreePoint, true) && <ThreePointHelpers />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Lighting;\r\n","export default __webpack_public_path__ + \"static/media/gltf-logo.d3501fc2.glb\";","import { useRef, useState } from \"react\";\r\nimport { useFrame } from \"@react-three/fiber\";\r\nimport { useGLTF } from \"@react-three/drei\";\r\n\r\nimport gltfLogoGlb from \"./gltf-logo.glb\";\r\n\r\nconst LogoDefault = () => {\r\n  const [clockwise, setClockwise] = useState(false);\r\n\r\n  const gltfLogo = useGLTF(gltfLogoGlb, true);\r\n  const logoRef = useRef();\r\n  const speed = 0.025;\r\n\r\n  useFrame(() => {\r\n    logoRef.current.rotation.y += speed * (clockwise ? 1 : -1);\r\n  });\r\n\r\n  return (\r\n    <primitive\r\n      object={gltfLogo.scene}\r\n      onClick={() => setClockwise(!clockwise)}\r\n      position={[0, 0, 0]}\r\n      ref={logoRef}\r\n    />\r\n  );\r\n};\r\n\r\nexport default LogoDefault;\r\n","import { useRef, useState } from \"react\";\r\nimport { useFrame } from \"@react-three/fiber\";\r\nimport { useGLTF } from \"@react-three/drei\";\r\n\r\nimport gltfLogoGlb from \"./gltf-logo.glb\";\r\n\r\nconst LogoDouble = () => {\r\n  const [clockwise, setClockwise] = useState(false);\r\n\r\n  const gltfLogo = useGLTF(gltfLogoGlb, true);\r\n  const logo1Ref = useRef();\r\n  const logo2Ref = useRef();\r\n  const speed = 0.025;\r\n\r\n  useFrame(() => {\r\n    if (logo1Ref.current)\r\n      logo1Ref.current.rotation.x += speed * (clockwise ? 1 : -1);\r\n    if (logo2Ref.current)\r\n      logo2Ref.current.rotation.y += speed * (clockwise ? 1 : -1);\r\n  });\r\n\r\n  return (\r\n    <group onClick={() => setClockwise(!clockwise)}>\r\n      <primitive\r\n        object={gltfLogo.scene}\r\n        position={[-1, -1, 0]}\r\n        ref={logo1Ref}\r\n      />\r\n      <primitive\r\n        object={gltfLogo.scene.clone(true)}\r\n        position={[1, 1, 0]}\r\n        ref={logo2Ref}\r\n      />\r\n    </group>\r\n  );\r\n};\r\n\r\nexport default LogoDouble;\r\n","import { useControls } from \"leva\";\r\n\r\nimport Default from \"./Default\";\r\nimport Double from \"./Double\";\r\n\r\nconst LOGO = {\r\n  Default: \"Default\",\r\n  Double: \"Double\",\r\n};\r\n\r\nconst Image = () => {\r\n  const { useLogo } = useControls(\"Components\", {\r\n    useLogo: {\r\n      label: \"Variant\",\r\n      options: LOGO,\r\n      value: LOGO.Default,\r\n    },\r\n  });\r\n\r\n  function enableLogo(name) {\r\n    return useLogo === name;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {enableLogo(LOGO.Default) && <Default />}\r\n      {enableLogo(LOGO.Double) && <Double />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Image;\r\n","const FontFamily = {\r\n  Architects_Daughter:\r\n    \"https://fonts.gstatic.com/s/architectsdaughter/v11/KtkxAKiDZI_td1Lkx62xHZHDtgO_Y-bvfY0.woff\",\r\n  Press_Start_2P:\r\n    \"https://fonts.gstatic.com/s/pressstart2p/v9/e3t4euO8T-267oIAQAu6jDQyK0nR.woff\",\r\n  Roboto_Slab:\r\n    \"https://fonts.gstatic.com/s/robotoslab/v12/BngbUXZYTXPIvIBgJJSb6s3BzlRRfKOFbvjovoSWaw.woff\",\r\n};\r\n\r\nexport default FontFamily;\r\n","/**\r\n * https://pixologic.com/zbrush/downloadcenter/library/\r\n * https://www.badking.com.au/site/product-category/materials/\r\n * https://www.zbrushcentral.com/t/matcap-repository/205029\r\n */\r\nconst MatCap = {\r\n  // Index or ID string, see: https://github.com/emmelleppi/matcaps/\r\n  id: {\r\n    GREEN_CRYSTAL: \"2E763A_78A0B7_B3D1CF_14F209\", // https://github.com/emmelleppi/matcaps/blob/master/PAGE-3.md#2e763a_78a0b7_b3d1cf_14f209 https://pixologic.com/zbrush/downloadcenter/img/matcaps/images/erklaerbar/ok_green_crystal.jpg\r\n    SILVERY: \"4C4C4C_D2D2D2_8F8F8F_ACACAC\", // https://github.com/emmelleppi/matcaps/blob/master/PAGE-8.md#4c4c4c_d2d2d2_8f8f8f_acacac https://pixologic.com/zbrush/downloadcenter/img/matcaps/images/slosh/bgs_silvery.jpg\r\n    TITANIUM: \"C7C7D7_4C4E5A_818393_6C6C74\", // https://github.com/emmelleppi/matcaps/blob/master/PAGE-28.md#c7c7d7_4c4e5a_818393_6c6c74 https://pixologic.com/zbrush/downloadcenter/img/matcaps/images/arranlewis/al_titanium.jpg\r\n    WORN_GOLD: \"6E5137_E8CA90_271912_B99C74\", // https://github.com/emmelleppi/matcaps/blob/master/PAGE-15.md#6e5137_e8ca90_271912_b99c74 https://pixologic.com/zbrush/downloadcenter/img/matcaps/thumbs/sathe/gw_worn_gold.jpg\r\n  },\r\n\r\n  // Texture size\r\n  size: {\r\n    XS: 64,\r\n    SM: 128,\r\n    MD: 256,\r\n    LG: 512,\r\n    XL: 1024,\r\n  },\r\n};\r\n\r\nexport default MatCap;\r\n","import { Text, useMatcapTexture } from \"@react-three/drei\";\r\nimport { FontFamily, MatCap } from \"App/lib\";\r\n\r\nconst LoremIpsum = () => {\r\n  const [matcapGreenCrystal] = useMatcapTexture(\r\n    MatCap.id.GREEN_CRYSTAL,\r\n    MatCap.size.XL\r\n  );\r\n  const [matcapSilvery] = useMatcapTexture(MatCap.id.SILVERY, MatCap.size.XL);\r\n  const [matcapWornGold] = useMatcapTexture(\r\n    MatCap.id.WORN_GOLD,\r\n    MatCap.size.XL\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Text fontSize={1} position={[0, 1, -0.2]}>\r\n        Lorem Ipsum\r\n        <meshLambertMaterial />\r\n      </Text>\r\n      <Text font={FontFamily.Roboto_Slab} fontSize={1} position={[0, 0, 0]}>\r\n        Lorem Ipsum\r\n        <meshMatcapMaterial matcap={matcapWornGold} />\r\n      </Text>\r\n      <Text\r\n        font={FontFamily.Architects_Daughter}\r\n        fontSize={1}\r\n        opacity={0.5}\r\n        position={[0, -1, 0.1]}\r\n        text=\"Lorem Ipsum\"\r\n      >\r\n        <meshMatcapMaterial matcap={matcapGreenCrystal} />\r\n      </Text>\r\n      <Text\r\n        color={0x000000}\r\n        font={FontFamily.Press_Start_2P}\r\n        fontSize={1}\r\n        outlineColor={0x00ff00}\r\n        outlineWidth={0.04}\r\n        position={[0, -2, 0.2]}\r\n        text=\"Lorem Ipsum\"\r\n      >\r\n        <meshMatcapMaterial matcap={matcapSilvery} opacity={0.9} />\r\n      </Text>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoremIpsum;\r\n","export default __webpack_public_path__ + \"static/media/normals.c5aed970.glb\";","import { useRef } from \"react\";\r\nimport { useGLTF } from \"@react-three/drei\";\r\nimport { useFrame } from \"@react-three/fiber\";\r\n\r\nimport normalsGlb from \"./normals.glb\";\r\n\r\nconst Normals = () => {\r\n  const normals = useGLTF(normalsGlb, true);\r\n  const normalsRef = useRef();\r\n\r\n  useFrame(() => {\r\n    if (normalsRef.current) {\r\n      normalsRef.current.rotation.x += 0.02;\r\n    }\r\n  });\r\n\r\n  return <primitive object={normals.scene} ref={normalsRef} />;\r\n};\r\n\r\nexport default Normals;\r\n","import { useEffect, useRef } from \"react\";\r\nimport { Text } from \"@react-three/drei\";\r\nimport { Box, Flex } from \"@react-three/flex\";\r\nimport { Manager } from \"socket.io-client\";\r\nimport { ZeroFill } from \"App/utils\";\r\n\r\nconst Socket = () => {\r\n  const distanceRef = useRef();\r\n  const speedRef = useRef();\r\n\r\n  const PORT = 3001;\r\n  const manager = new Manager(`http://localhost:${PORT}`);\r\n  const socket = manager.socket(\"/\");\r\n\r\n  socket.on(\"connect\", () => {\r\n    console.log(\"Socket connected: \", socket.connected);\r\n  });\r\n\r\n  socket.on(\"disconnect\", () => {\r\n    console.log(\"Socket disconnected\");\r\n  });\r\n\r\n  useEffect(() => {\r\n    socket.on(\"telemetry\", (message) => {\r\n      const distance = new ZeroFill(message.distance, 6, \" km\");\r\n      const speed = new ZeroFill(message.speed, 3, \" km/u\");\r\n      if (distanceRef.current) distanceRef.current.text = distance;\r\n      if (speedRef.current) speedRef.current.text = speed;\r\n    });\r\n  }, [socket]);\r\n\r\n  return (\r\n    <Flex\r\n      flexDirection=\"row\"\r\n      flexWrap=\"wrap\"\r\n      justifyContent=\"space-between\"\r\n      position={[-3, 0, 0]}\r\n      size={[6, 0, 0]}\r\n    >\r\n      <Box>\r\n        <Text\r\n          color=\"hsl(210, 100%, 70%)\"\r\n          fontSize={1}\r\n          ref={distanceRef}\r\n          text=\"Socket.IO\"\r\n        />\r\n      </Box>\r\n      <Box>\r\n        <Text\r\n          color=\"hsl(30, 100%, 70%)\"\r\n          fontSize={1}\r\n          ref={speedRef}\r\n          text=\"Socket.IO\"\r\n        />\r\n      </Box>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default Socket;\r\n","import { useState } from \"react\";\r\nimport { DoubleSide, MathUtils } from \"three\";\r\nimport { useMatcapTexture } from \"@react-three/drei\";\r\nimport { animated, useSpring } from \"@react-spring/three\";\r\nimport * as easings from \"d3-ease\";\r\n\r\nconst Spring = (props) => {\r\n  const [toggle, setToggle] = useState(true);\r\n  const [matcap] = useMatcapTexture(\r\n    \"80CA23_B7EE37_D5FA4C_A3E434\", // Index or ID string, see: https://github.com/emmelleppi/matcaps/\r\n    1024 // Texture size (64, 128, 256, 512, 1024)\r\n  );\r\n  const { opacity, position } = useSpring({\r\n    config: {\r\n      duration: 200,\r\n      easing: easings.easeCubic,\r\n    },\r\n    delay: 100,\r\n    from: {\r\n      opacity: toggle ? 0.5 : 1,\r\n      position: toggle ? [0, 0, 0] : [0, 0, -2],\r\n    },\r\n    to: [\r\n      { opacity: toggle ? 1 : 0.5 },\r\n      { opacity: toggle ? 0.5 : 1 },\r\n      { opacity: toggle ? 1 : 0.5, position: toggle ? [0, 0, -2] : [0, 0, 0] },\r\n    ],\r\n  });\r\n\r\n  return (\r\n    <group {...props}>\r\n      <mesh onClick={() => setToggle(!toggle)}>\r\n        <ringGeometry\r\n          args={[\r\n            1.1, // innerRadius\r\n            1.9, // outerRadius\r\n            72, // thetaSegments\r\n            1, // phiSegments\r\n            MathUtils.degToRad(90), // thetaStart\r\n            MathUtils.degToRad(350), // thetaLength\r\n          ]}\r\n        />\r\n        <animated.meshMatcapMaterial\r\n          matcap={matcap}\r\n          opacity={opacity}\r\n          side={DoubleSide}\r\n          transparent={true}\r\n        />\r\n      </mesh>\r\n      <animated.mesh position={position}>\r\n        <torusGeometry\r\n          args={[\r\n            1.5, // radius\r\n            0.5, // tube\r\n            72, // radialSegments\r\n            32, // tubularSegments\r\n            MathUtils.degToRad(360), // arc\r\n          ]}\r\n        />\r\n        <meshMatcapMaterial matcap={matcap} opacity={0.25} transparent={true} />\r\n      </animated.mesh>\r\n    </group>\r\n  );\r\n};\r\n\r\nexport default Spring;\r\n","export default __webpack_public_path__ + \"static/media/suzanne.a6e83718.glb\";","import { useRef, useState } from \"react\";\r\nimport { useFrame } from \"@react-three/fiber\";\r\nimport { useGLTF } from \"@react-three/drei\";\r\n\r\nimport suzanneGlb from \"./suzanne.glb\";\r\n\r\nconst SuzanneDefault = () => {\r\n  const [clockwise, setClockwise] = useState(false);\r\n  const [rotate, setRotate] = useState(false);\r\n  const { nodes, materials } = useGLTF(suzanneGlb, true);\r\n  const objectRef = useRef();\r\n  const speed = 0.025;\r\n\r\n  useFrame(() => {\r\n    if (objectRef.current) {\r\n      objectRef.current.rotation.x +=\r\n        speed * (rotate ? 1 : 0) * (clockwise ? 1 : -1);\r\n      objectRef.current.rotation.y +=\r\n        speed * (rotate ? 1 : 0) * (clockwise ? 1 : -1);\r\n      objectRef.current.rotation.z +=\r\n        speed * (rotate ? 1 : 0) * (clockwise ? 1 : -1);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <group\r\n      ref={objectRef}\r\n      onClick={() => setClockwise(!clockwise)}\r\n      onDoubleClick={() => setRotate(!rotate)}\r\n    >\r\n      <mesh geometry={nodes.Suzanne.geometry} material={materials[\"Paars\"]} />\r\n    </group>\r\n  );\r\n};\r\n\r\nexport default SuzanneDefault;\r\n","import { useGLTF, useMatcapTexture } from \"@react-three/drei\";\r\nimport { MatCap } from \"App/lib\";\r\n\r\nimport suzanneGlb from \"./suzanne.glb\";\r\n\r\nconst SuzanneMatcapTexture = () => {\r\n  const { nodes } = useGLTF(suzanneGlb, true);\r\n  const [matcap] = useMatcapTexture(MatCap.id.WORN_GOLD, MatCap.size.XL);\r\n\r\n  return (\r\n    <mesh geometry={nodes.Suzanne.geometry}>\r\n      <meshMatcapMaterial matcap={matcap} />\r\n    </mesh>\r\n  );\r\n};\r\n\r\nexport default SuzanneMatcapTexture;\r\n","import { Vector2 } from \"three\";\r\nimport { useGLTF, useNormalTexture } from \"@react-three/drei\";\r\nimport { folder, useControls } from \"leva\";\r\n\r\nimport suzanneGlb from \"./suzanne.glb\";\r\n\r\nconst SuzanneNormalTexture = () => {\r\n  const {\r\n    normalAnisotropy,\r\n    normalOffset,\r\n    normalRepeat,\r\n    normalScale,\r\n    normalTextureId,\r\n  } = useControls(\"Components\", {\r\n    Textures: folder({\r\n      \"Normal Map\": folder({\r\n        normalAnisotropy: { label: \"Anisotropy\", step: 1, value: 8 },\r\n        normalOffset: {\r\n          label: \"Offset\",\r\n          min: -1,\r\n          max: 1,\r\n          step: 0.01,\r\n          value: { x: 0, y: 0 },\r\n        },\r\n        normalRepeat: {\r\n          label: \"Repeat\",\r\n          min: -2,\r\n          max: 2,\r\n          step: 0.01,\r\n          value: { x: 1, y: 1 },\r\n        },\r\n        normalScale: { label: \"Scale\", value: 1 },\r\n        normalTextureId: {\r\n          label: \"Texture ID\", // https://github.com/emmelleppi/normal-maps/blob/master/normals.json\r\n          min: 0,\r\n          max: 75,\r\n          step: 1,\r\n          value: 8,\r\n        },\r\n      }),\r\n    }),\r\n  });\r\n  const { nodes } = useGLTF(suzanneGlb, true);\r\n  const [normalMap] = useNormalTexture(\r\n    normalTextureId, // Index or file name, see: https://github.com/emmelleppi/normal-maps/\r\n    {\r\n      anisotropy: normalAnisotropy,\r\n      offset: [normalOffset.x, normalOffset.y],\r\n      repeat: [normalRepeat.x, normalRepeat.y],\r\n    }\r\n  );\r\n\r\n  return (\r\n    <mesh geometry={nodes.Suzanne.geometry}>\r\n      <meshStandardMaterial\r\n        normalMap={normalMap}\r\n        normalScale={new Vector2(normalScale, normalScale)}\r\n      />\r\n    </mesh>\r\n  );\r\n};\r\n\r\nexport default SuzanneNormalTexture;\r\n","import { MathUtils } from \"three\";\r\nimport { Plane, useGLTF } from \"@react-three/drei\";\r\nimport { folder, useControls } from \"leva\";\r\n\r\nimport suzanneGlb from \"./suzanne.glb\";\r\n\r\nconst SuzannePhysicalMaterial = () => {\r\n  const { nodes } = useGLTF(suzanneGlb, true);\r\n\r\n  const {\r\n    clearcoat,\r\n    clearcoatRoughness,\r\n    color,\r\n    dithering,\r\n    emissive,\r\n    emissiveIntensity,\r\n    ior,\r\n    metalness,\r\n    opacity,\r\n    refractionRatio,\r\n    roughness,\r\n    sheen,\r\n    sheenRoughness,\r\n    sheenTint,\r\n    specularIntensity,\r\n    specularTint,\r\n    thickness,\r\n    transmission,\r\n    transparent,\r\n    wireframe,\r\n  } = useControls(\"Components\", {\r\n    Materials: folder({\r\n      Material: folder({\r\n        dithering: { label: \"Dithering\", value: false },\r\n        opacity: { label: \"Transparent\", max: 1, min: 0, value: 1 },\r\n        transparent: { label: \"Transparent\", value: true },\r\n      }),\r\n      \"Standard Material\": folder({\r\n        color: { label: \"Color\", value: \"#ffffff\" },\r\n        emissive: { label: \"Emissive\", value: \"#000000\" },\r\n        emissiveIntensity: {\r\n          label: \"Emissive Intensity\",\r\n          max: 5,\r\n          min: 0,\r\n          value: 1,\r\n        },\r\n        metalness: { label: \"Metalness\", max: 1, min: 0, value: 0 },\r\n        refractionRatio: {\r\n          label: \"Refraction Ratio\",\r\n          max: 2,\r\n          min: 0,\r\n          value: 0.98,\r\n        },\r\n        roughness: { label: \"Roughness\", max: 1, min: 0, value: 1 },\r\n        wireframe: { label: \"Wireframe\", value: false },\r\n      }),\r\n      \"Physical Material\": folder({\r\n        clearcoat: { label: \"Clearcoat\", max: 1, min: 0, value: 0 },\r\n        clearcoatRoughness: {\r\n          label: \"Clearcoat Roughness\",\r\n          max: 1,\r\n          min: 0,\r\n          value: 0,\r\n        },\r\n        ior: {\r\n          label: \"Index of Refraction\",\r\n          max: 2.333,\r\n          min: 1,\r\n          value: 1.5,\r\n        },\r\n        reflectivity: { label: \"Reflectivity\", max: 1, min: 0, value: 0.5 },\r\n        sheen: { label: \"Sheen\", max: 1, min: 0, value: 0 },\r\n        sheenRoughness: { label: \"Sheen Roughness\", max: 1, min: 0, value: 1 },\r\n        sheenTint: { label: \"Sheen Tint\", value: \"#ffffff\" },\r\n        specularIntensity: {\r\n          label: \"Specular Intensity\",\r\n          max: 1,\r\n          min: 0,\r\n          value: 1,\r\n        },\r\n        specularTint: { label: \"Specular Tint\", value: \"#ffffff\" },\r\n        thickness: { label: \"Thickness\", max: 10, min: 0, value: 0.01 },\r\n        transmission: { label: \"Transmission\", max: 1, min: 0, value: 0 },\r\n      }),\r\n    }),\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <mesh geometry={nodes.Suzanne.geometry}>\r\n        <meshPhysicalMaterial\r\n          clearcoat={clearcoat}\r\n          clearcoatRoughness={clearcoatRoughness}\r\n          color={color}\r\n          dithering={dithering}\r\n          emissive={emissive}\r\n          emissiveIntensity={emissiveIntensity}\r\n          ior={ior}\r\n          metalness={metalness}\r\n          opacity={opacity}\r\n          refractionRatio={refractionRatio}\r\n          roughness={roughness}\r\n          sheen={sheen}\r\n          sheenRoughness={sheenRoughness}\r\n          sheenTint={sheenTint}\r\n          specularIntensity={specularIntensity}\r\n          specularTint={specularTint}\r\n          thickness={thickness}\r\n          transmission={transmission}\r\n          transparent={transparent}\r\n          wireframe={wireframe}\r\n        />\r\n      </mesh>\r\n      <Plane\r\n        args={[2, 2]}\r\n        position={[0, 0, -1]}\r\n        rotation={[0, 0, 45].map((v) => MathUtils.degToRad(v))}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SuzannePhysicalMaterial;\r\n","import { MathUtils } from \"three\";\r\nimport { Plane, useGLTF } from \"@react-three/drei\";\r\nimport { folder, useControls } from \"leva\";\r\n\r\nimport suzanneGlb from \"./suzanne.glb\";\r\n\r\nconst SuzanneStandardMaterial = () => {\r\n  const { nodes } = useGLTF(suzanneGlb, true);\r\n\r\n  const {\r\n    color,\r\n    dithering,\r\n    emissive,\r\n    emissiveIntensity,\r\n    metalness,\r\n    opacity,\r\n    refractionRatio,\r\n    roughness,\r\n    transparent,\r\n    wireframe,\r\n  } = useControls(\"Components\", {\r\n    Materials: folder({\r\n      Material: folder({\r\n        dithering: { label: \"Dithering\", value: false },\r\n        opacity: { label: \"Transparent\", max: 1, min: 0, value: 1 },\r\n        transparent: { label: \"Transparent\", value: true },\r\n      }),\r\n      \"Standard Material\": folder({\r\n        color: { label: \"Color\", value: \"#ffffff\" },\r\n        emissive: { label: \"Emissive\", value: \"#000000\" },\r\n        emissiveIntensity: {\r\n          label: \"Emissive Intensity\",\r\n          max: 5,\r\n          min: 0,\r\n          value: 1,\r\n        },\r\n        metalness: { label: \"Metalness\", max: 1, min: 0, value: 0 },\r\n        refractionRatio: {\r\n          label: \"Refraction Ratio\",\r\n          max: 2,\r\n          min: 0,\r\n          value: 0.98,\r\n        },\r\n        roughness: { label: \"Roughness\", max: 1, min: 0, value: 1 },\r\n        wireframe: { label: \"Wireframe\", value: false },\r\n      }),\r\n    }),\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <mesh geometry={nodes.Suzanne.geometry}>\r\n        <meshStandardMaterial\r\n          color={color}\r\n          dithering={dithering}\r\n          emissive={emissive}\r\n          emissiveIntensity={emissiveIntensity}\r\n          metalness={metalness}\r\n          opacity={opacity}\r\n          refractionRatio={refractionRatio}\r\n          roughness={roughness}\r\n          transparent={transparent}\r\n          wireframe={wireframe}\r\n        />\r\n      </mesh>\r\n      <Plane\r\n        args={[2, 2]}\r\n        position={[0, 0, -1]}\r\n        rotation={[0, 0, 45].map((v) => MathUtils.degToRad(v))}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SuzanneStandardMaterial;\r\n","import { useGLTF } from \"@react-three/drei\";\r\n\r\nimport suzanneGlb from \"./suzanne.glb\";\r\n\r\nconst SuzanneToonMaterial = () => {\r\n  const { nodes } = useGLTF(suzanneGlb, true);\r\n\r\n  return (\r\n    <mesh geometry={nodes.Suzanne.geometry}>\r\n      <meshToonMaterial />\r\n    </mesh>\r\n  );\r\n};\r\n\r\nexport default SuzanneToonMaterial;\r\n","import { useControls } from \"leva\";\r\n\r\nimport Default from \"./Default\";\r\nimport MatcapTexture from \"./MatcapTexture\";\r\nimport NormalTexture from \"./NormalTexture\";\r\nimport PhysicalMaterial from \"./PhysicalMaterial\";\r\nimport StandardMaterial from \"./StandardMaterial\";\r\nimport ToonMaterial from \"./ToonMaterial\";\r\n\r\nconst SUZANNE = {\r\n  Default: \"Default\",\r\n  MatcapTexture: \"MatcapTexture\",\r\n  NormalTexture: \"NormalTexture\",\r\n  PhysicalMaterial: \"PhysicalMaterial\",\r\n  StandardMaterial: \"StandardMaterial\",\r\n  ToonMaterial: \"ToonMaterial\",\r\n};\r\n\r\nconst Suzanne = () => {\r\n  const { useSuzanne } = useControls(\"Components\", {\r\n    useSuzanne: {\r\n      label: \"Suzanne\",\r\n      options: {\r\n        \"Default          \": SUZANNE.Default,\r\n        \"Matcap Texture   \": SUZANNE.MatcapTexture,\r\n        \"Normal Texture   \": SUZANNE.NormalTexture,\r\n        \"Physical Material\": SUZANNE.PhysicalMaterial,\r\n        \"Standard Material\": SUZANNE.StandardMaterial,\r\n        \"Toon Material    \": SUZANNE.ToonMaterial,\r\n      },\r\n      value: SUZANNE.Default,\r\n    },\r\n  });\r\n\r\n  function enableSuzanne(name) {\r\n    return useSuzanne === name;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {enableSuzanne(SUZANNE.Default) && <Default />}\r\n      {enableSuzanne(SUZANNE.MatcapTexture) && <MatcapTexture />}\r\n      {enableSuzanne(SUZANNE.NormalTexture) && <NormalTexture />}\r\n      {enableSuzanne(SUZANNE.PhysicalMaterial) && <PhysicalMaterial />}\r\n      {enableSuzanne(SUZANNE.StandardMaterial) && <StandardMaterial />}\r\n      {enableSuzanne(SUZANNE.ToonMaterial) && <ToonMaterial />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Suzanne;\r\n","import { DoubleSide } from \"three\";\r\n\r\nconst SvgLoaderShape = ({ color, index, shape }) => {\r\n  // console.log(\"Shape\", color, index);\r\n  return (\r\n    <mesh position={[0, 0, -0.05 * index]}>\r\n      <shapeGeometry args={[shape]} />\r\n      <meshBasicMaterial color={color} side={DoubleSide} />\r\n    </mesh>\r\n  );\r\n};\r\n\r\nexport default SvgLoaderShape;\r\n","import { MathUtils } from \"three\";\r\nimport Shape from \"./Shape\";\r\n\r\nconst SvgLoaderGroup = ({ paths, position, scale }) => {\r\n  // console.log(\"Group\", paths, scale);\r\n  return (\r\n    <group\r\n      position={position}\r\n      rotation={[180, 0, 0].map((degrees) => MathUtils.degToRad(degrees))}\r\n      scale={scale}\r\n    >\r\n      {paths.map((path, index) => {\r\n        // console.log(\"Path\", index, path, path.color, path.toShapes());\r\n        const shapes = path.toShapes();\r\n        const pathIndex = index;\r\n        return shapes.map((shape, index) => {\r\n          return (\r\n            <Shape\r\n              color={path.color}\r\n              index={index + pathIndex}\r\n              key={index}\r\n              shape={shape}\r\n            />\r\n          );\r\n        });\r\n      })}\r\n    </group>\r\n  );\r\n};\r\n\r\nexport default SvgLoaderGroup;\r\n","import { useEffect, useState } from \"react\";\r\nimport { SVGLoader } from \"three-stdlib\";\r\nimport Group from \"./Group\";\r\n\r\nconst SvgLoader = (props) => {\r\n  const [paths, setPaths] = useState([]);\r\n  const position = props.position;\r\n  const scale = [props.scale, props.scale, props.scale];\r\n\r\n  useEffect(() => {\r\n    const svgResource = new Promise((resolve) =>\r\n      new SVGLoader().load(props.source, (data) => resolve(data.paths))\r\n    );\r\n    svgResource.then(setPaths);\r\n  }, [props]);\r\n\r\n  return <Group paths={paths} position={position} scale={scale} />;\r\n};\r\n\r\nexport default SvgLoader;\r\n","export default __webpack_public_path__ + \"static/media/TexturedCube.2b78eebc.glb\";","import { useGLTF } from \"@react-three/drei\";\r\n\r\nimport cubeGlb from \"./TexturedCube.glb\";\r\n\r\nconst TextureDefault = () => {\r\n  const { nodes, materials } = useGLTF(cubeGlb, true);\r\n  return (\r\n    <>\r\n      <group position={[-1.5, 0, 0]}>\r\n        <mesh\r\n          geometry={nodes.Cube_1.geometry}\r\n          material={materials[\"MaterialTexture\"]}\r\n        />\r\n        <mesh geometry={nodes.Cube_2.geometry} material={materials[\"Blue\"]} />\r\n      </group>\r\n      {nodes.Cube.children.map((child, index) => {\r\n        return (\r\n          <mesh\r\n            key={index}\r\n            geometry={child.geometry}\r\n            material={child.material}\r\n            position={[1.5, 0, 0]}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TextureDefault;\r\n","export default __webpack_public_path__ + \"static/media/BakedNormals.03580610.glb\";","import { MathUtils } from \"three\";\r\nimport { useGLTF } from \"@react-three/drei\";\r\n\r\nimport cubeGlb from \"./BakedNormals.glb\";\r\n\r\nconst TextureBakedNormals = () => {\r\n  const { nodes, materials } = useGLTF(cubeGlb, true);\r\n  return (\r\n    <mesh\r\n      geometry={nodes.Plane.geometry}\r\n      material={materials[\"Material\"]}\r\n      rotation={[90, 0, 0].map((degree) => MathUtils.degToRad(degree))}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TextureBakedNormals;\r\n","import { useControls } from \"leva\";\r\n\r\nimport Default from \"./Default\";\r\nimport BakedNormals from \"./BakedNormals\";\r\n\r\nconst TEXTURE = {\r\n  Default: \"Default\",\r\n  BakedNormals: \"BakedNormals\",\r\n};\r\n\r\nconst Texture = () => {\r\n  const { useTexture } = useControls(\"Components\", {\r\n    useTexture: {\r\n      label: \"Type\",\r\n      options: {\r\n        \"Default      \": TEXTURE.Default,\r\n        \"Baked Normals\": TEXTURE.BakedNormals,\r\n      },\r\n      value: TEXTURE.Default,\r\n    },\r\n  });\r\n\r\n  function enableTexture(name) {\r\n    return useTexture === name;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {enableTexture(TEXTURE.Default) && <Default />}\r\n      {enableTexture(TEXTURE.BakedNormals) && <BakedNormals />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Texture;\r\n","const Tripod = (props) => {\r\n  const length = 1;\r\n  const radius = (length / 100) * 2;\r\n  const segments = 32;\r\n  const thickness = length / 100;\r\n\r\n  return (\r\n    <group {...props}>\r\n      <mesh>\r\n        <boxGeometry args={[1, 1, 1].map((value) => value * 1.5 * thickness)} />\r\n        <meshMatcapMaterial color={0xffffff} />\r\n      </mesh>\r\n\r\n      {Array(3)\r\n        .fill()\r\n        .map((value, index) => {\r\n          return (\r\n            <group\r\n              key={index}\r\n              position={[0, 0, 0].map((v, i) =>\r\n                index === i ? length / 2 + thickness * 2 : v\r\n              )}\r\n            >\r\n              <mesh>\r\n                <boxGeometry\r\n                  args={[1, 1, 1].map(\r\n                    (v, i) => v * (index === i ? length : thickness)\r\n                  )}\r\n                />\r\n                <meshMatcapMaterial color={0xff0000 >> (8 * index)} />\r\n              </mesh>\r\n              <mesh\r\n                position={[0, 0, 0].map((v, i) =>\r\n                  index === i ? length / 2 + thickness * 3 : v\r\n                )}\r\n              >\r\n                <sphereGeometry args={[radius, segments, segments]} />\r\n                <meshMatcapMaterial color={0xffffff} />\r\n              </mesh>\r\n            </group>\r\n          );\r\n        })}\r\n    </group>\r\n  );\r\n};\r\n\r\nexport default Tripod;\r\n","import { useEffect, useRef } from \"react\";\r\nimport { DoubleSide, MathUtils } from \"three\";\r\nimport { useControls } from \"leva\";\r\nimport { useFrame } from \"@react-three/fiber\";\r\nimport { Box, Plane, PointerLockControls } from \"@react-three/drei\";\r\nimport { KeyboardControls } from \"App/utils\";\r\n\r\nconst BOX_SIZE = 1;\r\nconst MOVE_SPEED = {\r\n  FORWARD: 0.1,\r\n  RIGHT: 0.05,\r\n  UP: 0.5,\r\n};\r\n\r\nconst World = (props) => {\r\n  const { enablePointerLockControls } = useControls(\"Controls\", {\r\n    enablePointerLockControls: { label: \"PointerLock\", value: true },\r\n  });\r\n\r\n  const pointerRef = useRef();\r\n\r\n  useEffect(() => {\r\n    KeyboardControls.addEventListeners();\r\n\r\n    if (pointerRef.current) {\r\n      pointerRef.current.getObject().position.y = 1.75; // m\r\n    }\r\n\r\n    return KeyboardControls.removeEventListeners;\r\n  }, [enablePointerLockControls]);\r\n\r\n  useFrame(() => {\r\n    if (pointerRef.current) {\r\n      pointerRef.current.moveForward(\r\n        MOVE_SPEED.FORWARD * KeyboardControls.forwardDirection\r\n      );\r\n      pointerRef.current.moveRight(\r\n        MOVE_SPEED.RIGHT * KeyboardControls.rightDirection\r\n      );\r\n      pointerRef.current.getObject().position.y +=\r\n        MOVE_SPEED.UP * KeyboardControls.upDirection; // m\r\n    }\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {enablePointerLockControls && <PointerLockControls ref={pointerRef} />}\r\n      <Plane\r\n        args={[10, 10]}\r\n        rotation={[MathUtils.degToRad(-90), 0, 0]}\r\n        {...props}\r\n      >\r\n        <meshBasicMaterial color={0x666666} side={DoubleSide} />\r\n      </Plane>\r\n      <Box\r\n        args={[BOX_SIZE, BOX_SIZE, BOX_SIZE]}\r\n        position={[0, BOX_SIZE / 2, 0]}\r\n      >\r\n        <meshBasicMaterial color={0xff0000} opacity={0.75} transparent={true} />\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default World;\r\n","export default __webpack_public_path__ + \"static/media/bensound-badass.8ef4f40c.mp3\";","export default __webpack_public_path__ + \"static/media/bensound-evolution.4375aef0.mp3\";","import { useEffect, useRef } from \"react\";\r\nimport { AudioListener, AudioLoader, DoubleSide, MathUtils } from \"three\";\r\nimport { PositionalAudioHelper } from \"three-stdlib\";\r\nimport { useControls } from \"leva\";\r\nimport { extend, useFrame, useLoader } from \"@react-three/fiber\";\r\nimport {\r\n  Plane,\r\n  PointerLockControls,\r\n  PositionalAudio,\r\n  Text,\r\n  useHelper,\r\n} from \"@react-three/drei\";\r\nimport { KeyboardControls } from \"App/utils\";\r\n\r\nimport badassAudioFile from \"./audio/bensound-badass.mp3\";\r\nimport evolutionAudioFile from \"./audio/bensound-evolution.mp3\";\r\n\r\nextend({ PositionalAudioHelper });\r\n\r\nconst MOVE_SPEED = {\r\n  FORWARD: 0.1,\r\n  RIGHT: 0.05,\r\n  UP: 0.5,\r\n};\r\n\r\nconst WorldSound = (props) => {\r\n  const { enablePointerLockControls } = useControls(\"Controls\", {\r\n    enablePointerLockControls: { label: \"PointerLock\", value: true },\r\n  });\r\n\r\n  const pointerRef = useRef();\r\n  const audioRef = useRef();\r\n  const audioListener = new AudioListener();\r\n  const audioBuffer = useLoader(AudioLoader, evolutionAudioFile);\r\n\r\n  const positionalAudioRef = useRef();\r\n  useHelper(positionalAudioRef, PositionalAudioHelper);\r\n\r\n  useEffect(() => {\r\n    KeyboardControls.addEventListeners();\r\n\r\n    if (pointerRef.current) {\r\n      pointerRef.current.getObject().position.y = 1.75; // m\r\n    }\r\n\r\n    return KeyboardControls.removeEventListeners;\r\n  }, [enablePointerLockControls]);\r\n\r\n  useEffect(() => {\r\n    if (audioRef.current) {\r\n      audioRef.current.setBuffer(audioBuffer);\r\n      audioRef.current.setLoop(true);\r\n      audioRef.current.setVolume(0.01);\r\n      audioRef.current.play();\r\n    }\r\n  }, [audioBuffer]);\r\n\r\n  useFrame(() => {\r\n    if (pointerRef.current) {\r\n      pointerRef.current.moveForward(\r\n        MOVE_SPEED.FORWARD * KeyboardControls.forwardDirection\r\n      );\r\n      pointerRef.current.moveRight(\r\n        MOVE_SPEED.RIGHT * KeyboardControls.rightDirection\r\n      );\r\n      pointerRef.current.getObject().position.y +=\r\n        MOVE_SPEED.UP * KeyboardControls.upDirection; // m\r\n    }\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {enablePointerLockControls && <PointerLockControls ref={pointerRef} />}\r\n      <Plane\r\n        args={[10, 10]}\r\n        rotation={[MathUtils.degToRad(-90), 0, 0]}\r\n        {...props}\r\n      >\r\n        <meshBasicMaterial color={0x666666} side={DoubleSide} />\r\n      </Plane>\r\n      <audio args={[audioListener]} ref={audioRef} />\r\n      <mesh position={[0, 0, 0]}>\r\n        <Text position={[0, 1, 0]}>Music: https://www.bensound.com</Text>\r\n        <PositionalAudio\r\n          distance={0.1}\r\n          loop={true}\r\n          ref={positionalAudioRef}\r\n          url={badassAudioFile}\r\n        />\r\n      </mesh>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WorldSound;\r\n","import { useLocation } from \"wouter\";\r\nimport { Text } from \"@react-three/drei\";\r\n\r\nconst Wouter = () => {\r\n  const [, setLocation] = useLocation();\r\n\r\n  return (\r\n    <Text\r\n      color=\"hsl(120, 100%, 70%)\"\r\n      fontSize={1}\r\n      onClick={() => {\r\n        const route = \"/router\";\r\n        console.log(\"Route: \", route);\r\n        setLocation(route);\r\n      }}\r\n      text=\"Wouter\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default Wouter;\r\n","import { useLocation } from \"wouter\";\r\nimport { Text } from \"@react-three/drei\";\r\n\r\nconst WouterPathRouter = () => {\r\n  const [, setLocation] = useLocation();\r\n\r\n  return (\r\n    <Text\r\n      color=\"hsl(210, 100%, 70%)\"\r\n      fontSize={1}\r\n      onClick={() => {\r\n        const route = \"/wouter\";\r\n        console.log(\"Route: \", route);\r\n        setLocation(route);\r\n      }}\r\n      position={[0, 2, 0]}\r\n      text=\"Path Router\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default WouterPathRouter;\r\n","import { useLocation } from \"wouter\";\r\nimport { Text } from \"@react-three/drei\";\r\n\r\nconst WouterPathWouter = () => {\r\n  const [, setLocation] = useLocation();\r\n\r\n  return (\r\n    <Text\r\n      color=\"hsl(30, 100%, 70%)\"\r\n      fontSize={1}\r\n      onClick={() => {\r\n        const route = \"/router\";\r\n        console.log(\"Route: \", route);\r\n        setLocation(route);\r\n      }}\r\n      position={[0, -2, 0]}\r\n      text=\"Path Wouter\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default WouterPathWouter;\r\n","import { Suspense, useCallback, useEffect, useState } from \"react\";\r\nimport { Route, Router } from \"wouter\";\r\nimport { MathUtils } from \"three\";\r\nimport {\r\n  GizmoHelper,\r\n  GizmoViewport,\r\n  OrbitControls,\r\n  Stats,\r\n  TrackballControls,\r\n} from \"@react-three/drei\";\r\nimport { Bloom, EffectComposer } from \"@react-three/postprocessing\";\r\nimport { folder, useControls } from \"leva\";\r\n\r\nimport {\r\n  Animation,\r\n  Button,\r\n  Clock,\r\n  Cube,\r\n  Face,\r\n  Gauge,\r\n  Image,\r\n  Lighting,\r\n  Logo,\r\n  LoremIpsum,\r\n  Normals,\r\n  Socket,\r\n  Spring,\r\n  Suzanne,\r\n  Texture,\r\n  Tripod,\r\n  World,\r\n  WorldSound,\r\n  Wouter,\r\n  WouterPathRouter,\r\n  WouterPathWouter,\r\n} from \"./components\";\r\n\r\nconst currentLocation = () => window.location.hash.replace(\"#\", \"\") || \"/\";\r\nconst useHashLocation = () => {\r\n  const [location, setLocation] = useState(currentLocation());\r\n\r\n  useEffect(() => {\r\n    const handler = () => setLocation(currentLocation());\r\n    window.addEventListener(\"hashchange\", handler);\r\n    return () => window.removeEventListener(\"hashchange\", handler);\r\n  }, []);\r\n\r\n  const navigate = useCallback((to) => (window.location.hash = to), []);\r\n  return [location, navigate];\r\n};\r\n\r\nconst CONTROLS = {\r\n  Orbit: \"Orbit\",\r\n  Trackball: \"Trackball\",\r\n};\r\n\r\nconst Content = () => {\r\n  const {\r\n    enableAxesHelper,\r\n    enableEffects,\r\n    enableGizmoHelper,\r\n    enableGridHelper,\r\n    enableStats,\r\n    useInputControls,\r\n  } = useControls(\"General\", {\r\n    enableEffects: { label: \"Effects\", value: false },\r\n    enableStats: { label: \"Stats\", value: false },\r\n    Helpers: folder({\r\n      enableAxesHelper: { label: \"Axes\", value: false },\r\n      enableGizmoHelper: { label: \"Gizmo\", value: true },\r\n      enableGridHelper: { label: \"Grid\", value: false },\r\n    }),\r\n    \"Input Controls\": folder({\r\n      useInputControls: {\r\n        label: \"Controls\",\r\n        options: CONTROLS,\r\n        value: CONTROLS.Orbit,\r\n      },\r\n    }),\r\n  });\r\n\r\n  const COMPONENT = {\r\n    Animation: \"Animation\",\r\n    Button: \"Button\",\r\n    Clock: \"Clock\",\r\n    Cube: \"Cube\",\r\n    Cube_Positioned: \"Cube_Positioned\",\r\n    Face: \"Face\",\r\n    Gauge: \"Gauge\",\r\n    Image: \"Image\",\r\n    Logo: \"Logo\",\r\n    LoremIpsum: \"LoremIpsum\",\r\n    None: \"None\",\r\n    Normals: \"Normals\",\r\n    Socket: \"Socket\",\r\n    Spring: \"Spring\",\r\n    Suzanne: \"Suzanne\",\r\n    Texture: \"Texture\",\r\n    Tripod: \"Tripod\",\r\n    World: \"World\",\r\n    WorldSound: \"WorldSound\",\r\n    Wouter: \"Wouter\",\r\n  };\r\n\r\n  const { useComponent } = useControls(\"Components\", {\r\n    useComponent: {\r\n      label: \"Component\",\r\n      options: {\r\n        \"None                  \": COMPONENT.None,\r\n        \"Animation             \": COMPONENT.Animation,\r\n        \"Button                \": COMPONENT.Button,\r\n        \"Clock                 \": COMPONENT.Clock,\r\n        \"Cube                  \": COMPONENT.Cube,\r\n        \"Cube (positioned)     \": COMPONENT.Cube_Positioned,\r\n        \"Face                  \": COMPONENT.Face,\r\n        \"Gauge                 \": COMPONENT.Gauge,\r\n        \"Image                 \": COMPONENT.Image,\r\n        \"Logo                  \": COMPONENT.Logo,\r\n        \"Lorem Ipsum           \": COMPONENT.LoremIpsum,\r\n        \"Normals               \": COMPONENT.Normals,\r\n        \"Socket (Socket.IO 4.4)\": COMPONENT.Socket,\r\n        \"Spring                \": COMPONENT.Spring,\r\n        \"Suzanne               \": COMPONENT.Suzanne,\r\n        \"Texture               \": COMPONENT.Texture,\r\n        \"Tripod                \": COMPONENT.Tripod,\r\n        \"World                 \": COMPONENT.World,\r\n        \"World (Sound)         \": COMPONENT.WorldSound,\r\n        \"Wouter (Router)       \": COMPONENT.Wouter,\r\n      },\r\n      value: COMPONENT.Suzanne,\r\n    },\r\n  });\r\n\r\n  function enableInputControls(name) {\r\n    return useInputControls === name;\r\n  }\r\n\r\n  function enableComponent(name) {\r\n    return useComponent === name;\r\n  }\r\n\r\n  return (\r\n    <Router base={process.env.PUBLIC_URL} hook={useHashLocation}>\r\n      <>\r\n        {enableInputControls(CONTROLS.Orbit) && (\r\n          <OrbitControls\r\n            enablePan={true}\r\n            enableRotate={true}\r\n            enableZoom={true}\r\n          />\r\n        )}\r\n        {enableInputControls(CONTROLS.Trackball) && <TrackballControls />}\r\n      </>\r\n      <>\r\n        {enableAxesHelper && <axesHelper />}\r\n        {enableGizmoHelper && (\r\n          <GizmoHelper alignment=\"bottom-right\" margin={[80, 80]}>\r\n            <GizmoViewport\r\n              axisColors={[\r\n                \"hsl(0, 100%, 50%)\",\r\n                \"hsl(120, 100%, 50%)\",\r\n                \"hsl(240, 100%, 50%)\",\r\n              ]}\r\n              labelColor=\"black\"\r\n            />\r\n          </GizmoHelper>\r\n        )}\r\n        {enableGridHelper && <gridHelper args={[10, 10, 0xffffff, 0x333333]} />}\r\n        {enableStats && <Stats />}\r\n      </>\r\n      {enableEffects && (\r\n        <EffectComposer>\r\n          <Bloom height={500} luminanceThreshold={0} luminanceSmoothing={0.9} />\r\n        </EffectComposer>\r\n      )}\r\n      <Lighting />\r\n      <>\r\n        {enableComponent(COMPONENT.Button) && <Button />}\r\n        {enableComponent(COMPONENT.Cube) && <Cube />}\r\n        {enableComponent(COMPONENT.Cube_Positioned) && (\r\n          <Cube\r\n            position={[1, 1, 1]}\r\n            rotation={[45, 45, 45].map((degrees) =>\r\n              MathUtils.degToRad(degrees)\r\n            )}\r\n          />\r\n        )}\r\n        {enableComponent(COMPONENT.Face) && <Face />}\r\n        {enableComponent(COMPONENT.Gauge) && <Gauge />}\r\n        {enableComponent(COMPONENT.Socket) && <Socket />}\r\n        <Suspense fallback={null}>\r\n          {enableComponent(COMPONENT.Animation) && <Animation />}\r\n          {enableComponent(COMPONENT.Clock) && <Clock />}\r\n          {enableComponent(COMPONENT.Image) && <Image />}\r\n          {enableComponent(COMPONENT.Logo) && <Logo />}\r\n          {enableComponent(COMPONENT.LoremIpsum) && <LoremIpsum />}\r\n          {enableComponent(COMPONENT.Normals) && <Normals />}\r\n          {enableComponent(COMPONENT.Spring) && <Spring />}\r\n          {enableComponent(COMPONENT.Suzanne) && <Suzanne />}\r\n          {enableComponent(COMPONENT.Texture) && <Texture />}\r\n          {enableComponent(COMPONENT.WorldSound) && <WorldSound />}\r\n        </Suspense>\r\n\r\n        {enableComponent(COMPONENT.Tripod) && <Tripod />}\r\n        {enableComponent(COMPONENT.World) && <World />}\r\n        {enableComponent(COMPONENT.Wouter) && <Wouter />}\r\n      </>\r\n      <Route component={WouterPathRouter} path=\"/router\" />\r\n      <Route component={WouterPathWouter} path=\"/wouter\" />\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default Content;\r\n","import { Canvas } from \"@react-three/fiber\";\r\nimport Content from \"./Content\";\r\n\r\nimport \"./index.css\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <Canvas linear={false} shadows={true}>\r\n      <Content />\r\n    </Canvas>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { StrictMode } from \"react\";\nimport { render } from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nrender(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}