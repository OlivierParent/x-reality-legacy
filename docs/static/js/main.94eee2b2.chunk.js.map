{"version":3,"sources":["App/components/Animation/animation.glb","App/components/Animation/index.jsx","App/components/Button/index.jsx","App/components/Button/Spring.jsx","App/utils/KeyboardControls/index.js","App/utils/MathCircle/index.js","App/utils/ZeroFill/index.js","App/components/Clock/index.jsx","App/components/Clock/Digital.jsx","App/components/Cube/index.jsx","App/components/Face/index.jsx","App/components/Gauge/index.jsx","App/components/Image/UV_Grid_Sm.jpg","App/components/Image/index.jsx","App/components/Image/arteveldehogeschool_logo.svg","App/components/Image/SVG_logo.svg","App/components/Image/Svg.jsx","App/components/Lighting/index.jsx","App/components/Lighting/indexGui.jsx","App/components/Lighting/Studio.jsx","App/components/Lighting/StudioGui.jsx","App/components/Lighting/ThreePoint.jsx","App/components/Lighting/ThreePointGui.jsx","App/components/Logo/gltf-logo.glb","App/components/Logo/index.jsx","App/components/Logo/Double.jsx","App/lib/FontFamily/index.js","App/lib/MatCap/index.js","App/components/LoremIpsum/index.jsx","App/components/Normals/normals.glb","App/components/Normals/index.jsx","App/components/Socket/index.jsx","App/components/Spring/index.jsx","App/components/Suzanne/suzanne.glb","App/components/Suzanne/index.jsx","App/components/Suzanne/MatcapTexture.jsx","App/components/Suzanne/NormalTexture.jsx","App/components/Suzanne/StandardMaterial.jsx","App/components/Suzanne/ToonMaterial.jsx","App/components/SvgLoader/Shape.jsx","App/components/SvgLoader/Group.jsx","App/components/SvgLoader/index.jsx","App/components/Texture/TexturedCube.glb","App/components/Texture/index.jsx","App/components/Texture/BakedNormals.glb","App/components/Texture/BakedNormals.jsx","App/components/Tripod/index.jsx","App/components/World/index.jsx","App/components/World/audio/bensound-badass.mp3","App/components/World/audio/bensound-evolution.mp3","App/components/World/Sound.jsx","App/components/Wouter/index.jsx","App/components/Wouter/PathRouter.jsx","App/components/Wouter/PathWouter.jsx","App/Content.jsx","App/index.jsx","reportWebVitals.js","index.jsx"],"names":["Animation","useGLTF","animationGlb","animations","scene","animationRef","useRef","mixer","useMemo","AnimationMixer","useEffect","current","clipAction","play","useFrame","state","delta","update","object","ref","Button","useState","hover","setHover","color","setColor","onClick","onDoubleClick","onPointerOut","onPointerOver","opacity","transparent","args","Text","fontSize","position","Spring","props","toggle","setToggle","colorCurrent","setColorCurrent","useSpring","rotation","MathUtils","degToRad","scale","group","mesh","meshBasicMaterial","AZERTY","LEFT","UP","DIRECTION","QWERTY","KeyboardControls","this","event","console","log","code","info","window","addEventListener","keyDownHandler","keyUpHandler","removeEventListener","MathCircle","radius","degrees","angle","x","Math","cos","y","sin","ZeroFill","number","zeros","postfix","zeroFill","floor","toString","string","length","isHour","tick","HAND_SS_COLOR","HAND_THICKNESS","Clock","clockRef","handHoursRef","handMinutesRef","handSecondsRef","angleStart","d","Date","z","getHours","getMinutes","getSeconds","Array","fill","map","value","index","CLOCK_SIZE","getCoordinates","receiveShadow","castShadow","HAND_HH_LENGTH","HAND_MM_LENGTH","HAND_SS_LENGTH","radians","ClockDigital","HH","MM","SS","text","Cube","colors","random","meshMatcapMaterial","Face","NEEDLE_STEP","Gauge","TICK_MARKS","label","angleStep","valueRange","valueStep","needleRef","needleAngle","needleValue","needleStep","forEach","tickMark","children","material","setColorName","metalness","roughness","Image","texture","useTexture","uvGrid","offset","Vector2","repeat","center","side","DoubleSide","ImageSvg","source","logoNl","svgLogo","Lighting","intensity","penumbra","LightingGui","useControls","ambientLightColor","ambientLightIntensity","max","min","directionalLightColor","directionalLightIntensity","pointLightColor","pointLightIntensity","pointLightPosition","spotLightColor","spotLightIntensity","spotLightPosition","spotLightTarget","useThree","target","Object3D","add","directionalLightRef","pointLightRef","spotLightRef","useHelper","DirectionalLightHelper","PointLightHelper","SpotLightHelper","translateX","translateZ","LightingStudio","frontLightColor","frontLightIntensity","leftLightColor","leftLightIntensity","rightLightColor","rightLightIntensity","frontLightRef","leftLightRef","rightLightRef","LightingThreePoint","LightingThreePointGui","backLightColor","backLightIntensity","fillLightColor","fillLightIntensity","keyLightColor","keyLightIntensity","backLightRef","fillLightRef","keyLightRef","Logo","clockwise","setClockwise","gltfLogo","gltfLogoGlb","logoRef","LogoDouble","logo1Ref","logo2Ref","clone","FontFamily","Architects_Daughter","Press_Start_2P","Roboto_Slab","MatCap","id","GREEN_CRYSTAL","SILVERY","TITANIUM","WORN_GOLD","size","XS","SM","MD","LG","XL","LoremIpsum","useMatcapTexture","matcapGreenCrystal","matcapSilvery","matcapWornGold","font","matcap","outlineColor","outlineWidth","Normals","normals","normalsGlb","normalsRef","Socket","distanceRef","speedRef","socket","Manager","on","connected","message","distance","speed","flexDirection","flexWrap","justifyContent","config","duration","easing","easings","delay","from","to","Suzanne","rotate","setRotate","suzanneGlb","nodes","materials","objectRef","geometry","SuzanneMatcapTexture","SuzanneNormalTexture","useNormalTexture","anisotropy","normalMap","SuzanneStandardMaterial","SuzanneToonMaterial","SvgLoaderShape","shape","SvgLoaderGroup","paths","path","shapes","toShapes","pathIndex","Shape","SvgLoader","setPaths","Promise","resolve","SVGLoader","load","data","then","Group","Texture","cubeGlb","Cube_1","Cube_2","child","TextureBakedNormals","Plane","degree","Tripod","thickness","v","i","MOVE_SPEED","World","enablePointerLockControls","pointerRef","addEventListeners","getObject","removeEventListeners","moveForward","forwardDirection","moveRight","rightDirection","upDirection","PointerLockControls","BOX_SIZE","extend","PositionalAudioHelper","WorldSound","audioRef","audioListener","AudioListener","audioBuffer","useLoader","AudioLoader","evolutionAudioFile","positionalAudioRef","setBuffer","setLoop","setVolume","PositionalAudio","loop","url","badassAudioFile","Wouter","useLocation","setLocation","route","WouterPathRouter","WouterPathWouter","currentLocation","location","hash","replace","useHashLocation","handler","useCallback","Content","enableOrbitControls","showEffect","showStats","useComponent","options","useLighting","showAxesHelper","showGridHelper","showLighting","name","showComponent","base","process","hook","OrbitControls","enablePan","enableRotate","enableZoom","Stats","fallback","component","App","linear","shadows","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","render","document","getElementById"],"mappings":"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","file":"static/js/main.94eee2b2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/animation.07175b80.glb\";","import { useEffect, useMemo, useRef } from \"react\";\r\nimport { AnimationMixer } from \"three\";\r\nimport { useFrame } from \"@react-three/fiber\";\r\nimport { useGLTF } from \"@react-three/drei\";\r\n\r\nimport animationGlb from \"./animation.glb\";\r\n\r\nconst Animation = () => {\r\n  const { animations, scene } = useGLTF(animationGlb, true);\r\n  const animationRef = useRef();\r\n  const mixer = useMemo(() => new AnimationMixer(), []);\r\n\r\n  useEffect(() => {\r\n    if (animationRef.current) {\r\n      mixer.clipAction(animations[0], animationRef.current).play();\r\n    }\r\n  }, [animations, mixer]);\r\n\r\n  useFrame((state, delta) => {\r\n    mixer.update(delta);\r\n  });\r\n\r\n  return <primitive object={scene} ref={animationRef} />;\r\n};\r\n\r\nexport default Animation;\r\n","import { useState } from \"react\";\r\nimport { Text } from \"@react-three/drei\";\r\n\r\nconst Button = () => {\r\n  const [hover, setHover] = useState(false);\r\n  const [color, setColor] = useState(0x00ff00);\r\n\r\n  return (\r\n    <group\r\n      onClick={() => setColor(0xff0000)}\r\n      onDoubleClick={() => setColor(0x0000ff)}\r\n      onPointerOut={() => setHover(false)}\r\n      onPointerOver={() => setHover(true)}\r\n    >\r\n      <mesh>\r\n        <meshMatcapMaterial\r\n          color={color}\r\n          opacity={hover ? 0.75 : 1}\r\n          transparent={true}\r\n        />\r\n        <planeGeometry args={[1, 0.5]} />\r\n      </mesh>\r\n      <Text color=\"white\" fontSize={0.2} position={[0, 0, 0.01]}>\r\n        Click Me!\r\n      </Text>\r\n    </group>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import { useState } from \"react\";\r\nimport { MathUtils } from \"three\";\r\nimport { Text } from \"@react-three/drei\";\r\nimport { animated, useSpring } from \"@react-spring/three\";\r\n\r\nconst Spring = (props) => {\r\n  const [hover, setHover] = useState(false);\r\n  const [toggle, setToggle] = useState(false);\r\n  const [colorCurrent, setColorCurrent] = useState(0xff0000);\r\n  const { opacity, rotation, scale } = useSpring({\r\n    opacity: toggle ? 0.5 : 0.2,\r\n    rotation: toggle ? [MathUtils.degToRad(-45), 0, 0] : [0, 0, 0],\r\n    scale: hover ? [1.5, 1.25, 1] : [1, 1, 1],\r\n  });\r\n\r\n  return (\r\n    <animated.group\r\n      {...props}\r\n      onClick={() => setToggle(!toggle)}\r\n      onDoubleClick={() => setColorCurrent(colorCurrent >> 8)}\r\n      onPointerOut={() => setHover(false)}\r\n      onPointerOver={() => setHover(true)}\r\n      rotation={rotation}\r\n    >\r\n      <animated.mesh scale={scale}>\r\n        <planeGeometry args={[1, 0.5]} />\r\n        <animated.meshBasicMaterial\r\n          color={0xff0000}\r\n          opacity={opacity}\r\n          transparent={true}\r\n        />\r\n      </animated.mesh>\r\n      <Text color=\"white\" fontSize={0.2} position={[0, 0, 0.01]}>\r\n        Click Me!\r\n      </Text>\r\n    </animated.group>\r\n  );\r\n};\r\n\r\nexport default Spring;\r\n","const AZERTY = {\r\n  LEFT: \"KeyQ\",\r\n  UP: \"KeyZ\",\r\n};\r\nconst DIRECTION = {\r\n  BACK: -1,\r\n  DOWN: -1,\r\n  FORWARD: 1,\r\n  LEFT: -1,\r\n  NONE: 0,\r\n  RIGHT: 1,\r\n  UP: 1,\r\n};\r\nconst QWERTY = {\r\n  LEFT: \"KeyA\",\r\n  UP: \"KeyW\",\r\n};\r\n\r\nclass KeyboardControls {\r\n  static #forwardDirection = DIRECTION.NONE;\r\n  static #keyboard = QWERTY;\r\n  static #rightDirection = DIRECTION.NONE;\r\n  static #upDirection = DIRECTION.NONE;\r\n\r\n  static get forwardDirection() {\r\n    return this.#forwardDirection;\r\n  }\r\n\r\n  static get rightDirection() {\r\n    return this.#rightDirection;\r\n  }\r\n\r\n  static get upDirection() {\r\n    return this.#upDirection;\r\n  }\r\n\r\n  static keyDownHandler(event) {\r\n    console.log(\"KeyboardControls: keyDownHandler\", `'${event.code}'`);\r\n    switch (event.code) {\r\n      case \"ArrowDown\":\r\n      case \"KeyS\":\r\n        KeyboardControls.#forwardDirection = DIRECTION.BACK;\r\n        break;\r\n      case \"ArrowLeft\":\r\n      case KeyboardControls.#keyboard.LEFT:\r\n        KeyboardControls.#rightDirection = DIRECTION.LEFT;\r\n        break;\r\n      case \"ArrowRight\":\r\n      case \"KeyD\":\r\n        KeyboardControls.#rightDirection = DIRECTION.RIGHT;\r\n        break;\r\n      case \"ArrowUp\":\r\n      case KeyboardControls.#keyboard.UP:\r\n        KeyboardControls.#forwardDirection = DIRECTION.FORWARD;\r\n        break;\r\n      case \"KeyF\":\r\n        KeyboardControls.#upDirection = DIRECTION.DOWN;\r\n        break;\r\n      case \"KeyR\":\r\n        KeyboardControls.#upDirection = DIRECTION.UP;\r\n        break;\r\n      default:\r\n    }\r\n  }\r\n\r\n  static keyUpHandler(event) {\r\n    console.log(\"KeyboardControls: keyUpHandler\", `'${event.code}'`);\r\n    switch (event.code) {\r\n      case \"ArrowDown\":\r\n      case \"ArrowUp\":\r\n      case \"KeyS\":\r\n      case KeyboardControls.#keyboard.UP:\r\n        KeyboardControls.#forwardDirection = DIRECTION.NONE;\r\n        break;\r\n      case \"ArrowLeft\":\r\n      case \"ArrowRight\":\r\n      case \"KeyD\":\r\n      case KeyboardControls.#keyboard.LEFT:\r\n        KeyboardControls.#rightDirection = DIRECTION.NONE;\r\n        break;\r\n      case \"KeyF\":\r\n      case \"KeyR\":\r\n        KeyboardControls.#upDirection = DIRECTION.NONE;\r\n        break;\r\n      default:\r\n    }\r\n  }\r\n\r\n  static addEventListeners() {\r\n    console.info(\"KeyboardControls: addEventListeners\");\r\n    window.addEventListener(\"keydown\", KeyboardControls.keyDownHandler);\r\n    window.addEventListener(\"keyup\", KeyboardControls.keyUpHandler);\r\n  }\r\n\r\n  static removeEventListeners() {\r\n    console.info(\"KeyboardControls: removeEventListeners\");\r\n    window.removeEventListener(\"keydown\", KeyboardControls.keyDownHandler);\r\n    window.removeEventListener(\"keyup\", KeyboardControls.keyUpHandler);\r\n  }\r\n\r\n  static setKeyboardAzerty() {\r\n    console.log(this.#keyboard);\r\n    this.#keyboard = AZERTY;\r\n    console.log(this.#keyboard);\r\n  }\r\n\r\n  static setKeyboardQwerty() {\r\n    this.#keyboard = QWERTY;\r\n  }\r\n}\r\n\r\nexport default KeyboardControls;\r\n","import { MathUtils } from \"three\";\r\n\r\nclass MathCircle {\r\n  #radius = 1;\r\n  #angle = 0;\r\n\r\n  constructor(radius = 1) {\r\n    this.#radius = radius;\r\n  }\r\n\r\n  get angle() {\r\n    return this.#angle;\r\n  }\r\n\r\n  set angle(degrees) {\r\n    this.#angle = MathUtils.degToRad(degrees);\r\n  }\r\n\r\n  getCoordinates(degrees) {\r\n    this.angle = degrees;\r\n    const x = Math.cos(this.angle) * this.#radius;\r\n    const y = Math.sin(this.angle) * this.#radius;\r\n\r\n    return { x, y };\r\n  }\r\n}\r\n\r\nexport default MathCircle;\r\n","class ZeroFill {\r\n  #number;\r\n  #postfix;\r\n  #zeros;\r\n\r\n  constructor(number = 0, zeros = 0, postfix = \"\") {\r\n    this.number = number;\r\n    this.#postfix = postfix;\r\n    this.#zeros = zeros;\r\n  }\r\n\r\n  get number() {\r\n    return this.zeroFill(this.#number);\r\n  }\r\n\r\n  set number(number) {\r\n    this.#number = Math.floor(number).toString();\r\n  }\r\n\r\n  toString() {\r\n    return this.number + this.#postfix;\r\n  }\r\n\r\n  zeroFill(string) {\r\n    while (string.length < this.#zeros) {\r\n      string = `0${string}`;\r\n    }\r\n    return string;\r\n  }\r\n}\r\n\r\nexport default ZeroFill;\r\n","import { useRef } from \"react\";\r\nimport { MathUtils } from \"three\";\r\nimport { useFrame } from \"@react-three/fiber\";\r\nimport { Text } from \"@react-three/drei\";\r\nimport { MathCircle } from \"App/utils\";\r\n\r\nfunction isHour(tick) {\r\n  return !(tick % 5);\r\n}\r\n\r\nconst HH = 12;\r\nconst MM = 60;\r\nconst SS = 60;\r\n\r\nconst CLOCK_SIZE = 1;\r\n\r\nconst HAND_HH_LENGTH = 0.6;\r\nconst HAND_MM_LENGTH = 0.7;\r\nconst HAND_SS_COLOR = 0xffcc66;\r\nconst HAND_SS_LENGTH = 0.8;\r\nconst HAND_THICKNESS = 0.02;\r\n\r\nconst MARK_HH_COLOR = 0xff0000;\r\nconst MARK_HH_LENGTH = 0.1;\r\nconst MARK_HH_WIDTH = 0.02;\r\nconst MARK_MM_COLOR = 0xffffff;\r\nconst MARK_MM_LENGTH = 0.08;\r\nconst MARK_MM_WIDTH = 0.01;\r\nconst MARK_OFFSET = 0.05;\r\n\r\n/**\r\n * Clock using standard react-three-fiber jsx\r\n */\r\nconst Clock = (props) => {\r\n  const clockRef = useRef();\r\n  const handHoursRef = useRef();\r\n  const handMinutesRef = useRef();\r\n  const handSecondsRef = useRef();\r\n\r\n  const angleStart = MathUtils.degToRad(90);\r\n\r\n  useFrame(() => {\r\n    const d = new Date();\r\n    if (handHoursRef.current) {\r\n      handHoursRef.current.rotation.z = MathUtils.degToRad(\r\n        (d.getHours() + d.getMinutes() / MM) * -(360 / HH)\r\n      );\r\n    }\r\n    if (handMinutesRef.current) {\r\n      handMinutesRef.current.rotation.z = MathUtils.degToRad(\r\n        d.getMinutes() * -(360 / MM)\r\n      );\r\n    }\r\n    if (handSecondsRef.current) {\r\n      handSecondsRef.current.rotation.z = MathUtils.degToRad(\r\n        d.getSeconds() * -(360 / SS)\r\n      );\r\n    }\r\n  });\r\n\r\n  return (\r\n    <group ref={clockRef} {...props}>\r\n      {/* <axesHelper /> */}\r\n      <group>\r\n        <Text color=\"black\" position={[0, -0.25, 0.01]}>\r\n          Arteveldehogeschool\r\n        </Text>\r\n        {Array(HH)\r\n          .fill(null)\r\n          .map((value, index) => {\r\n            const c = new MathCircle(CLOCK_SIZE - MARK_HH_LENGTH * 2.5);\r\n            const angle = index * (360 / HH) + 90;\r\n            const { x, y } = c.getCoordinates(angle);\r\n            return (\r\n              <Text\r\n                color={HAND_SS_COLOR}\r\n                key={index}\r\n                position={[x, y, 0.01]}\r\n                scale={[1.2, 1.2, 1]}\r\n              >\r\n                {(12 - index).toString()}\r\n              </Text>\r\n            );\r\n          })}\r\n      </group>\r\n      <group rotation={[0, 0, angleStart]}>\r\n        <mesh receiveShadow={true}>\r\n          <circleGeometry args={[CLOCK_SIZE, MM]} />\r\n          <meshStandardMaterial opacity={0.25} transparent={true} />\r\n        </mesh>\r\n        <group position={[0, 0, HAND_THICKNESS / 2]}>\r\n          <group position={[0, 0, HAND_THICKNESS / 2]} ref={handHoursRef}>\r\n            <mesh castShadow={true} position={[HAND_HH_LENGTH / 2, 0, 0]}>\r\n              <boxGeometry args={[HAND_HH_LENGTH, 0.06, HAND_THICKNESS]} />\r\n              <meshStandardMaterial />\r\n            </mesh>\r\n          </group>\r\n          <group position={[0, 0, HAND_THICKNESS * 2]} ref={handMinutesRef}>\r\n            <mesh castShadow={true} position={[HAND_MM_LENGTH / 2, 0, 0]}>\r\n              <boxGeometry args={[HAND_MM_LENGTH, 0.04, HAND_THICKNESS]} />\r\n              <meshStandardMaterial />\r\n            </mesh>\r\n          </group>\r\n          <group\r\n            position={[0, 0, HAND_THICKNESS * 3 + HAND_THICKNESS / 2]}\r\n            ref={handSecondsRef}\r\n          >\r\n            <mesh castShadow={true} position={[HAND_SS_LENGTH / 2, 0, 0]}>\r\n              <boxGeometry args={[HAND_SS_LENGTH, 0.02, HAND_THICKNESS]} />\r\n              <meshStandardMaterial color={HAND_SS_COLOR} />\r\n            </mesh>\r\n          </group>\r\n        </group>\r\n        {Array(MM)\r\n          .fill(null)\r\n          .map((value, index) => {\r\n            const radians = MathUtils.degToRad((360 / MM) * index);\r\n\r\n            return (\r\n              <group\r\n                key={index}\r\n                rotation={[0, 0, radians]}\r\n                position={[0, 0, 0.005]}\r\n              >\r\n                <mesh\r\n                  position={[\r\n                    CLOCK_SIZE -\r\n                      MARK_OFFSET -\r\n                      (isHour(index) ? MARK_HH_LENGTH - 0.01 : MARK_MM_LENGTH) /\r\n                        2,\r\n                    0,\r\n                    0,\r\n                  ]}\r\n                >\r\n                  <boxGeometry\r\n                    args={[\r\n                      isHour(index) ? MARK_HH_LENGTH : MARK_MM_LENGTH,\r\n                      isHour(index) ? MARK_HH_WIDTH : MARK_MM_WIDTH,\r\n                      0.01,\r\n                    ]}\r\n                  />\r\n                  <meshStandardMaterial\r\n                    color={\r\n                      index === 0\r\n                        ? 0x0000ff\r\n                        : isHour(index)\r\n                        ? MARK_HH_COLOR\r\n                        : MARK_MM_COLOR\r\n                    }\r\n                  />\r\n                </mesh>\r\n              </group>\r\n            );\r\n          })}\r\n        <mesh\r\n          castShadow={true}\r\n          position={[0, 0, 0.05]}\r\n          rotation={[-90, 0, 0].map((degrees) => MathUtils.degToRad(degrees))}\r\n        >\r\n          <cylinderGeometry args={[0.1, 0.05, HAND_THICKNESS * 5, 36]} />\r\n          <meshStandardMaterial />\r\n        </mesh>\r\n      </group>\r\n    </group>\r\n  );\r\n};\r\n\r\nexport default Clock;\r\n","import { useEffect, useRef } from \"react\";\r\nimport { MathUtils } from \"three\";\r\nimport { useFrame } from \"@react-three/fiber\";\r\nimport { Text } from \"@react-three/drei\";\r\nimport { ZeroFill } from \"App/utils\";\r\n\r\nconst ClockDigital = (props) => {\r\n  const clockRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (clockRef.current) {\r\n      clockRef.current.rotation.x = MathUtils.degToRad(-30);\r\n    }\r\n  }, []);\r\n\r\n  useFrame(() => {\r\n    let d = new Date();\r\n\r\n    const HH = new ZeroFill(d.getHours(), 2);\r\n    const MM = new ZeroFill(d.getMinutes(), 2);\r\n    const SS = new ZeroFill(d.getSeconds(), 2);\r\n    if (clockRef.current) {\r\n      clockRef.current.text = `${HH}:${MM}:${SS}`;\r\n    }\r\n  });\r\n\r\n  return <Text fontSize={2} ref={clockRef} {...props} />;\r\n};\r\n\r\nexport default ClockDigital;\r\n","import { useState } from \"react\";\r\nimport { animated, useSpring } from \"@react-spring/three\";\r\n\r\nconst Cube = (props) => {\r\n  const colors = [\"#f00\", \"#ff0\", \"#0f0\", \"#0ff\", \"#00f\", \"#f0f\"];\r\n  const color = colors[Math.floor(Math.random() * colors.length)];\r\n  const [toggle, setToggle] = useState(true);\r\n  const { opacity, position } = useSpring({\r\n    opacity: toggle ? 1 : 0.5,\r\n    position: toggle ? [0, 0, 0] : getPosition(),\r\n  });\r\n\r\n  function getPosition() {\r\n    return [4, 4, 0].map((value) => (Math.random() * 2 - 1) * value);\r\n  }\r\n\r\n  return (\r\n    <animated.mesh\r\n      {...props}\r\n      onClick={() => setToggle(!toggle)}\r\n      position={position}\r\n    >\r\n      <boxGeometry args={[1, 1, 1]} />\r\n      <animated.meshMatcapMaterial\r\n        color={color}\r\n        opacity={opacity}\r\n        transparent={true}\r\n      />\r\n    </animated.mesh>\r\n  );\r\n};\r\n\r\nexport default Cube;\r\n","import { MathUtils } from \"three\";\r\nimport { Plane } from \"@react-three/drei\";\r\n\r\nconst Face = (props) => {\r\n  return (\r\n    <Plane\r\n      args={[10, 10]}\r\n      rotation={[MathUtils.degToRad(-90), 0, 0]}\r\n      {...props}\r\n    >\r\n      <meshStandardMaterial />\r\n    </Plane>\r\n  );\r\n};\r\n\r\nexport default Face;\r\n","// @todo Rotate gauge based on range, in stead of compensating rotation in calculation.\r\nimport { useRef } from \"react\";\r\nimport { MathUtils } from \"three\";\r\nimport { useFrame } from \"@react-three/fiber\";\r\nimport { Box, Circle, Cone, Cylinder } from \"@react-three/drei\";\r\n\r\nconst ANGLE_RANGE = 270;\r\nconst NEEDLE_STEP = {\r\n  DOWN: -250,\r\n  UP: 60,\r\n};\r\n\r\nconst Gauge = (props) => {\r\n  const TICK_MARKS = [\r\n    { color: \"green\", label: \"0\", ref: useRef(), value: 0 },\r\n    { color: \"white\", label: \"10\", ref: useRef(), value: 1000 },\r\n    { color: \"white\", label: \"20\", ref: useRef(), value: 2000 },\r\n    { color: \"white\", label: \"30\", ref: useRef(), value: 3000 },\r\n    { color: \"white\", label: \"40\", ref: useRef(), value: 4000 },\r\n    { color: \"white\", label: \"50\", ref: useRef(), value: 5000 },\r\n    { color: \"orange\", label: \"60\", ref: useRef(), value: 6000 },\r\n    { color: \"red\", label: \"70\", ref: useRef(), value: 7000 },\r\n    { color: \"red\", label: \"80\", ref: useRef(), value: 8000 },\r\n  ];\r\n  const angleStep = ANGLE_RANGE / (TICK_MARKS.length - 1);\r\n  const angleStart = MathUtils.degToRad(-(90 + (360 - ANGLE_RANGE) / 2));\r\n  const valueRange = (TICK_MARKS.length - 1) * 1000;\r\n  const valueStep = ANGLE_RANGE / valueRange;\r\n  const needleRef = useRef();\r\n  let needleAngle = 0;\r\n  let needleValue = 0;\r\n  let needleStep = NEEDLE_STEP.UP;\r\n\r\n  useFrame(() => {\r\n    if (needleValue <= 0) {\r\n      needleStep = NEEDLE_STEP.UP;\r\n    } else if (valueRange <= needleValue) {\r\n      needleStep = NEEDLE_STEP.DOWN;\r\n    }\r\n    needleValue += needleStep;\r\n    needleAngle = MathUtils.degToRad(-(valueStep * needleValue));\r\n    needleRef.current.rotation.z = needleAngle;\r\n\r\n    TICK_MARKS.forEach((tickMark) => {\r\n      tickMark.ref.current.children[0].material.color.setColorName(\r\n        tickMark.value <= needleValue ? \"blue\" : tickMark.color\r\n      );\r\n    });\r\n  });\r\n\r\n  return (\r\n    <group {...props} rotation={[0, 0, angleStart]}>\r\n      <Circle args={[1.2, 62]} position={[0, 0, 0]} receiveShadow={true}>\r\n        <meshStandardMaterial opacity={0.25} transparent={true} />\r\n      </Circle>\r\n      {TICK_MARKS.map((tickMark, index) => {\r\n        return (\r\n          <group\r\n            key={index}\r\n            ref={tickMark.ref}\r\n            rotation={[0, 0, -angleStep * index].map((degrees) =>\r\n              MathUtils.degToRad(degrees)\r\n            )}\r\n          >\r\n            <Box args={[0.25, 0.05, 0.02]} position={[1, 0, 0.01]}>\r\n              <meshStandardMaterial\r\n                color={tickMark.color}\r\n                metalness={0.1}\r\n                opacity={0.5}\r\n                roughness={0.6}\r\n                transparent={true}\r\n              />\r\n            </Box>\r\n          </group>\r\n        );\r\n      })}\r\n\r\n      <group position={[0, 0, 0.05]}>\r\n        <group ref={needleRef}>\r\n          <group\r\n            rotation={[0, 0, -90].map((degrees) => MathUtils.degToRad(degrees))}\r\n          >\r\n            <Cone args={[0.03, 1, 4]} castShadow={true} position={[0, 0.5, 0]}>\r\n              <meshStandardMaterial\r\n                color=\"orange\"\r\n                metalness={0.1}\r\n                roughness={0.6}\r\n              />\r\n            </Cone>\r\n          </group>\r\n        </group>\r\n        <Cylinder\r\n          args={[0.1, 0.05, 0.1, 36]}\r\n          castShadow={true}\r\n          rotation={[-90, 0, 0].map((degrees) => MathUtils.degToRad(degrees))}\r\n        >\r\n          <meshStandardMaterial />\r\n        </Cylinder>\r\n      </group>\r\n    </group>\r\n  );\r\n};\r\n\r\nexport default Gauge;\r\n","export default __webpack_public_path__ + \"static/media/UV_Grid_Sm.8ab40f71.jpg\";","import { DoubleSide, Vector2 } from \"three\";\r\nimport { useTexture } from \"@react-three/drei\";\r\n\r\nimport uvGrid from \"./UV_Grid_Sm.jpg\";\r\n\r\nconst Image = () => {\r\n  const texture = useTexture(uvGrid, true);\r\n  texture.offset = new Vector2(0, 0);\r\n  texture.repeat = new Vector2(1, 1);\r\n\r\n  return (\r\n    <mesh>\r\n      <planeGeometry args={[1, 1, 1]} />\r\n      <meshStandardMaterial center map={texture} side={DoubleSide} />\r\n    </mesh>\r\n  );\r\n};\r\n\r\nexport default Image;\r\n","export default __webpack_public_path__ + \"static/media/arteveldehogeschool_logo.6220cd57.svg\";","export default __webpack_public_path__ + \"static/media/SVG_logo.e87754b4.svg\";","import { SvgLoader } from \"App/components\";\r\n\r\nimport logoNl from \"./arteveldehogeschool_logo.svg\";\r\nimport svgLogo from \"./SVG_logo.svg\";\r\n\r\nconst svgLogoUrl =\r\n  \"https://upload.wikimedia.org/wikipedia/commons/0/02/SVG_logo.svg\";\r\n\r\nconst ImageSvg = (props) => {\r\n  const scale = 0.0075;\r\n\r\n  return (\r\n    <>\r\n      <SvgLoader position={[0, 0, 0]} scale={scale} source={svgLogoUrl} />;\r\n      <SvgLoader position={[0, 0, -1]} scale={scale} source={logoNl} />;\r\n      <SvgLoader position={[0, 0, -2]} scale={scale} source={svgLogo} />;\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImageSvg;\r\n","import { MathUtils } from \"three\";\r\n\r\nconst Lighting = () => {\r\n  return (\r\n    <>\r\n      <ambientLight color={0xffffff} intensity={0.1} />\r\n      <directionalLight\r\n        castShadow={true}\r\n        color={0xffffff}\r\n        intensity={1}\r\n        position={[4, 4, 1]}\r\n      />\r\n      <hemisphereLight />\r\n      <pointLight\r\n        castShadow={true}\r\n        color={0xffcc77}\r\n        intensity={0.5}\r\n        position={[-4, 1, -4]}\r\n      />\r\n      <spotLight\r\n        angle={MathUtils.degToRad(30)}\r\n        castShadow={true}\r\n        color={0xffcc77}\r\n        intensity={1}\r\n        penumbra={0.5}\r\n        position={[0, 4, 0]}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Lighting;\r\n","import { useRef } from \"react\";\r\nimport {\r\n  DirectionalLightHelper,\r\n  MathUtils,\r\n  Object3D,\r\n  PointLightHelper,\r\n  SpotLightHelper,\r\n} from \"three\";\r\nimport { useControls } from \"leva\";\r\nimport { useFrame, useThree } from \"@react-three/fiber\";\r\nimport { useHelper } from \"@react-three/drei\";\r\n\r\nconst LightingGui = () => {\r\n  const { ambientLightColor, ambientLightIntensity } = useControls(\r\n    \"Lighting - Ambient Light\",\r\n    {\r\n      ambientLightColor: { label: \"Color\", value: \"#ffffff\" },\r\n      ambientLightIntensity: { label: \"Intensity\", max: 1, min: 0, value: 0.1 },\r\n    }\r\n  );\r\n  const { directionalLightColor, directionalLightIntensity } = useControls(\r\n    \"Lighting - Directional Light\",\r\n    {\r\n      directionalLightColor: { label: \"Color\", value: \"#ffffff\" },\r\n      directionalLightIntensity: {\r\n        label: \"Intensity\",\r\n        max: 1,\r\n        min: 0,\r\n        value: 1,\r\n      },\r\n    }\r\n  );\r\n  const {\r\n    pointLightColor,\r\n    pointLightIntensity,\r\n    pointLightPosition,\r\n  } = useControls(\"Lighting - Point Light\", {\r\n    pointLightColor: { label: \"Color\", value: \"#ffcc77\" },\r\n    pointLightIntensity: { label: \"Intensity\", max: 20, min: 0, value: 0.5 },\r\n    pointLightPosition: { label: \"Position XZ\", value: { x: -4, z: -4 } },\r\n  });\r\n  const {\r\n    spotLightColor,\r\n    spotLightIntensity,\r\n    spotLightPosition,\r\n    spotLightTarget,\r\n  } = useControls(\"Lighting - Spot Light\", {\r\n    spotLightColor: { label: \"Color\", value: \"#ffcc77\" },\r\n    spotLightIntensity: { label: \"Intensity\", max: 20, min: 0, value: 1 },\r\n    spotLightPosition: { label: \"Position XZ\", value: { x: 0, z: 0 } },\r\n    spotLightTarget: { label: \"Target XZ\", value: { x: 0, z: 0 } },\r\n  });\r\n\r\n  const { scene } = useThree();\r\n  const target = new Object3D();\r\n  scene.add(target);\r\n\r\n  const directionalLightRef = useRef();\r\n  // const hemisphereLightRef = useRef();\r\n  const pointLightRef = useRef();\r\n  const spotLightRef = useRef();\r\n  const helperSize = 0.5;\r\n  useHelper(\r\n    directionalLightRef,\r\n    DirectionalLightHelper,\r\n    helperSize,\r\n    directionalLightColor\r\n  );\r\n  useHelper(pointLightRef, PointLightHelper, helperSize, pointLightColor);\r\n  useHelper(spotLightRef, SpotLightHelper, spotLightColor);\r\n\r\n  useFrame(() => {\r\n    target.translateX(spotLightTarget.x);\r\n    target.translateZ(spotLightTarget.z);\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <ambientLight\r\n        color={ambientLightColor}\r\n        intensity={ambientLightIntensity}\r\n      />\r\n      <directionalLight\r\n        castShadow={true}\r\n        color={directionalLightColor}\r\n        intensity={directionalLightIntensity}\r\n        position={[4, 4, 1]}\r\n        ref={directionalLightRef}\r\n      />\r\n      {/* <hemisphereLight ref={hemisphereLightRef} /> */}\r\n      <pointLight\r\n        castShadow={true}\r\n        color={pointLightColor}\r\n        intensity={pointLightIntensity}\r\n        position={[pointLightPosition.x, 1, pointLightPosition.z]}\r\n        ref={pointLightRef}\r\n      />\r\n      <spotLight\r\n        angle={MathUtils.degToRad(30)}\r\n        castShadow={true}\r\n        color={spotLightColor}\r\n        intensity={spotLightIntensity}\r\n        penumbra={0.5}\r\n        position={[spotLightPosition.x, 4, spotLightPosition.z]}\r\n        ref={spotLightRef}\r\n        target={target}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LightingGui;\r\n","const LightingStudio = () => {\r\n  return (\r\n    <>\r\n      <ambientLight intensity={0.1} />\r\n      <directionalLight\r\n        castShadow={true}\r\n        color=\"hsl(0, 0%, 70%)\"\r\n        intensity={0.4}\r\n        position={[0, 2, 4]}\r\n      />\r\n      <directionalLight\r\n        castShadow={true}\r\n        color=\"hsl(210, 100%, 70%)\"\r\n        position={[-4, 0, 0]}\r\n      />\r\n      <directionalLight\r\n        castShadow={true}\r\n        color=\"hsl(30, 100%, 70%)\"\r\n        position={[4, 0, 0]}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LightingStudio;\r\n","import { useRef } from \"react\";\r\nimport { DirectionalLightHelper } from \"three\";\r\nimport { useControls } from \"leva\";\r\nimport { useHelper } from \"@react-three/drei\";\r\n\r\nconst LightingStudio = () => {\r\n  const { ambientLightColor, ambientLightIntensity } = useControls(\r\n    \"Lighting - Ambient Light\",\r\n    {\r\n      ambientLightColor: { label: \"Color\", value: \"hsl(0, 0%, 100%)\" },\r\n      ambientLightIntensity: { label: \"Intensity\", max: 1, min: 0, value: 0.1 },\r\n    }\r\n  );\r\n  const { frontLightColor, frontLightIntensity } = useControls(\r\n    \"Lighting - Front Light\",\r\n    {\r\n      frontLightColor: { label: \"Color\", value: \"hsl(0, 0%, 70%)\" },\r\n      frontLightIntensity: { label: \"Intensity\", max: 2, min: 0, value: 0.4 },\r\n    }\r\n  );\r\n  const { leftLightColor, leftLightIntensity } = useControls(\r\n    \"Lighting - Left Light\",\r\n    {\r\n      leftLightColor: { label: \"Color\", value: \"hsl(210, 100%, 70%)\" },\r\n      leftLightIntensity: { label: \"Intensity\", max: 2, min: 0, value: 1 },\r\n    }\r\n  );\r\n  const { rightLightColor, rightLightIntensity } = useControls(\r\n    \"Lighting - Right Light\",\r\n    {\r\n      rightLightColor: { label: \"Color\", value: \"hsl(30, 100%, 70%)\" },\r\n      rightLightIntensity: { label: \"Intensity\", max: 2, min: 0, value: 1 },\r\n    }\r\n  );\r\n\r\n  const frontLightRef = useRef();\r\n  const leftLightRef = useRef();\r\n  const rightLightRef = useRef();\r\n  const helperSize = 0.5;\r\n  useHelper(frontLightRef, DirectionalLightHelper, helperSize, frontLightColor);\r\n  useHelper(leftLightRef, DirectionalLightHelper, helperSize, leftLightColor);\r\n  useHelper(rightLightRef, DirectionalLightHelper, helperSize, rightLightColor);\r\n\r\n  return (\r\n    <>\r\n      <ambientLight\r\n        color={ambientLightColor}\r\n        intensity={ambientLightIntensity}\r\n      />\r\n      <directionalLight\r\n        castShadow={true}\r\n        color={frontLightColor}\r\n        intensity={frontLightIntensity}\r\n        position={[0, 2, 4]}\r\n        ref={frontLightRef}\r\n      />\r\n      <directionalLight\r\n        castShadow={true}\r\n        color={leftLightColor}\r\n        intensity={leftLightIntensity}\r\n        position={[-4, 0, 0]}\r\n        ref={leftLightRef}\r\n      />\r\n      <directionalLight\r\n        castShadow={true}\r\n        color={rightLightColor}\r\n        intensity={rightLightIntensity}\r\n        position={[4, 0, 0]}\r\n        ref={rightLightRef}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LightingStudio;\r\n","const LightingThreePoint = () => {\r\n  return (\r\n    <>\r\n      <ambientLight intensity={0.1} />\r\n      <spotLight\r\n        castShadow={true}\r\n        color=\"hsl(0, 0%, 70%)\"\r\n        intensity={0.75}\r\n        position={[4, 2, -4]}\r\n      />\r\n      <spotLight\r\n        castShadow={true}\r\n        color=\"hsl(210, 100%, 70%)\"\r\n        intensity={0.75}\r\n        position={[-4, 2, 4]}\r\n      />\r\n      <spotLight\r\n        castShadow={true}\r\n        color=\"hsl(30, 100%, 70%)\"\r\n        intensity={0.75}\r\n        position={[4, 2, 4]}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LightingThreePoint;\r\n","import { useRef } from \"react\";\r\nimport { SpotLightHelper } from \"three\";\r\nimport { useControls } from \"leva\";\r\nimport { useHelper } from \"@react-three/drei\";\r\n\r\nconst LightingThreePointGui = () => {\r\n  const { ambientLightColor, ambientLightIntensity } = useControls(\r\n    \"Lighting - Ambient Light\",\r\n    {\r\n      ambientLightColor: { label: \"Color\", value: \"hsl(0, 0%, 100%)\" },\r\n      ambientLightIntensity: { label: \"Intensity\", max: 1, min: 0, value: 0.1 },\r\n    }\r\n  );\r\n  const { backLightColor, backLightIntensity } = useControls(\r\n    \"Lighting - Back Light\",\r\n    {\r\n      backLightColor: { label: \"Color\", value: \"hsl(0, 0%, 70%)\" },\r\n      backLightIntensity: { label: \"Intensity\", max: 2, min: 0, value: 0.75 },\r\n    }\r\n  );\r\n  const { fillLightColor, fillLightIntensity } = useControls(\r\n    \"Lighting - Fill Light\",\r\n    {\r\n      fillLightColor: { label: \"Color\", value: \"hsl(210, 100%, 70%)\" },\r\n      fillLightIntensity: { label: \"Intensity\", max: 2, min: 0, value: 0.75 },\r\n    }\r\n  );\r\n  const { keyLightColor, keyLightIntensity } = useControls(\r\n    \"Lighting - Key Light\",\r\n    {\r\n      keyLightColor: { label: \"Color\", value: \"hsl(30, 100%, 70%)\" },\r\n      keyLightIntensity: { label: \"Intensity\", max: 2, min: 0, value: 0.75 },\r\n    }\r\n  );\r\n\r\n  const backLightRef = useRef();\r\n  const fillLightRef = useRef();\r\n  const keyLightRef = useRef();\r\n  useHelper(backLightRef, SpotLightHelper, backLightColor);\r\n  useHelper(fillLightRef, SpotLightHelper, fillLightColor);\r\n  useHelper(keyLightRef, SpotLightHelper, keyLightColor);\r\n\r\n  return (\r\n    <>\r\n      <ambientLight\r\n        color={ambientLightColor}\r\n        intensity={ambientLightIntensity}\r\n      />\r\n      <spotLight\r\n        castShadow={true}\r\n        color={backLightColor}\r\n        intensity={backLightIntensity}\r\n        position={[4, 2, -4]}\r\n        ref={backLightRef}\r\n      />\r\n      <spotLight\r\n        castShadow={true}\r\n        color={fillLightColor}\r\n        intensity={fillLightIntensity}\r\n        position={[-4, 2, 4]}\r\n        ref={fillLightRef}\r\n      />\r\n      <spotLight\r\n        castShadow={true}\r\n        color={keyLightColor}\r\n        intensity={keyLightIntensity}\r\n        position={[4, 2, 4]}\r\n        ref={keyLightRef}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LightingThreePointGui;\r\n","export default __webpack_public_path__ + \"static/media/gltf-logo.d3501fc2.glb\";","import { useRef, useState } from \"react\";\r\nimport { useFrame } from \"@react-three/fiber\";\r\nimport { useGLTF } from \"@react-three/drei\";\r\n\r\nimport gltfLogoGlb from \"./gltf-logo.glb\";\r\n\r\nconst Logo = () => {\r\n  const [clockwise, setClockwise] = useState(false);\r\n\r\n  const gltfLogo = useGLTF(gltfLogoGlb, true);\r\n  const logoRef = useRef();\r\n  const speed = 0.025;\r\n\r\n  useFrame(() => {\r\n    logoRef.current.rotation.y += speed * (clockwise ? 1 : -1);\r\n  });\r\n\r\n  return (\r\n    <primitive\r\n      object={gltfLogo.scene}\r\n      onClick={() => setClockwise(!clockwise)}\r\n      position={[0, 0, 0]}\r\n      ref={logoRef}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import { useRef, useState } from \"react\";\r\nimport { useFrame } from \"@react-three/fiber\";\r\nimport { useGLTF } from \"@react-three/drei\";\r\n\r\nimport gltfLogoGlb from \"./gltf-logo.glb\";\r\n\r\nconst LogoDouble = () => {\r\n  const [clockwise, setClockwise] = useState(false);\r\n\r\n  const gltfLogo = useGLTF(gltfLogoGlb, true);\r\n  const logo1Ref = useRef();\r\n  const logo2Ref = useRef();\r\n  const speed = 0.025;\r\n\r\n  useFrame(() => {\r\n    if (logo1Ref.current)\r\n      logo1Ref.current.rotation.x += speed * (clockwise ? 1 : -1);\r\n    if (logo2Ref.current)\r\n      logo2Ref.current.rotation.y += speed * (clockwise ? 1 : -1);\r\n  });\r\n\r\n  return (\r\n    <group onClick={() => setClockwise(!clockwise)}>\r\n      <primitive\r\n        object={gltfLogo.scene}\r\n        position={[-1, -1, 0]}\r\n        ref={logo1Ref}\r\n      />\r\n      <primitive\r\n        object={gltfLogo.scene.clone(true)}\r\n        position={[1, 1, 0]}\r\n        ref={logo2Ref}\r\n      />\r\n    </group>\r\n  );\r\n};\r\n\r\nexport default LogoDouble;\r\n","const FontFamily = {\r\n  Architects_Daughter:\r\n    \"https://fonts.gstatic.com/s/architectsdaughter/v11/KtkxAKiDZI_td1Lkx62xHZHDtgO_Y-bvfY0.woff\",\r\n  Press_Start_2P:\r\n    \"https://fonts.gstatic.com/s/pressstart2p/v9/e3t4euO8T-267oIAQAu6jDQyK0nR.woff\",\r\n  Roboto_Slab:\r\n    \"https://fonts.gstatic.com/s/robotoslab/v12/BngbUXZYTXPIvIBgJJSb6s3BzlRRfKOFbvjovoSWaw.woff\",\r\n};\r\n\r\nexport default FontFamily;\r\n","/**\r\n * https://pixologic.com/zbrush/downloadcenter/library/\r\n * https://www.badking.com.au/site/product-category/materials/\r\n * https://www.zbrushcentral.com/t/matcap-repository/205029\r\n */\r\nconst MatCap = {\r\n  // Index or ID string, see: https://github.com/emmelleppi/matcaps/\r\n  id: {\r\n    GREEN_CRYSTAL: \"2E763A_78A0B7_B3D1CF_14F209\", // https://github.com/emmelleppi/matcaps/blob/master/PAGE-3.md#2e763a_78a0b7_b3d1cf_14f209 https://pixologic.com/zbrush/downloadcenter/img/matcaps/images/erklaerbar/ok_green_crystal.jpg\r\n    SILVERY: \"4C4C4C_D2D2D2_8F8F8F_ACACAC\", // https://github.com/emmelleppi/matcaps/blob/master/PAGE-8.md#4c4c4c_d2d2d2_8f8f8f_acacac https://pixologic.com/zbrush/downloadcenter/img/matcaps/images/slosh/bgs_silvery.jpg\r\n    TITANIUM: \"C7C7D7_4C4E5A_818393_6C6C74\", // https://github.com/emmelleppi/matcaps/blob/master/PAGE-28.md#c7c7d7_4c4e5a_818393_6c6c74 https://pixologic.com/zbrush/downloadcenter/img/matcaps/images/arranlewis/al_titanium.jpg\r\n    WORN_GOLD: \"6E5137_E8CA90_271912_B99C74\", // https://github.com/emmelleppi/matcaps/blob/master/PAGE-15.md#6e5137_e8ca90_271912_b99c74 https://pixologic.com/zbrush/downloadcenter/img/matcaps/thumbs/sathe/gw_worn_gold.jpg\r\n  },\r\n\r\n  // Texture size\r\n  size: {\r\n    XS: 64,\r\n    SM: 128,\r\n    MD: 256,\r\n    LG: 512,\r\n    XL: 1024,\r\n  },\r\n};\r\n\r\nexport default MatCap;\r\n","import { Text, useMatcapTexture } from \"@react-three/drei\";\r\nimport { FontFamily, MatCap } from \"App/lib\";\r\n\r\nconst LoremIpsum = () => {\r\n  const [matcapGreenCrystal] = useMatcapTexture(\r\n    MatCap.id.GREEN_CRYSTAL,\r\n    MatCap.size.XL\r\n  );\r\n  const [matcapSilvery] = useMatcapTexture(MatCap.id.SILVERY, MatCap.size.XL);\r\n  const [matcapWornGold] = useMatcapTexture(\r\n    MatCap.id.WORN_GOLD,\r\n    MatCap.size.XL\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Text fontSize={1} position={[0, 1, -0.2]}>\r\n        Lorem Ipsum\r\n        <meshLambertMaterial />\r\n      </Text>\r\n      <Text font={FontFamily.Roboto_Slab} fontSize={1} position={[0, 0, 0]}>\r\n        Lorem Ipsum\r\n        <meshMatcapMaterial matcap={matcapWornGold} />\r\n      </Text>\r\n      <Text\r\n        font={FontFamily.Architects_Daughter}\r\n        fontSize={1}\r\n        opacity={0.5}\r\n        position={[0, -1, 0.1]}\r\n        text=\"Lorem Ipsum\"\r\n      >\r\n        <meshMatcapMaterial matcap={matcapGreenCrystal} />\r\n      </Text>\r\n      <Text\r\n        color={0x000000}\r\n        font={FontFamily.Press_Start_2P}\r\n        fontSize={1}\r\n        outlineColor={0x00ff00}\r\n        outlineWidth={0.04}\r\n        position={[0, -2, 0.2]}\r\n        text=\"Lorem Ipsum\"\r\n      >\r\n        <meshMatcapMaterial matcap={matcapSilvery} opacity={0.9} />\r\n      </Text>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoremIpsum;\r\n","export default __webpack_public_path__ + \"static/media/normals.c5aed970.glb\";","import { useRef } from \"react\";\r\nimport { useGLTF } from \"@react-three/drei\";\r\nimport { useFrame } from \"@react-three/fiber\";\r\n\r\nimport normalsGlb from \"./normals.glb\";\r\n\r\nconst Normals = () => {\r\n  const normals = useGLTF(normalsGlb, true);\r\n  const normalsRef = useRef();\r\n\r\n  useFrame(() => {\r\n    if (normalsRef.current) {\r\n      normalsRef.current.rotation.x += 0.02;\r\n    }\r\n  });\r\n\r\n  return <primitive object={normals.scene} ref={normalsRef} />;\r\n};\r\n\r\nexport default Normals;\r\n","import { useEffect, useRef } from \"react\";\r\nimport { Text } from \"@react-three/drei\";\r\nimport { Box, Flex } from \"@react-three/flex\";\r\nimport { Manager } from \"socket.io-client\";\r\nimport { ZeroFill } from \"App/utils\";\r\n\r\nconst Socket = () => {\r\n  const distanceRef = useRef();\r\n  const speedRef = useRef();\r\n\r\n  const PORT = 3001;\r\n  const manager = new Manager(`http://localhost:${PORT}`);\r\n  const socket = manager.socket(\"/\");\r\n\r\n  socket.on(\"connect\", () => {\r\n    console.log(\"Socket connected: \", socket.connected);\r\n  });\r\n\r\n  socket.on(\"disconnect\", () => {\r\n    console.log(\"Socket disconnected\");\r\n  });\r\n\r\n  useEffect(() => {\r\n    socket.on(\"telemetry\", (message) => {\r\n      const distance = new ZeroFill(message.distance, 6, \" km\");\r\n      const speed = new ZeroFill(message.speed, 3, \" km/u\");\r\n      if (distanceRef.current) distanceRef.current.text = distance;\r\n      if (speedRef.current) speedRef.current.text = speed;\r\n    });\r\n  }, [socket]);\r\n\r\n  return (\r\n    <Flex\r\n      flexDirection=\"row\"\r\n      flexWrap=\"wrap\"\r\n      justifyContent=\"space-between\"\r\n      position={[-3, 0, 0]}\r\n      size={[6, 0, 0]}\r\n    >\r\n      <Box>\r\n        <Text\r\n          color=\"hsl(210, 100%, 70%)\"\r\n          fontSize={1}\r\n          ref={distanceRef}\r\n          text=\"Socket.IO\"\r\n        />\r\n      </Box>\r\n      <Box>\r\n        <Text\r\n          color=\"hsl(30, 100%, 70%)\"\r\n          fontSize={1}\r\n          ref={speedRef}\r\n          text=\"Socket.IO\"\r\n        />\r\n      </Box>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default Socket;\r\n","import { useState } from \"react\";\r\nimport { DoubleSide, MathUtils } from \"three\";\r\nimport { useMatcapTexture } from \"@react-three/drei\";\r\nimport { animated, useSpring } from \"@react-spring/three\";\r\nimport * as easings from \"d3-ease\";\r\n\r\nconst Spring = (props) => {\r\n  const [toggle, setToggle] = useState(true);\r\n  const [matcap] = useMatcapTexture(\r\n    \"80CA23_B7EE37_D5FA4C_A3E434\", // Index or ID string, see: https://github.com/emmelleppi/matcaps/\r\n    1024 // Texture size (64, 128, 256, 512, 1024)\r\n  );\r\n  const { opacity, position } = useSpring({\r\n    config: {\r\n      duration: 200,\r\n      easing: easings.easeCubic,\r\n    },\r\n    delay: 100,\r\n    from: {\r\n      opacity: toggle ? 0.5 : 1,\r\n      position: toggle ? [0, 0, 0] : [0, 0, -2],\r\n    },\r\n    to: [\r\n      { opacity: toggle ? 1 : 0.5 },\r\n      { opacity: toggle ? 0.5 : 1 },\r\n      { opacity: toggle ? 1 : 0.5, position: toggle ? [0, 0, -2] : [0, 0, 0] },\r\n    ],\r\n  });\r\n\r\n  return (\r\n    <group {...props}>\r\n      <mesh onClick={() => setToggle(!toggle)}>\r\n        <ringGeometry\r\n          args={[\r\n            1.1, // innerRadius\r\n            1.9, // outerRadius\r\n            72, // thetaSegments\r\n            1, // phiSegments\r\n            MathUtils.degToRad(90), // thetaStart\r\n            MathUtils.degToRad(350), // thetaLength\r\n          ]}\r\n        />\r\n        <animated.meshMatcapMaterial\r\n          matcap={matcap}\r\n          opacity={opacity}\r\n          side={DoubleSide}\r\n          transparent={true}\r\n        />\r\n      </mesh>\r\n      <animated.mesh position={position}>\r\n        <torusGeometry\r\n          args={[\r\n            1.5, // radius\r\n            0.5, // tube\r\n            72, // radialSegments\r\n            32, // tubularSegments\r\n            MathUtils.degToRad(360), // arc\r\n          ]}\r\n        />\r\n        <meshMatcapMaterial matcap={matcap} opacity={0.25} transparent={true} />\r\n      </animated.mesh>\r\n    </group>\r\n  );\r\n};\r\n\r\nexport default Spring;\r\n","export default __webpack_public_path__ + \"static/media/suzanne.a6e83718.glb\";","import { useRef, useState } from \"react\";\r\nimport { useFrame } from \"@react-three/fiber\";\r\nimport { useGLTF } from \"@react-three/drei\";\r\n\r\nimport suzanneGlb from \"./suzanne.glb\";\r\n\r\nconst Suzanne = () => {\r\n  const [clockwise, setClockwise] = useState(false);\r\n  const [rotate, setRotate] = useState(false);\r\n  const { nodes, materials } = useGLTF(suzanneGlb, true);\r\n  const objectRef = useRef();\r\n  const speed = 0.025;\r\n\r\n  useFrame(() => {\r\n    if (objectRef.current) {\r\n      objectRef.current.rotation.x +=\r\n        speed * (rotate ? 1 : 0) * (clockwise ? 1 : -1);\r\n      objectRef.current.rotation.y +=\r\n        speed * (rotate ? 1 : 0) * (clockwise ? 1 : -1);\r\n      objectRef.current.rotation.z +=\r\n        speed * (rotate ? 1 : 0) * (clockwise ? 1 : -1);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <group\r\n      ref={objectRef}\r\n      onClick={() => setClockwise(!clockwise)}\r\n      onDoubleClick={() => setRotate(!rotate)}\r\n    >\r\n      <mesh geometry={nodes.Suzanne.geometry} material={materials[\"Paars\"]} />\r\n    </group>\r\n  );\r\n};\r\n\r\nexport default Suzanne;\r\n","import { useGLTF, useMatcapTexture } from \"@react-three/drei\";\r\nimport { MatCap } from \"App/lib\";\r\n\r\nimport suzanneGlb from \"./suzanne.glb\";\r\n\r\nconst SuzanneMatcapTexture = () => {\r\n  const { nodes } = useGLTF(suzanneGlb, true);\r\n\r\n  const [matcap] = useMatcapTexture(MatCap.id.WORN_GOLD, MatCap.size.XL);\r\n\r\n  return (\r\n    <mesh geometry={nodes.Suzanne.geometry}>\r\n      <meshMatcapMaterial matcap={matcap} />\r\n    </mesh>\r\n  );\r\n};\r\n\r\nexport default SuzanneMatcapTexture;\r\n","import { useGLTF, useNormalTexture } from \"@react-three/drei\";\r\n\r\nimport suzanneGlb from \"./suzanne.glb\";\r\n\r\nconst SuzanneNormalTexture = () => {\r\n  const { nodes } = useGLTF(suzanneGlb, true);\r\n  const [normalMap] = useNormalTexture(\r\n    8, // Index or file name, see: https://github.com/emmelleppi/normal-maps/\r\n    //0 index of the normal texture - https://github.com/emmelleppi/normal-maps/blob/master/normals.json\r\n    {\r\n      anisotropy: 8,\r\n      offset: [0, 0],\r\n      repeat: [10, 10],\r\n    }\r\n  );\r\n\r\n  return (\r\n    <mesh geometry={nodes.Suzanne.geometry}>\r\n      <meshStandardMaterial normalMap={normalMap} />\r\n    </mesh>\r\n  );\r\n};\r\n\r\nexport default SuzanneNormalTexture;\r\n","import { useGLTF } from \"@react-three/drei\";\r\n\r\nimport suzanneGlb from \"./suzanne.glb\";\r\n\r\nconst SuzanneStandardMaterial = () => {\r\n  const { nodes } = useGLTF(suzanneGlb, true);\r\n\r\n  return (\r\n    <mesh geometry={nodes.Suzanne.geometry}>\r\n      <meshStandardMaterial />\r\n    </mesh>\r\n  );\r\n};\r\n\r\nexport default SuzanneStandardMaterial;\r\n","import { useGLTF } from \"@react-three/drei\";\r\n\r\nimport suzanneGlb from \"./suzanne.glb\";\r\n\r\nconst SuzanneToonMaterial = () => {\r\n  const { nodes } = useGLTF(suzanneGlb, true);\r\n\r\n  return (\r\n    <mesh geometry={nodes.Suzanne.geometry}>\r\n      <meshToonMaterial />\r\n    </mesh>\r\n  );\r\n};\r\n\r\nexport default SuzanneToonMaterial;\r\n","import { DoubleSide } from \"three\";\r\n\r\nconst SvgLoaderShape = ({ color, index, shape }) => {\r\n  // console.log(\"Shape\", color, index);\r\n  return (\r\n    <mesh position={[0, 0, -0.05 * index]}>\r\n      <shapeGeometry args={[shape]} />\r\n      <meshBasicMaterial color={color} side={DoubleSide} />\r\n    </mesh>\r\n  );\r\n};\r\n\r\nexport default SvgLoaderShape;\r\n","import { MathUtils } from \"three\";\r\nimport Shape from \"./Shape\";\r\n\r\nconst SvgLoaderGroup = ({ paths, position, scale }) => {\r\n  // console.log(\"Group\", paths, scale);\r\n  return (\r\n    <group\r\n      position={position}\r\n      rotation={[180, 0, 0].map((degrees) => MathUtils.degToRad(degrees))}\r\n      scale={scale}\r\n    >\r\n      {paths.map((path, index) => {\r\n        // console.log(\"Path\", index, path, path.color, path.toShapes());\r\n        const shapes = path.toShapes();\r\n        const pathIndex = index;\r\n        return shapes.map((shape, index) => {\r\n          return (\r\n            <Shape\r\n              color={path.color}\r\n              index={index + pathIndex}\r\n              key={index}\r\n              shape={shape}\r\n            />\r\n          );\r\n        });\r\n      })}\r\n    </group>\r\n  );\r\n};\r\n\r\nexport default SvgLoaderGroup;\r\n","import { useEffect, useState } from \"react\";\r\nimport { SVGLoader } from \"three-stdlib\";\r\nimport Group from \"./Group\";\r\n\r\nconst SvgLoader = (props) => {\r\n  const [paths, setPaths] = useState([]);\r\n  const position = props.position;\r\n  const scale = [props.scale, props.scale, props.scale];\r\n\r\n  useEffect(() => {\r\n    const svgResource = new Promise((resolve) =>\r\n      new SVGLoader().load(props.source, (data) => resolve(data.paths))\r\n    );\r\n    svgResource.then(setPaths);\r\n  }, [props]);\r\n\r\n  return <Group paths={paths} position={position} scale={scale} />;\r\n};\r\n\r\nexport default SvgLoader;\r\n","export default __webpack_public_path__ + \"static/media/TexturedCube.2b78eebc.glb\";","import { useGLTF } from \"@react-three/drei\";\r\n\r\nimport cubeGlb from \"./TexturedCube.glb\";\r\n\r\nconst Texture = () => {\r\n  const { nodes, materials } = useGLTF(cubeGlb, true);\r\n  return (\r\n    <>\r\n      <group position={[-1.5, 0, 0]}>\r\n        <mesh\r\n          geometry={nodes.Cube_1.geometry}\r\n          material={materials[\"MaterialTexture\"]}\r\n        />\r\n        <mesh geometry={nodes.Cube_2.geometry} material={materials[\"Blue\"]} />\r\n      </group>\r\n      {nodes.Cube.children.map((child, index) => {\r\n        return (\r\n          <mesh\r\n            key={index}\r\n            geometry={child.geometry}\r\n            material={child.material}\r\n            position={[1.5, 0, 0]}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Texture;\r\n","export default __webpack_public_path__ + \"static/media/BakedNormals.03580610.glb\";","import { MathUtils } from \"three\";\r\nimport { useGLTF } from \"@react-three/drei\";\r\n\r\nimport cubeGlb from \"./BakedNormals.glb\";\r\n\r\nconst TextureBakedNormals = () => {\r\n  const { nodes, materials } = useGLTF(cubeGlb, true);\r\n  return (\r\n    <mesh\r\n      geometry={nodes.Plane.geometry}\r\n      material={materials[\"Material\"]}\r\n      rotation={[90, 0, 0].map((degree) => MathUtils.degToRad(degree))}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TextureBakedNormals;\r\n","const Tripod = (props) => {\r\n  const length = 1;\r\n  const radius = (length / 100) * 2;\r\n  const segments = 32;\r\n  const thickness = length / 100;\r\n\r\n  return (\r\n    <group {...props}>\r\n      <mesh>\r\n        <boxGeometry args={[1, 1, 1].map((value) => value * 1.5 * thickness)} />\r\n        <meshMatcapMaterial color={0xffffff} />\r\n      </mesh>\r\n\r\n      {Array(3)\r\n        .fill()\r\n        .map((value, index) => {\r\n          return (\r\n            <group\r\n              key={index}\r\n              position={[0, 0, 0].map((v, i) =>\r\n                index === i ? length / 2 + thickness * 2 : v\r\n              )}\r\n            >\r\n              <mesh>\r\n                <boxGeometry\r\n                  args={[1, 1, 1].map(\r\n                    (v, i) => v * (index === i ? length : thickness)\r\n                  )}\r\n                />\r\n                <meshMatcapMaterial color={0xff0000 >> (8 * index)} />\r\n              </mesh>\r\n              <mesh\r\n                position={[0, 0, 0].map((v, i) =>\r\n                  index === i ? length / 2 + thickness * 3 : v\r\n                )}\r\n              >\r\n                <sphereGeometry args={[radius, segments, segments]} />\r\n                <meshMatcapMaterial color={0xffffff} />\r\n              </mesh>\r\n            </group>\r\n          );\r\n        })}\r\n    </group>\r\n  );\r\n};\r\n\r\nexport default Tripod;\r\n","import { useEffect, useRef } from \"react\";\r\nimport { DoubleSide, MathUtils } from \"three\";\r\nimport { useControls } from \"leva\";\r\nimport { useFrame } from \"@react-three/fiber\";\r\nimport { Box, Plane, PointerLockControls } from \"@react-three/drei\";\r\nimport { KeyboardControls } from \"App/utils\";\r\n\r\nconst BOX_SIZE = 1;\r\nconst MOVE_SPEED = {\r\n  FORWARD: 0.1,\r\n  RIGHT: 0.05,\r\n  UP: 0.5,\r\n};\r\n\r\nconst World = (props) => {\r\n  const { enablePointerLockControls } = useControls(\"Controls\", {\r\n    enablePointerLockControls: { label: \"PointerLock\", value: true },\r\n  });\r\n\r\n  const pointerRef = useRef();\r\n\r\n  useEffect(() => {\r\n    KeyboardControls.addEventListeners();\r\n\r\n    if (pointerRef.current) {\r\n      pointerRef.current.getObject().position.y = 1.75; // m\r\n    }\r\n\r\n    return KeyboardControls.removeEventListeners;\r\n  }, [enablePointerLockControls]);\r\n\r\n  useFrame(() => {\r\n    if (pointerRef.current) {\r\n      pointerRef.current.moveForward(\r\n        MOVE_SPEED.FORWARD * KeyboardControls.forwardDirection\r\n      );\r\n      pointerRef.current.moveRight(\r\n        MOVE_SPEED.RIGHT * KeyboardControls.rightDirection\r\n      );\r\n      pointerRef.current.getObject().position.y +=\r\n        MOVE_SPEED.UP * KeyboardControls.upDirection; // m\r\n    }\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {enablePointerLockControls && <PointerLockControls ref={pointerRef} />}\r\n      <Plane\r\n        args={[10, 10]}\r\n        rotation={[MathUtils.degToRad(-90), 0, 0]}\r\n        {...props}\r\n      >\r\n        <meshBasicMaterial color={0x666666} side={DoubleSide} />\r\n      </Plane>\r\n      <Box\r\n        args={[BOX_SIZE, BOX_SIZE, BOX_SIZE]}\r\n        position={[0, BOX_SIZE / 2, 0]}\r\n      >\r\n        <meshBasicMaterial color={0xff0000} opacity={0.75} transparent={true} />\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default World;\r\n","export default __webpack_public_path__ + \"static/media/bensound-badass.8ef4f40c.mp3\";","export default __webpack_public_path__ + \"static/media/bensound-evolution.4375aef0.mp3\";","import { useEffect, useRef } from \"react\";\r\nimport { AudioListener, AudioLoader, DoubleSide, MathUtils } from \"three\";\r\nimport { PositionalAudioHelper } from \"three-stdlib\";\r\nimport { useControls } from \"leva\";\r\nimport { extend, useFrame, useLoader } from \"@react-three/fiber\";\r\nimport {\r\n  Plane,\r\n  PointerLockControls,\r\n  PositionalAudio,\r\n  Text,\r\n  useHelper,\r\n} from \"@react-three/drei\";\r\nimport { KeyboardControls } from \"App/utils\";\r\n\r\nimport badassAudioFile from \"./audio/bensound-badass.mp3\";\r\nimport evolutionAudioFile from \"./audio/bensound-evolution.mp3\";\r\n\r\nextend({ PositionalAudioHelper });\r\n\r\nconst MOVE_SPEED = {\r\n  FORWARD: 0.1,\r\n  RIGHT: 0.05,\r\n  UP: 0.5,\r\n};\r\n\r\nconst WorldSound = (props) => {\r\n  const { enablePointerLockControls } = useControls(\"Controls\", {\r\n    enablePointerLockControls: { label: \"PointerLock\", value: true },\r\n  });\r\n\r\n  const pointerRef = useRef();\r\n  const audioRef = useRef();\r\n  const audioListener = new AudioListener();\r\n  const audioBuffer = useLoader(AudioLoader, evolutionAudioFile);\r\n\r\n  const positionalAudioRef = useRef();\r\n  useHelper(positionalAudioRef, PositionalAudioHelper);\r\n\r\n  useEffect(() => {\r\n    KeyboardControls.addEventListeners();\r\n\r\n    if (pointerRef.current) {\r\n      pointerRef.current.getObject().position.y = 1.75; // m\r\n    }\r\n\r\n    return KeyboardControls.removeEventListeners;\r\n  }, [enablePointerLockControls]);\r\n\r\n  useEffect(() => {\r\n    if (audioRef.current) {\r\n      audioRef.current.setBuffer(audioBuffer);\r\n      audioRef.current.setLoop(true);\r\n      audioRef.current.setVolume(0.01);\r\n      audioRef.current.play();\r\n    }\r\n  }, [audioBuffer]);\r\n\r\n  useFrame(() => {\r\n    if (pointerRef.current) {\r\n      pointerRef.current.moveForward(\r\n        MOVE_SPEED.FORWARD * KeyboardControls.forwardDirection\r\n      );\r\n      pointerRef.current.moveRight(\r\n        MOVE_SPEED.RIGHT * KeyboardControls.rightDirection\r\n      );\r\n      pointerRef.current.getObject().position.y +=\r\n        MOVE_SPEED.UP * KeyboardControls.upDirection; // m\r\n    }\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {enablePointerLockControls && <PointerLockControls ref={pointerRef} />}\r\n      <Plane\r\n        args={[10, 10]}\r\n        rotation={[MathUtils.degToRad(-90), 0, 0]}\r\n        {...props}\r\n      >\r\n        <meshBasicMaterial color={0x666666} side={DoubleSide} />\r\n      </Plane>\r\n      <audio args={[audioListener]} ref={audioRef} />\r\n      <mesh position={[0, 0, 0]}>\r\n        <Text position={[0, 1, 0]}>Music: https://www.bensound.com</Text>\r\n        <PositionalAudio\r\n          distance={0.1}\r\n          loop={true}\r\n          ref={positionalAudioRef}\r\n          url={badassAudioFile}\r\n        />\r\n      </mesh>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WorldSound;\r\n","import { useLocation } from \"wouter\";\r\nimport { Text } from \"@react-three/drei\";\r\n\r\nconst Wouter = () => {\r\n  const [, setLocation] = useLocation();\r\n\r\n  return (\r\n    <Text\r\n      color=\"hsl(120, 100%, 70%)\"\r\n      fontSize={1}\r\n      onClick={() => {\r\n        const route = \"/router\";\r\n        console.log(\"Route: \", route);\r\n        setLocation(route);\r\n      }}\r\n      text=\"Wouter\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default Wouter;\r\n","import { useLocation } from \"wouter\";\r\nimport { Text } from \"@react-three/drei\";\r\n\r\nconst WouterPathRouter = () => {\r\n  const [, setLocation] = useLocation();\r\n\r\n  return (\r\n    <Text\r\n      color=\"hsl(210, 100%, 70%)\"\r\n      fontSize={1}\r\n      onClick={() => {\r\n        const route = \"/wouter\";\r\n        console.log(\"Route: \", route);\r\n        setLocation(route);\r\n      }}\r\n      position={[0, 2, 0]}\r\n      text=\"Path Router\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default WouterPathRouter;\r\n","import { useLocation } from \"wouter\";\r\nimport { Text } from \"@react-three/drei\";\r\n\r\nconst WouterPathWouter = () => {\r\n  const [, setLocation] = useLocation();\r\n\r\n  return (\r\n    <Text\r\n      color=\"hsl(30, 100%, 70%)\"\r\n      fontSize={1}\r\n      onClick={() => {\r\n        const route = \"/router\";\r\n        console.log(\"Route: \", route);\r\n        setLocation(route);\r\n      }}\r\n      position={[0, -2, 0]}\r\n      text=\"Path Wouter\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default WouterPathWouter;\r\n","import { Suspense, useCallback, useEffect, useState } from \"react\";\r\nimport { Route, Router } from \"wouter\";\r\nimport { MathUtils } from \"three\";\r\nimport { OrbitControls, Stats } from \"@react-three/drei\";\r\n// import { Bloom, EffectComposer } from \"@react-three/postprocessing\";\r\nimport {\r\n  Animation,\r\n  Button,\r\n  ButtonSpring,\r\n  Clock,\r\n  ClockDigital,\r\n  Cube,\r\n  Face,\r\n  Gauge,\r\n  Image,\r\n  ImageSvg,\r\n  Lighting,\r\n  LightingGui,\r\n  LightingStudio,\r\n  LightingStudioGui,\r\n  LightingThreePoint,\r\n  LightingThreePointGui,\r\n  Logo,\r\n  LogoDouble,\r\n  LoremIpsum,\r\n  Normals,\r\n  Socket,\r\n  Spring,\r\n  Suzanne,\r\n  SuzanneMatcapTexture,\r\n  SuzanneNormalTexture,\r\n  SuzanneStandardMaterial,\r\n  SuzanneToonMaterial,\r\n  Texture,\r\n  TextureBakedNormals,\r\n  Tripod,\r\n  World,\r\n  WorldSound,\r\n  Wouter,\r\n  WouterPathRouter,\r\n  WouterPathWouter,\r\n} from \"./components\";\r\nimport { useControls } from \"leva\";\r\n\r\nconst currentLocation = () => window.location.hash.replace(\"#\", \"\") || \"/\";\r\nconst useHashLocation = () => {\r\n  const [location, setLocation] = useState(currentLocation());\r\n\r\n  useEffect(() => {\r\n    const handler = () => setLocation(currentLocation());\r\n    window.addEventListener(\"hashchange\", handler);\r\n    return () => window.removeEventListener(\"hashchange\", handler);\r\n  }, []);\r\n\r\n  const navigate = useCallback((to) => (window.location.hash = to), []);\r\n  return [location, navigate];\r\n};\r\n\r\nconst Content = () => {\r\n  const components = [\r\n    \"None\",\r\n    \"Animation\",\r\n    \"Button\",\r\n    \"Button (React Spring)\",\r\n    \"Clock (analogue)\",\r\n    \"Clock (digital)\",\r\n    \"Cube (positioned)\",\r\n    \"Cube\",\r\n    \"Face\",\r\n    \"Gauge\",\r\n    \"Image\",\r\n    \"Image (SVG)\",\r\n    \"Logo\",\r\n    \"Logo (double)\",\r\n    \"Lorem Ipsum\",\r\n    \"Normals\",\r\n    \"Socket (Socket.IO 4.0)\",\r\n    \"Spring\",\r\n    \"Suzanne (default)\",\r\n    \"Suzanne (MatCap Texture)\",\r\n    \"Suzanne (Normal Texture)\",\r\n    \"Suzanne (Standard Material)\",\r\n    \"Suzanne (Toon Material)\",\r\n    \"Texture\",\r\n    \"Texture (Baked Normals)\",\r\n    \"Tripod\",\r\n    \"World\",\r\n    \"World (Sound)\",\r\n    \"Wouter (router)\",\r\n  ];\r\n\r\n  const lightings = [\r\n    \"None\",\r\n    \"Demo\",\r\n    \"Demo + GUI\",\r\n    \"Studio Lighting\",\r\n    \"Studio Lighting + GUI\",\r\n    \"Three Point Lighting\",\r\n    \"Three Point Lighting + GUI\",\r\n  ];\r\n\r\n  const { enableOrbitControls } = useControls(\"Controls\", {\r\n    enableOrbitControls: { label: \"Orbit Controls\", value: true },\r\n  });\r\n  const { showEffect, showStats, useComponent, useLighting } = useControls(\r\n    \"General\",\r\n    {\r\n      showEffect: { label: \"Effect\", value: true },\r\n      showStats: { label: \"Stats\", value: false },\r\n      useComponent: {\r\n        label: \"Component\",\r\n        options: components,\r\n        value: \"Suzanne (default)\",\r\n      },\r\n      useLighting: {\r\n        label: \"Lighting\",\r\n        options: lightings,\r\n        value: \"Studio Lighting\",\r\n      },\r\n    }\r\n  );\r\n  const { showAxesHelper, showGridHelper } = useControls(\"Helpers\", {\r\n    showAxesHelper: { label: \"Axes Helper\", value: false },\r\n    showGridHelper: { label: \"Grid Helper\", value: false },\r\n  });\r\n\r\n  function showLighting(name) {\r\n    return useLighting === name;\r\n  }\r\n\r\n  function showComponent(name) {\r\n    return useComponent === name;\r\n  }\r\n\r\n  return (\r\n    <Router base={process.env.PUBLIC_URL} hook={useHashLocation}>\r\n      <>\r\n        {enableOrbitControls && (\r\n          <OrbitControls\r\n            enablePan={true}\r\n            enableRotate={true}\r\n            enableZoom={true}\r\n          />\r\n        )}\r\n        {showStats && <Stats />}\r\n        {showAxesHelper && <axesHelper />}\r\n        {showGridHelper && <gridHelper args={[10, 10, 0xffffff, 0x333333]} />}\r\n      </>\r\n      {showEffect && (\r\n        <></>\r\n        // <EffectComposer>\r\n        //   <Bloom height={500} luminanceThreshold={0} luminanceSmoothing={0.9} />\r\n        // </EffectComposer>\r\n      )}\r\n      {showLighting(\"Demo\") && <Lighting />}\r\n      {showLighting(\"Demo + GUI\") && <LightingGui />}\r\n      {showLighting(\"Studio Lighting\") && <LightingStudio />}\r\n      {showLighting(\"Studio Lighting + GUI\") && <LightingStudioGui />}\r\n      {showLighting(\"Three Point Lighting\") && <LightingThreePoint />}\r\n      {showLighting(\"Three Point Lighting + GUI\") && <LightingThreePointGui />}\r\n      {showComponent(\"Button\") && <Button />}\r\n      {showComponent(\"Button (React Spring)\") && <ButtonSpring />}\r\n      {showComponent(\"Clock (analogue)\") && <Clock />}\r\n      {showComponent(\"Clock (digital)\") && <ClockDigital />}\r\n      {showComponent(\"Cube\") && <Cube />}\r\n      {showComponent(\"Cube (positioned)\") && (\r\n        <Cube\r\n          position={[1, 1, 1]}\r\n          rotation={[45, 45, 45].map((degrees) => MathUtils.degToRad(degrees))}\r\n        />\r\n      )}\r\n      {showComponent(\"Face\") && <Face />}\r\n      {showComponent(\"Gauge\") && <Gauge />}\r\n\r\n      {showComponent(\"Socket (Socket.IO 4.0)\") && <Socket />}\r\n      {true && (\r\n        <Suspense fallback={null}>\r\n          {showComponent(\"Animation\") && <Animation />}\r\n          {showComponent(\"Logo\") && <Logo />}\r\n          {showComponent(\"Logo (double)\") && <LogoDouble />}\r\n          {showComponent(\"Lorem Ipsum\") && <LoremIpsum />}\r\n          {showComponent(\"Normals\") && <Normals />}\r\n          {showComponent(\"Image\") && <Image />}\r\n          {showComponent(\"Image (SVG)\") && <ImageSvg />}\r\n          {showComponent(\"Spring\") && <Spring />}\r\n          {showComponent(\"Suzanne (default)\") && <Suzanne />}\r\n          {showComponent(\"Suzanne (MatCap Texture)\") && (\r\n            <SuzanneMatcapTexture />\r\n          )}\r\n          {showComponent(\"Suzanne (Normal Texture)\") && (\r\n            <SuzanneNormalTexture />\r\n          )}\r\n          {showComponent(\"Suzanne (Standard Material)\") && (\r\n            <SuzanneStandardMaterial />\r\n          )}\r\n          {showComponent(\"Suzanne (Toon Material)\") && <SuzanneToonMaterial />}\r\n          {showComponent(\"Texture\") && <Texture />}\r\n          {showComponent(\"Texture (Baked Normals)\") && <TextureBakedNormals />}\r\n          {showComponent(\"World (Sound)\") && <WorldSound />}\r\n        </Suspense>\r\n      )}\r\n      {showComponent(\"Tripod\") && <Tripod />}\r\n      {showComponent(\"World\") && <World />}\r\n      {showComponent(\"Wouter (router)\") && <Wouter />}\r\n      <Route component={WouterPathRouter} path=\"/router\" />\r\n      <Route component={WouterPathWouter} path=\"/wouter\" />\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default Content;\r\n","import { Canvas } from \"@react-three/fiber\";\r\nimport Content from \"./Content\";\r\n\r\nimport \"./index.css\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <Canvas linear={false} shadows={true}>\r\n      <Content />\r\n    </Canvas>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { StrictMode } from \"react\";\nimport { render } from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nrender(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}