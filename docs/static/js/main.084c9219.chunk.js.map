{"version":3,"sources":["App/components/ReactRouter/ROUTES.js","App/components/Animation/assets/animation.glb","App/components/Animation/index.jsx","App/components/Button/Default.jsx","App/components/Button/Spring.jsx","App/components/Button/index.jsx","App/utils/KeyboardControls/index.js","App/utils/MathCircle/index.js","App/utils/ZeroFill/index.js","App/components/Clock/Analogue.jsx","App/components/Clock/Digital.jsx","App/components/Clock/index.jsx","App/components/Material/PhysicalFrostedGlass.jsx","App/components/Composition/Painting.jsx","App/libs/LevaSettings/Material/index.js","App/libs/LevaSettings/Material/Basic.js","App/components/Material/Basic.jsx","App/libs/LevaSettings/Material/Lambert.js","App/components/Material/Lambert.jsx","App/libs/FontFamily/index.js","App/libs/Matcap/index.js","App/libs/LevaSettings/Material/Phong.js","App/components/Material/Matcap.jsx","App/components/Material/Normal.jsx","App/components/Material/Phong.jsx","App/libs/LevaSettings/Material/Standard.js","App/libs/LevaSettings/Material/Physical.js","App/components/Material/Physical.jsx","App/components/Material/Standard.jsx","App/components/Material/StandardNormalMap.jsx","App/components/Material/Toon.jsx","App/components/Material/index.jsx","App/components/Suzanne/assets/suzanne.glb","App/components/Suzanne/CustomMaterial.jsx","App/components/Composition/index.jsx","App/components/Cube/index.jsx","App/libs/LevaSettings/Effects/index.js","App/libs/LevaSettings/Effects/Bloom.js","App/components/Effects/Bloom.jsx","App/libs/LevaSettings/Effects/BrightnessContrast.js","App/components/Effects/BrightnessContrast.jsx","App/libs/LevaSettings/Effects/ChromaticAberration.js","App/components/Effects/ChromaticAberration.jsx","App/components/Effects/ColorAverage.jsx","App/libs/LevaSettings/Effects/ColorDepth.js","App/components/Effects/ColorDepth.jsx","App/libs/LevaSettings/Effects/DepthOfField.js","App/components/Effects/DepthOfField.jsx","App/libs/LevaSettings/Effects/DotScreen.js","App/components/Effects/DotScreen.jsx","App/libs/LevaSettings/Effects/Glitch.js","App/components/Effects/Glitch.jsx","App/libs/LevaSettings/Effects/Grid.js","App/components/Effects/Grid.jsx","App/libs/LevaSettings/Effects/HueSaturation.js","App/components/Effects/HueSaturation.jsx","App/libs/LevaSettings/Effects/Noise.js","App/components/Effects/Noise.jsx","App/libs/LevaSettings/Effects/Pixelation.js","App/components/Effects/Pixelation.jsx","App/libs/LevaSettings/Effects/SMAA.js","App/components/Effects/SMAA.jsx","App/libs/LevaSettings/Effects/Scanline.js","App/components/Effects/Scanline.jsx","App/components/Effects/Sepia.jsx","App/libs/LevaSettings/Effects/ToneMapping.js","App/components/Effects/ToneMapping.jsx","App/libs/LevaSettings/Effects/Vignette.js","App/components/Effects/Vignette.jsx","App/components/Effects/index.jsx","App/components/Face/index.jsx","App/components/Gauge/index.jsx","App/libs/LevaSettings/Geometry/Circle.js","App/components/Geometry2D/Circle.jsx","App/libs/LevaSettings/Geometry/Plane.js","App/components/Geometry2D/Plane.jsx","App/libs/LevaSettings/Geometry/Ring.js","App/components/Geometry2D/Ring.jsx","App/components/Geometry2D/index.jsx","App/libs/LevaSettings/Geometry/Box.js","App/components/Geometry3D/Box.jsx","App/libs/LevaSettings/Geometry/Cone.js","App/components/Geometry3D/Cone.jsx","App/libs/LevaSettings/Geometry/Cylinder.js","App/components/Geometry3D/Cylinder.jsx","App/libs/LevaSettings/Geometry/Tetrahedron.js","App/components/Geometry3D/Tetrahedron.jsx","App/components/Geometry3D/Dodecahedron.jsx","App/components/Geometry3D/Icosahedron.jsx","App/components/Geometry3D/Octahedron.jsx","App/libs/LevaSettings/Geometry/Sphere.js","App/components/Geometry3D/Sphere.jsx","App/libs/LevaSettings/Geometry/Torus.js","App/components/Geometry3D/Torus.jsx","App/libs/LevaSettings/Geometry/TorusKnot.js","App/components/Geometry3D/TorusKnot.jsx","App/components/Geometry3D/index.jsx","App/components/Helpers/index.jsx","App/components/Image/assets/UV_Grid_Sm.jpg","App/components/Image/Default.jsx","App/components/Image/assets/arteveldehogeschool_logo.svg","App/components/Image/assets/SVG_logo.svg","App/components/Image/Svg.jsx","App/components/Image/index.jsx","App/components/InputControls/index.jsx","App/components/Lighting/Demo.jsx","App/components/Lighting/Studio.jsx","App/components/Lighting/ThreePoint.jsx","App/components/Lighting/index.jsx","App/components/Logo/assets/gltf-logo.glb","App/components/Logo/Default.jsx","App/components/Logo/Double.jsx","App/components/Logo/index.jsx","App/components/LoremIpsum/Default.jsx","App/components/LoremIpsum/Fonts.jsx","App/components/LoremIpsum/index.jsx","App/components/Normals/assets/normals.glb","App/components/Normals/index.jsx","App/components/Particles/Default.jsx","App/components/Particles/assets/Arteveldehogeschool_favicon.png","App/components/Particles/Sprites.jsx","App/components/Particles/index.jsx","App/components/Planes/Text.jsx","App/components/Planes/Plane.jsx","App/components/Suzanne/Default.jsx","App/components/Planes/index.js","App/components/ReactRouter/index.jsx","App/components/ReactRouter/PathAlpha.jsx","App/components/ReactRouter/PathOmega.jsx","App/components/Socket/index.jsx","App/components/Spring/index.jsx","App/components/Suzanne/Rotating.jsx","App/components/Suzanne/index.jsx","App/components/SvgLoader/Shape.jsx","App/components/SvgLoader/Group.jsx","App/components/SvgLoader/index.jsx","App/components/Texture/assets/TexturedCube.glb","App/components/Texture/Default.jsx","App/components/Texture/assets/BakedNormals.glb","App/components/Texture/BakedNormals.jsx","App/components/Texture/index.jsx","App/components/Tripod/index.jsx","App/components/World/Default.jsx","App/components/World/audio/bensound-evolution.mp3","App/components/World/Sound.jsx","App/components/World/index.jsx","App/Content.jsx","App/index.jsx","reportWebVitals.js","index.jsx"],"names":["ROUTES","Object","freeze","All","Alpha","Omega","Root","Animation","useGLTF","animationGlb","animations","scene","animationRef","useRef","mixer","useMemo","AnimationMixer","useEffect","current","clipAction","play","useFrame","state","delta","update","object","ref","ButtonDefault","useState","color","setColor","hover","setHover","onClick","onDoubleClick","onPointerOut","onPointerOver","opacity","transparent","args","Text","fontSize","position","ButtonSpring","props","colorCurrent","setColorCurrent","toggle","setToggle","useSpring","rotation","MathUtils","degToRad","scale","group","mesh","meshBasicMaterial","BUTTON","Default","Spring","Button","useButton","useControls","label","options","value","enableButton","name","element","AZERTY","LEFT","UP","DIRECTION","QWERTY","KeyboardControls","this","event","console","log","code","info","window","addEventListener","keyDownHandler","keyUpHandler","removeEventListener","MathCircle","radius","degrees","angle","x","Math","cos","y","sin","ZeroFill","number","zeros","postfix","zeroFill","floor","toString","string","length","isHour","tick","CLOCK","HAND","HH","LENGTH","WIDTH","MM","SS","COLOR","THICKNESS","MARK","OFFSET","ClockAnalogue","clockRef","handHoursRef","handMinutesRef","handSecondsRef","angleStart","d","Date","z","getHours","getMinutes","getSeconds","map","Array","fill","index","getCoordinates","receiveShadow","side","DoubleSide","castShadow","radians","ClockDigital","text","toLocaleTimeString","Analogue","Digital","Clock","useClock","enableClock","MaterialPhysicalFrostedGlass","folder","roughness","max","min","step","thickness","transmission","CompositionPainting","texture","useTexture","aspectRatio","image","width","height","levaDithering","hint","levaOpacity","levaSide","BackSide","FrontSide","levaTransparent","levaColor","levaReflectivity","AddOperation","MixOperation","MultiplyOperation","levaRefractionRatio","levaWireframe","MaterialBasic","Materials","Material","dithering","reflectivity","refractionRatio","wireframe","levaEmissive","levaEmissiveIntensity","MaterialLambert","emissive","emissiveIntensity","FontFamily","ARCHITECTS_DAUGHTER","url","PRESS_START_2P","REDACTED_SCRIPT","ROBOTO","ROBOTO_SLAB","TANGERINE","Matcap","id","GREEN_CRYSTAL","SILVERY","TITANIUM","WORN_GOLD","size","XS","SM","MD","LG","XL","levaFlatShading","levaShininess","ObjectSpaceNormalMap","TangentSpaceNormalMap","levaSpecular","MaterialMatcap","flatShading","useMatcapTexture","matcap","MaterialNormal","MaterialPhong","shininess","specular","levaMetalness","levaRoughness","levaClearcoat","levaClearcoatRoughness","levaIor","levaSheen","levaSheenColor","levaSheenRoughness","levaThickness","levaTransmission","MaterialPhysical","metalness","clearcoat","clearcoatRoughness","ior","sheen","sheenColor","sheenRoughness","MaterialStandard","MaterialStandardNormalMap","Textures","normalAnisotropy","normalOffset","normalRepeat","normalScale","normalTextureId","useNormalTexture","anisotropy","offset","repeat","normalMap","Vector2","MaterialToon","MATERIAL","Basic","Lambert","Normal","Phong","Physical","PhysicalFrostedGlass","Standard","StandardNormalMap","Toon","MatCap","enableMaterial","materialName","SuzanneMaterial","children","nodes","suzanneGlb","geometry","Suzanne","Composition","Painting","Cube","colors","random","meshMatcapMaterial","levaBlendFunctionNormal","BlendFunction","NORMAL","levaBlendFunctionOverlay","MULTIPLY","OVERLAY","levaBlendFunctionScreen","SCREEN","levaIntensity","levaLuminanceSmoothing","levaLuminanceThreshold","EffectsBloom","blendFunction","levaBlendFunction","intensity","luminanceSmoothing","luminanceThreshold","Resizer","AUTO_SIZE","kernelSize","KernelSize","LARGE","levaBrightness","levaContrast","EffectsBrightnessContrast","brightness","contrast","levaOffset","EffectsChromaticAberration","EffectsColorAverage","levaBits","EffectsColorDepth","bits","levaBokehScale","levaFocalLength","levaFocusDistance","EffectsDepthOfField","bokehScale","focalLength","focusDistance","levaAngle","levaScale","EffectsDotScreen","levaActive","levaColumns","levaDelay","levaDtSize","levaDuration","levaMode","GlitchMode","SPORADIC","levaRatio","levaStrength","EffectsGlitch","active","columns","delay","dtSize","duration","mode","ratio","strength","levaLineWidth","EffectsGrid","lineWidth","levaHue","levaSaturation","EffectsHueSaturation","hue","saturation","levaPremultiply","EffectsNoise","premultiply","levaGranularity","EffectsPixelation","granularity","levaEdgeDetectionMode","EdgeDetectionMode","levaPreset","SMAAPreset","HIGH","EffectsSMAA","edgeDetectionMode","preset","fallback","multisampling","levaDensity","EffectsScanline","density","EffectsSepia","levaAdaptationRate","levaAverageLuminance","levaMiddleGrey","levaResolution","EffectsToneMapping","adaptationRate","averageLuminance","middleGrey","resolution","levaEskil","levaDarkness","EffectsVignette","darkness","eskil","EFFECT","None","Bloom","BrightnessContrast","ChromaticAberration","ColorAverage","ColorDepth","DepthOfField","DotScreen","Glitch","Grid","HueSaturation","Noise","Pixelation","SMAA","Scanline","Sepia","ToneMapping","Vignette","Effects","enableEffect","Face","NEEDLE_STEP","Gauge","TICK_MARKS","angleStep","valueRange","valueStep","needleRef","needleAngle","needleValue","needleStep","forEach","tickMark","material","setColorName","levaRadius","levaSegments","levaΘLength","levaΘStart","Geometry2DCircle","Geometry","Arguments","segments","Θ","θStart","θLength","levaHeight","levaHeightSegments","levaWidth","levaWidthSegments","Geometry2DPlane","widthSegments","heightSegments","levaInnerRadius","levaOuterRadius","levaΘSegments","levaΦSegments","hints","Geometry2DRing","innerRadius","outerRadius","θSegments","Φ","φSegments","GEOMETRY_2D","Circle","Plane","Ring","Geometry2D","enableGeometry","geometry2DName","levaDepth","levaDepthSegments","Geometry3DBox","depth","depthSegments","depthSegment","levaOpenEnded","levaRadialSegments","Geometry3DCone","radialSegments","openEnded","levaRadiusBottom","levaRadiusTop","Geometry3DCylinder","radiusBottom","radiusTop","levaDetail","Geometry3DTetrahedron","detail","Geometry3DDodecahedron","Geometry3DIcosahedron","Geometry3DOctahedron","levaΦLength","levaΦStart","Geometry3DSphere","sphereWidthSegments","φStart","φLength","levaArc","levaTube","levaTubularSegments","Geometry3DTorus","Torus","tube","tubularSegments","arc","levaP","levaQ","Geometry3DTorusKnot","p","q","GEOMETRY_3D","Box","Cone","Cylinder","Dodecahedron","Icosahedron","Octahedron","Sphere","Tetrahedron","TorusKnot","Geometry3D","geometry3DName","Helpers","enableAxesHelper","enableGizmoHelper","enableGridHelper","GizmoHelper","alignment","margin","GizmoViewport","axisColors","labelColor","ImageDefault","uvGrid","center","ImageSvg","source","logoNl","svgLogo","IMAGE","Svg","Image","useImage","enableImage","CONTROLS","Orbit","Trackball","InputControls","useInputControls","enableStats","enableInputControls","OrbitControls","enablePan","enableRotate","enableZoom","TrackballControls","LightingDemo","helpers","helperSize","ambientLight","directionalLight","hemisphereLight","groundColor","pointLight","spotLight","Spotlight","penumbra","target","useThree","Object3D","add","nullRef","directionalLightRef","hemisphereLightRef","pointLightRef","spotLightRef","useHelper","DirectionalLightHelper","PointLightHelper","SpotLightHelper","HemisphereLightHelper","translateX","translateZ","LightingStudio","frontLight","leftLight","rightLight","frontLightRef","leftLightRef","rightLightRef","LightingThreePoint","backLight","fillLight","keyLight","backLightRef","fillLightRef","keyLightRef","LIGHTING","Demo","Studio","ThreePoint","Lighting","enableLighting","ligthingName","LogoDefault","clockwise","setClockwise","gltfLogo","gltfLogoGlb","logoRef","LogoDouble","logo1Ref","logo2Ref","clone","LOGO","Double","useLogo","enableLogo","LoremIpsumDefault","matcapGreenCrystal","matcapSilvery","matcapWornGold","font","outlineColor","outlineWidth","keys","LoremIpsumFonts","start","LOREM_IPSUM","Fonts","LoremIpsum","useLoremIpsum","enableLoremIpsum","Normals","normals","normalsGlb","normalsRef","ParticlesDefault","complexity","ParticlesSprites","sprite","particleImage","PARTICLES","Sprites","Particles","useParticles","enableParticles","PlanesPlane","anchorX","en","nl","SuzanneDefault","materials","suzanneRef","enableVertexNormalsHelper","normalColor","VertexNormalsHelper","PLANE","FRONTAL","SAGITTAL","TRANSVERSE","Planes","key","ReactRouter","navigate","useNavigate","hoverSubTitle","setHoverSubTitle","hoverTitle","setHoverTitle","route","onChange","WouterPathRouter","ReactRouterPathOmega","Socket","distanceRef","speedRef","socket","Manager","on","connected","message","distance","speed","flexDirection","flexWrap","justifyContent","config","easing","easings","from","to","SuzanneRotating","Rotation","rotate","SUZANNE","CustomMaterial","Rotating","useSuzanne","enableSuzanne","fillOpacity","degree","SvgLoaderShape","shape","SvgLoaderGroup","paths","path","shapes","toShapes","pathIndex","Shape","SvgLoader","setPaths","Promise","resolve","SVGLoader","load","data","then","Group","TextureDefault","cubeGlb","Cube_1","Cube_2","child","TextureBakedNormals","TEXTURE","BakedNormals","Texture","enableTexture","Tripod","v","i","MOVE_SPEED","WorldDefault","enablePointerLockControls","pointerRef","addEventListeners","getObject","removeEventListeners","moveForward","forwardDirection","moveRight","rightDirection","upDirection","PointerLockControls","BOX_SIZE","WorldSound","audioRef","audioListener","AudioListener","audioBuffer","useLoader","AudioLoader","evolutionAudioFile","setBuffer","setLoop","setVolume","WORLD","Sound","World","useWorld","enableWorld","COMPONENT","Cube_Positioned","Logo","Content","useComponent","enableComponent","Stats","App","flat","oneLineLabels","linear","shadows","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","render","document","getElementById"],"mappings":"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","file":"static/js/main.084c9219.chunk.js","sourcesContent":["export const ROUTES = Object.freeze({\n  All: \"*\",\n  Alpha: \"/alpha\",\n  Omega: \"/omega\",\n  Root: \"/\",\n});\n","export default __webpack_public_path__ + \"static/media/animation.07175b80.glb\";","import { useEffect, useMemo, useRef } from \"react\";\nimport { AnimationMixer } from \"three\";\nimport { useFrame } from \"@react-three/fiber\";\nimport { useGLTF } from \"@react-three/drei\";\n\nimport animationGlb from \"./assets/animation.glb\";\n\nconst Animation = () => {\n  const { animations, scene } = useGLTF(animationGlb, true);\n  const animationRef = useRef();\n  const mixer = useMemo(() => new AnimationMixer(), []);\n\n  useEffect(() => {\n    if (animationRef.current) {\n      mixer.clipAction(animations[0], animationRef.current).play();\n    }\n  }, [animations, mixer]);\n\n  useFrame((state, delta) => {\n    mixer.update(delta);\n  });\n\n  return <primitive object={scene} ref={animationRef} />;\n};\n\nexport default Animation;\n","import { useState } from \"react\";\nimport { Text } from \"@react-three/drei\";\n\nconst ButtonDefault = () => {\n  const [color, setColor] = useState(0x00ff00);\n  const [hover, setHover] = useState(false);\n\n  return (\n    <group\n      onClick={() => setColor(0xff0000)}\n      onDoubleClick={() => setColor(0x0000ff)}\n      onPointerOut={() => setHover(false)}\n      onPointerOver={() => setHover(true)}\n    >\n      <mesh>\n        <meshBasicMaterial\n          color={color}\n          opacity={hover ? 0.75 : 1}\n          transparent={true}\n        />\n        <planeGeometry args={[1, 0.5]} />\n      </mesh>\n      <Text fontSize={0.2} position={[0, 0, 0.01]}>\n        Click Me!\n      </Text>\n    </group>\n  );\n};\n\nexport default ButtonDefault;\n","import { useState } from \"react\";\nimport { MathUtils } from \"three\";\nimport { Text } from \"@react-three/drei\";\nimport { animated, useSpring } from \"@react-spring/three\";\n\nconst ButtonSpring = (props) => {\n  const [colorCurrent, setColorCurrent] = useState(0xff0000);\n  const [hover, setHover] = useState(false);\n  const [toggle, setToggle] = useState(false);\n  const { opacity, rotation, scale } = useSpring({\n    opacity: toggle ? 0.5 : 0.2,\n    rotation: toggle ? [MathUtils.degToRad(-45), 0, 0] : [0, 0, 0],\n    scale: hover ? [1.5, 1.25, 1] : [1, 1, 1],\n  });\n\n  return (\n    <animated.group\n      {...props}\n      onClick={() => setToggle(!toggle)}\n      onDoubleClick={() => setColorCurrent(colorCurrent >> 8)}\n      onPointerOut={() => setHover(false)}\n      onPointerOver={() => setHover(true)}\n      rotation={rotation}\n    >\n      <animated.mesh scale={scale}>\n        <planeGeometry args={[1, 0.5]} />\n        <animated.meshBasicMaterial\n          color={0xff0000}\n          opacity={opacity}\n          transparent={true}\n        />\n      </animated.mesh>\n      <Text color=\"white\" fontSize={0.2} position={[0, 0, 0.01]}>\n        Click Me!\n      </Text>\n    </animated.group>\n  );\n};\n\nexport default ButtonSpring;\n","import { useControls } from \"leva\";\n\nimport Default from \"./Default\";\nimport Spring from \"./Spring\";\n\nconst BUTTON = Object.freeze({\n  Default: \"Default\",\n  Spring: \"Spring\",\n});\n\nconst Button = () => {\n  const { useButton } = useControls(\"Components\", {\n    useButton: {\n      label: \"Button\",\n      options: BUTTON,\n      value: BUTTON.Default,\n    },\n  });\n\n  function enableButton(name, element) {\n    return useButton === name ? element : null;\n  }\n\n  return (\n    <>\n      {enableButton(BUTTON.Default, <Default />)}\n      {enableButton(BUTTON.Spring, <Spring />)}\n    </>\n  );\n};\n\nexport default Button;\n","const AZERTY = {\n  LEFT: \"KeyQ\",\n  UP: \"KeyZ\",\n};\nconst DIRECTION = {\n  BACK: -1,\n  DOWN: -1,\n  FORWARD: 1,\n  LEFT: -1,\n  NONE: 0,\n  RIGHT: 1,\n  UP: 1,\n};\nconst QWERTY = {\n  LEFT: \"KeyA\",\n  UP: \"KeyW\",\n};\n\nclass KeyboardControls {\n  static #forwardDirection = DIRECTION.NONE;\n  static #keyboard = QWERTY;\n  static #rightDirection = DIRECTION.NONE;\n  static #upDirection = DIRECTION.NONE;\n\n  static get forwardDirection() {\n    return this.#forwardDirection;\n  }\n\n  static get rightDirection() {\n    return this.#rightDirection;\n  }\n\n  static get upDirection() {\n    return this.#upDirection;\n  }\n\n  static keyDownHandler(event) {\n    console.log(\"KeyboardControls: keyDownHandler\", `'${event.code}'`);\n    switch (event.code) {\n      case \"ArrowDown\":\n      case \"KeyS\":\n        KeyboardControls.#forwardDirection = DIRECTION.BACK;\n        break;\n      case \"ArrowLeft\":\n      case KeyboardControls.#keyboard.LEFT:\n        KeyboardControls.#rightDirection = DIRECTION.LEFT;\n        break;\n      case \"ArrowRight\":\n      case \"KeyD\":\n        KeyboardControls.#rightDirection = DIRECTION.RIGHT;\n        break;\n      case \"ArrowUp\":\n      case KeyboardControls.#keyboard.UP:\n        KeyboardControls.#forwardDirection = DIRECTION.FORWARD;\n        break;\n      case \"KeyF\":\n        KeyboardControls.#upDirection = DIRECTION.DOWN;\n        break;\n      case \"KeyR\":\n        KeyboardControls.#upDirection = DIRECTION.UP;\n        break;\n      default:\n    }\n  }\n\n  static keyUpHandler(event) {\n    console.log(\"KeyboardControls: keyUpHandler\", `'${event.code}'`);\n    switch (event.code) {\n      case \"ArrowDown\":\n      case \"ArrowUp\":\n      case \"KeyS\":\n      case KeyboardControls.#keyboard.UP:\n        KeyboardControls.#forwardDirection = DIRECTION.NONE;\n        break;\n      case \"ArrowLeft\":\n      case \"ArrowRight\":\n      case \"KeyD\":\n      case KeyboardControls.#keyboard.LEFT:\n        KeyboardControls.#rightDirection = DIRECTION.NONE;\n        break;\n      case \"KeyF\":\n      case \"KeyR\":\n        KeyboardControls.#upDirection = DIRECTION.NONE;\n        break;\n      default:\n    }\n  }\n\n  static addEventListeners() {\n    console.info(\"KeyboardControls: addEventListeners\");\n    window.addEventListener(\"keydown\", KeyboardControls.keyDownHandler);\n    window.addEventListener(\"keyup\", KeyboardControls.keyUpHandler);\n  }\n\n  static removeEventListeners() {\n    console.info(\"KeyboardControls: removeEventListeners\");\n    window.removeEventListener(\"keydown\", KeyboardControls.keyDownHandler);\n    window.removeEventListener(\"keyup\", KeyboardControls.keyUpHandler);\n  }\n\n  static setKeyboardAzerty() {\n    console.log(this.#keyboard);\n    this.#keyboard = AZERTY;\n    console.log(this.#keyboard);\n  }\n\n  static setKeyboardQwerty() {\n    this.#keyboard = QWERTY;\n  }\n}\n\nexport default KeyboardControls;\n","import { MathUtils } from \"three\";\n\nclass MathCircle {\n  #radius = 1;\n  #angle = 0;\n\n  constructor(radius = 1) {\n    this.#radius = radius;\n  }\n\n  get angle() {\n    return this.#angle;\n  }\n\n  set angle(degrees) {\n    this.#angle = MathUtils.degToRad(degrees);\n  }\n\n  getCoordinates(degrees) {\n    this.angle = degrees;\n    const x = Math.cos(this.angle) * this.#radius;\n    const y = Math.sin(this.angle) * this.#radius;\n\n    return { x, y };\n  }\n}\n\nexport default MathCircle;\n","class ZeroFill {\n  #number;\n  #postfix;\n  #zeros;\n\n  constructor(number = 0, zeros = 0, postfix = \"\") {\n    this.number = number;\n    this.#postfix = postfix;\n    this.#zeros = zeros;\n  }\n\n  get number() {\n    return this.zeroFill(this.#number);\n  }\n\n  set number(number) {\n    this.#number = Math.floor(number).toString();\n  }\n\n  toString() {\n    return this.number + this.#postfix;\n  }\n\n  zeroFill(string) {\n    while (string.length < this.#zeros) {\n      string = `0${string}`;\n    }\n    return string;\n  }\n}\n\nexport default ZeroFill;\n","import { useRef } from \"react\";\nimport { DoubleSide, MathUtils } from \"three\";\nimport { useFrame } from \"@react-three/fiber\";\nimport { Text } from \"@react-three/drei\";\nimport { MathCircle } from \"App/utils\";\n\nfunction isHour(tick) {\n  return !(tick % 5);\n}\n\nconst HH = 12;\nconst MM = 60;\nconst SS = 60;\n\nconst CLOCK_SIZE = 2;\n\nconst CLOCK = Object.freeze({\n  HAND: {\n    HH: {\n      LENGTH: 0.6 * CLOCK_SIZE,\n      WIDTH: 0.02 * CLOCK_SIZE,\n    },\n    MM: { LENGTH: 0.7 * CLOCK_SIZE },\n    SS: { COLOR: 0xffcc66, LENGTH: 0.8 * CLOCK_SIZE },\n    THICKNESS: 0.02 * CLOCK_SIZE,\n  },\n  MARK: {\n    HH: {\n      COLOR: 0xff0000,\n      LENGTH: 0.1 * CLOCK_SIZE,\n      WIDTH: 0.02 * CLOCK_SIZE,\n    },\n    MM: {\n      COLOR: 0xffffff,\n      LENGTH: 0.08 * CLOCK_SIZE,\n      WIDTH: 0.01 * CLOCK_SIZE,\n    },\n    OFFSET: 0.05 * CLOCK_SIZE,\n  },\n});\n\n/**\n * Clock using standard React Three Fiber JSX\n */\nconst ClockAnalogue = (props) => {\n  const clockRef = useRef();\n  const handHoursRef = useRef();\n  const handMinutesRef = useRef();\n  const handSecondsRef = useRef();\n\n  const angleStart = MathUtils.degToRad(90);\n\n  useFrame(() => {\n    const d = new Date();\n    if (handHoursRef.current) {\n      handHoursRef.current.rotation.z = MathUtils.degToRad(\n        (d.getHours() + d.getMinutes() / MM) * -(360 / HH)\n      );\n    }\n    if (handMinutesRef.current) {\n      handMinutesRef.current.rotation.z = MathUtils.degToRad(\n        d.getMinutes() * -(360 / MM)\n      );\n    }\n    if (handSecondsRef.current) {\n      handSecondsRef.current.rotation.z = MathUtils.degToRad(\n        d.getSeconds() * -(360 / SS)\n      );\n    }\n  });\n\n  return (\n    <group ref={clockRef} {...props}>\n      <group>\n        <Text\n          color=\"black\"\n          fontSize={0.1 * CLOCK_SIZE}\n          position={[0, -0.25, 0.01].map((value) => value * CLOCK_SIZE)}\n        >\n          Arteveldehogeschool\n        </Text>\n        {Array(HH)\n          .fill(null)\n          .map((value, index) => {\n            const c = new MathCircle(CLOCK.MARK.HH.LENGTH * 7.5);\n            const angle = (index * 360) / HH + 90;\n            const { x, y } = c.getCoordinates(angle);\n            return (\n              <Text\n                color={CLOCK.HAND.SS.COLOR}\n                fontSize={0.1 * CLOCK_SIZE}\n                key={index}\n                position={[x, y, 0.01]}\n                scale={Array(3).fill(1)}\n              >\n                {(12 - index).toString()}\n              </Text>\n            );\n          })}\n      </group>\n      <group rotation={[0, 0, angleStart]}>\n        <mesh receiveShadow={true}>\n          <circleGeometry args={[CLOCK_SIZE, MM]} />\n          <meshStandardMaterial\n            opacity={0.25}\n            side={DoubleSide}\n            transparent={true}\n          />\n        </mesh>\n        <group position={[0, 0, CLOCK.HAND.THICKNESS / 2]}>\n          <group position={[0, 0, CLOCK.HAND.THICKNESS / 2]} ref={handHoursRef}>\n            <mesh castShadow={true} position={[CLOCK.HAND.HH.LENGTH / 2, 0, 0]}>\n              <boxGeometry\n                args={[\n                  CLOCK.HAND.HH.LENGTH,\n                  0.06 * CLOCK_SIZE,\n                  CLOCK.HAND.THICKNESS,\n                ]}\n              />\n              <meshStandardMaterial />\n            </mesh>\n          </group>\n          <group\n            position={[0, 0, CLOCK.HAND.THICKNESS * 2]}\n            ref={handMinutesRef}\n          >\n            <mesh castShadow={true} position={[CLOCK.HAND.MM.LENGTH / 2, 0, 0]}>\n              <boxGeometry\n                args={[CLOCK.HAND.MM.LENGTH, 0.04, CLOCK.HAND.THICKNESS]}\n              />\n              <meshStandardMaterial />\n            </mesh>\n          </group>\n          <group\n            position={[\n              0,\n              0,\n              CLOCK.HAND.THICKNESS * 3 + CLOCK.HAND.THICKNESS / 2,\n            ]}\n            ref={handSecondsRef}\n          >\n            <mesh castShadow={true} position={[CLOCK.HAND.SS.LENGTH / 2, 0, 0]}>\n              <boxGeometry\n                args={[CLOCK.HAND.SS.LENGTH, 0.02, CLOCK.HAND.THICKNESS]}\n              />\n              <meshStandardMaterial color={CLOCK.HAND.SS.COLOR} />\n            </mesh>\n          </group>\n        </group>\n        {Array(MM)\n          .fill(null)\n          .map((value, index) => {\n            const radians = MathUtils.degToRad((360 / MM) * index);\n            return (\n              <group\n                key={index}\n                rotation={[0, 0, radians]}\n                position={[0, 0, 0.005]}\n              >\n                <mesh\n                  position={[\n                    CLOCK_SIZE -\n                      CLOCK.MARK.OFFSET -\n                      (isHour(index)\n                        ? CLOCK.MARK.HH.LENGTH - 0.01\n                        : CLOCK.MARK.HH.LENGTH) /\n                        2,\n                    0,\n                    0,\n                  ]}\n                >\n                  <boxGeometry\n                    args={[\n                      isHour(index)\n                        ? CLOCK.MARK.HH.LENGTH\n                        : CLOCK.MARK.MM.LENGTH,\n                      isHour(index) ? CLOCK.MARK.HH.WIDTH : CLOCK.MARK.MM.WIDTH,\n                      0.01,\n                    ]}\n                  />\n                  <meshStandardMaterial\n                    color={\n                      index === 0\n                        ? 0x0000ff\n                        : isHour(index)\n                        ? CLOCK.MARK.HH.COLOR\n                        : CLOCK.MARK.MM.COLOR\n                    }\n                  />\n                </mesh>\n              </group>\n            );\n          })}\n        <mesh\n          castShadow={true}\n          position={[0, 0, 0.05]}\n          rotation={[-90, 0, 0].map((degrees) => MathUtils.degToRad(degrees))}\n        >\n          <cylinderGeometry args={[0.1, 0.05, CLOCK.HAND.THICKNESS * 7, 36]} />\n          <meshStandardMaterial />\n        </mesh>\n      </group>\n    </group>\n  );\n};\n\nexport default ClockAnalogue;\n","import { useEffect, useRef } from \"react\";\nimport { MathUtils } from \"three\";\nimport { useFrame } from \"@react-three/fiber\";\nimport { Text } from \"@react-three/drei\";\n\nconst ClockDigital = (props) => {\n  const clockRef = useRef();\n\n  useEffect(() => {\n    if (clockRef.current) {\n      clockRef.current.rotation.x = MathUtils.degToRad(-30);\n    }\n  }, []);\n\n  useFrame(() => {\n    if (clockRef.current) {\n      clockRef.current.text = new Date().toLocaleTimeString();\n    }\n  });\n\n  return <Text fontSize={2} ref={clockRef} {...props} />;\n};\n\nexport default ClockDigital;\n","import { useControls } from \"leva\";\n\nimport Analogue from \"./Analogue\";\nimport Digital from \"./Digital\";\n\nconst CLOCK = Object.freeze({\n  Analogue: \"Analogue\",\n  Digital: \"Digital\",\n});\n\nconst Clock = () => {\n  const { useClock } = useControls(\"Components\", {\n    useClock: {\n      label: \"Clock\",\n      options: CLOCK,\n      value: CLOCK.Analogue,\n    },\n  });\n\n  function enableClock(name, element) {\n    return useClock === name ? element : null;\n  }\n\n  return (\n    <>\n      {enableClock(CLOCK.Analogue, <Analogue />)}\n      {enableClock(CLOCK.Digital, <Digital />)}\n    </>\n  );\n};\n\nexport default Clock;\n","import { folder, useControls } from \"leva\";\n\nconst MaterialPhysicalFrostedGlass = () => {\n  const { roughness, thickness, transmission } = useControls(\"Components\", {\n    \"Physical Material\": folder({\n      roughness: {\n        label: \"Roughness\",\n        max: 1,\n        min: 0,\n        step: 0.01,\n        value: 0.5,\n      },\n      thickness: {\n        label: \"Thickness\",\n        max: 1,\n        min: 0,\n        step: 0.01,\n        value: 0.7,\n      },\n      transmission: {\n        label: \"Transmission\",\n        max: 1,\n        min: 0,\n        step: 0.01,\n        value: 1,\n      },\n    }),\n  });\n\n  return (\n    <meshPhysicalMaterial\n      roughness={roughness}\n      thickness={thickness}\n      transmission={transmission}\n    />\n  );\n};\n\nexport default MaterialPhysicalFrostedGlass;\n","import { Plane, Text, useTexture } from \"@react-three/drei\";\n\nconst CompositionPainting = () => {\n  const texture = useTexture(\n    \"https://upload.wikimedia.org/wikipedia/commons/1/11/Vassily_Kandinsky%2C_1925_-In_Blue.jpg\"\n  );\n  const aspectRatio = texture.image.width / texture.image.height;\n  const size = 4;\n\n  return (\n    <group position={[0, 0, -2]}>\n      <Plane args={[size * aspectRatio, size]}>\n        <meshBasicMaterial map={texture} />\n      </Plane>\n      <Text position={[0, -(size / 2 + 0.1), 0]}>\n        Vassily Kandinsky (1925) &mdash; In Blue\n      </Text>\n    </group>\n  );\n};\n\nexport default CompositionPainting;\n","import { BackSide, DoubleSide, FrontSide } from \"three\";\n\nexport const levaDithering = {\n  label: \"Dithering\",\n  hint: \"Whether to apply dithering to the color to remove the appearance of banding.\",\n  value: false,\n};\n\nexport const levaOpacity = {\n  label: \"Opacity\",\n  hint: \"Float in the range of 0.0 - 1.0 indicating how transparent the material is. A value of 0.0 indicates fully transparent, 1.0 is fully opaque.\\nIf the material's transparent property is not set to true, the material will remain fully opaque and this value will only affect its color.\",\n  max: 1.0,\n  min: 0.0,\n  step: 0.01,\n  value: 1.0,\n};\n\nexport const levaSide = {\n  label: \"Normals\",\n  hint: \"Defines which side of faces will be rendered - front, back or both.\",\n  options: { BackSide, DoubleSide, FrontSide },\n  value: FrontSide,\n};\n\nexport const levaTransparent = {\n  label: \"Transparent\",\n  hint: \"Defines whether this material is transparent. This has an effect on rendering as transparent objects need special treatment and are rendered after non-transparent objects.\\nWhen set to true, the extent to which the material is transparent is controlled by setting its opacity property.\",\n  value: false,\n};\n","import { AddOperation, MixOperation, MultiplyOperation } from \"three\";\n\nexport const levaAlphaMap = {\n  label: \"Alpha Map\",\n  hint: \"The alpha map is a grayscale texture that controls the opacity across the surface (black: fully transparent; white: fully opaque).\",\n  value: null,\n};\n\nexport const levaAoMap = {\n  label: \"Ambient Occlusion Map\",\n  hint: \"The red channel of this texture is used as the ambient occlusion map. The aoMap requires a second set of UVs.\",\n  value: null,\n};\n\nexport const levaAoMapIntensity = {\n  label: \"Ambient Occlusion Map Intensity\",\n  hint: \"Intensity of the ambient occlusion effect. Zero is no occlusion effect.\",\n  max: 1.0,\n  min: 0.0,\n  step: 0.01,\n  value: 1.0,\n};\n\nexport const levaColor = {\n  label: \"Color\",\n  hint: \"Color of the material.\",\n  value: \"#ffffff\",\n};\n\nexport const levaCombine = {\n  label: \"Color\",\n  hint: \"How to combine the result of the surface's color with the environment map, if any.\",\n  options: { AddOperation, MixOperation, MultiplyOperation },\n  value: MultiplyOperation,\n};\n\nexport const levaEnvMap = {\n  label: \"Environment Map\",\n  hint: \"The environment map.\",\n  value: null,\n};\n\nexport const levaLightMap = {\n  label: \"Light Map\",\n  hint: \"The light map. The lightMap requires a second set of UVs.\",\n  value: null,\n};\n\nexport const levaLightMapIntensity = {\n  label: \"Light Map Intensity\",\n  hint: \"Intensity of the baked light.\",\n  value: 1.0,\n};\n\nexport const levaMap = {\n  label: \"Map\",\n  hint: \"The color map.\",\n  value: null,\n};\n\nexport const levaReflectivity = {\n  label: \"Reflectivity\",\n  hint: \"How much the environment map affects the surface; also see .combine. The default value is 1 and the valid range is between 0 (no reflections) and 1 (full reflections).\",\n  max: 1.0,\n  min: 0.0,\n  step: 0.01,\n  value: 1.0,\n};\n\nexport const levaRefractionRatio = {\n  label: \"Refraction Ratio\",\n  hint: \"The index of refraction (IOR) of air (approximately 1) divided by the index of refraction of the material. It is used with environment mapping modes THREE.CubeRefractionMapping and THREE.EquirectangularRefractionMapping. The refraction ratio should not exceed 1.\",\n  max: 1.0,\n  min: 0.0,\n  step: 0.01,\n  value: 0.98,\n};\n\nexport const levaSpecularMap = {\n  label: \"Specular Map\",\n  hint: \"Specular map used by the material.\",\n  value: null,\n};\n\nexport const levaWireframe = {\n  label: \"Wireframe\",\n  hint: \"Render geometry as wireframe. Default is false (i.e. render as flat polygons).\",\n  value: false,\n};\n","import { folder, useControls } from \"leva\";\n\nimport {\n  levaDithering,\n  levaOpacity,\n  levaSide,\n  levaTransparent,\n} from \"App/libs/LevaSettings/Material\";\nimport {\n  levaColor,\n  levaReflectivity,\n  levaRefractionRatio,\n  levaWireframe,\n} from \"App/libs/LevaSettings/Material/Basic\";\n\n/**\n * A material for drawing geometries in a simple shaded (flat or wireframe) way.\n *\n * @see https://threejs.org/docs/index.html#api/en/materials/MeshBasicMaterial\n */\nconst MaterialBasic = () => {\n  const {\n    color,\n    dithering,\n    opacity,\n    reflectivity,\n    refractionRatio,\n    side,\n    transparent,\n    wireframe,\n  } = useControls(\"Components\", {\n    Materials: folder({\n      Material: folder({\n        dithering: levaDithering,\n        opacity: levaOpacity,\n        side: levaSide,\n        transparent: levaTransparent,\n      }),\n      \"Basic Material\": folder({\n        color: levaColor,\n        reflectivity: levaReflectivity,\n        refractionRatio: levaRefractionRatio,\n        wireframe: levaWireframe,\n      }),\n    }),\n  });\n\n  return (\n    <meshBasicMaterial\n      color={color}\n      dithering={dithering}\n      opacity={opacity}\n      reflectivity={reflectivity}\n      refractionRatio={refractionRatio}\n      side={side}\n      transparent={transparent}\n      wireframe={wireframe}\n    />\n  );\n};\n\nexport default MaterialBasic;\n","export { levaAlphaMap } from \"./Basic\";\n\nexport { levaAoMap } from \"./Basic\";\n\nexport { levaAoMapIntensity } from \"./Basic\";\n\nexport { levaColor } from \"./Basic\";\n\nexport { levaCombine } from \"./Basic\";\n\nexport const levaEmissive = {\n  label: \"Emissive\",\n  hint: \"Emissive (light) color of the material, essentially a solid color unaffected by other lighting.\",\n  value: \"#000000\",\n};\n\nexport const levaEmissiveIntensity = {\n  label: \"Emissive Intensity\",\n  hint: \"Intensity of the emissive light. Modulates the emissive color.\",\n  max: 5,\n  min: 0,\n  value: 1,\n};\n\nexport const levaEmissiveMap = {\n  label: \"Emissive Map\",\n  hint: \"Set emissive (glow) map. The emissive map color is modulated by the emissive color and the emissive intensity. If you have an emissive map, be sure to set the emissive color to something other than black.\",\n  value: null,\n};\n\nexport { levaEnvMap } from \"./Basic\";\n\nexport { levaLightMap } from \"./Basic\";\n\nexport { levaLightMapIntensity } from \"./Basic\";\n\nexport { levaMap } from \"./Basic\";\n\nexport { levaReflectivity } from \"./Basic\";\n\nexport { levaRefractionRatio } from \"./Basic\";\n\nexport { levaSpecularMap } from \"./Basic\";\n\nexport { levaWireframe } from \"./Basic\";\n","import { folder, useControls } from \"leva\";\n\nimport {\n  levaDithering,\n  levaOpacity,\n  levaSide,\n  levaTransparent,\n} from \"App/libs/LevaSettings/Material\";\nimport {\n  levaColor,\n  levaEmissive,\n  levaEmissiveIntensity,\n  levaWireframe,\n} from \"App/libs/LevaSettings/Material/Lambert\";\n\n/**\n * A material for non-shiny surfaces, without specular highlights.\n *\n * @see https://threejs.org/docs/index.html#api/en/materials/MeshLambertMaterial\n */\nconst MaterialLambert = () => {\n  const {\n    color,\n    dithering,\n    emissive,\n    emissiveIntensity,\n    opacity,\n    side,\n    transparent,\n    wireframe,\n  } = useControls(\"Components\", {\n    Materials: folder({\n      Material: folder({\n        dithering: levaDithering,\n        opacity: levaOpacity,\n        side: levaSide,\n        transparent: levaTransparent,\n      }),\n      \"Lambert Material\": folder({\n        color: levaColor,\n        emissive: levaEmissive,\n        emissiveIntensity: levaEmissiveIntensity,\n        wireframe: levaWireframe,\n      }),\n    }),\n  });\n\n  return (\n    <meshLambertMaterial\n      color={color}\n      dithering={dithering}\n      emissive={emissive}\n      emissiveIntensity={emissiveIntensity}\n      opacity={opacity}\n      side={side}\n      transparent={transparent}\n      wireframe={wireframe}\n    />\n  );\n};\n\nexport default MaterialLambert;\n","/**\n * Only WOFF accepted, not WOFF2!\n *\n * https://fonts.google.com/\n * Make a request with header `User-Agent`: `Mozilla/5.0 (MSIE 11.0)` and turn off automatic URL encoding.\n */\nconst FontFamily = Object.freeze({\n  ARCHITECTS_DAUGHTER: Object.freeze({\n    name: \"Architects Daughter\",\n    url: \"https://fonts.gstatic.com/s/architectsdaughter/v11/KtkxAKiDZI_td1Lkx62xHZHDtgO_Y-bvfY0.woff\",\n  }),\n  PRESS_START_2P: Object.freeze({\n    name: \"Press Start 2P\",\n    url: \"https://fonts.gstatic.com/s/pressstart2p/v9/e3t4euO8T-267oIAQAu6jDQyK0nR.woff\",\n  }),\n  REDACTED_SCRIPT: Object.freeze({\n    name: \"Redacted Script\",\n    url: \"https://fonts.gstatic.com/s/redactedscript/v1/ypvBbXGRglhokR7dcC3d1-R6zmxitm72.woff\",\n  }),\n  ROBOTO: Object.freeze({\n    name: \"Roboto\",\n    url: \"https://fonts.gstatic.com/s/roboto/v29/KFOmCnqEu92Fr1Mu4mxM.woff\",\n  }),\n  ROBOTO_SLAB: Object.freeze({\n    name: \"Roboto Slab\",\n    url: \"https://fonts.gstatic.com/s/robotoslab/v12/BngbUXZYTXPIvIBgJJSb6s3BzlRRfKOFbvjovoSWaw.woff\",\n  }),\n  TANGERINE: Object.freeze({\n    name: \"Tangerine\",\n    url: \"https://fonts.gstatic.com/s/tangerine/v12/IurY6Y5j_oScZZow4VOBDQ.woff\",\n  }),\n});\n\nexport default FontFamily;\n","/**\n * https://pixologic.com/zbrush/downloadcenter/library/\n * https://www.badking.com.au/site/product-category/materials/\n * https://www.zbrushcentral.com/t/matcap-repository/205029\n */\nconst Matcap = Object.freeze({\n  // Index or ID string, see: https://github.com/emmelleppi/matcaps/\n  id: Object.freeze({\n    GREEN_CRYSTAL: \"2E763A_78A0B7_B3D1CF_14F209\", // https://github.com/emmelleppi/matcaps/blob/master/PAGE-3.md#2e763a_78a0b7_b3d1cf_14f209 https://pixologic.com/zbrush/downloadcenter/img/matcaps/images/erklaerbar/ok_green_crystal.jpg\n    SILVERY: \"4C4C4C_D2D2D2_8F8F8F_ACACAC\", // https://github.com/emmelleppi/matcaps/blob/master/PAGE-8.md#4c4c4c_d2d2d2_8f8f8f_acacac https://pixologic.com/zbrush/downloadcenter/img/matcaps/images/slosh/bgs_silvery.jpg\n    TITANIUM: \"C7C7D7_4C4E5A_818393_6C6C74\", // https://github.com/emmelleppi/matcaps/blob/master/PAGE-28.md#c7c7d7_4c4e5a_818393_6c6c74 https://pixologic.com/zbrush/downloadcenter/img/matcaps/images/arranlewis/al_titanium.jpg\n    WORN_GOLD: \"6E5137_E8CA90_271912_B99C74\", // https://github.com/emmelleppi/matcaps/blob/master/PAGE-15.md#6e5137_e8ca90_271912_b99c74 https://pixologic.com/zbrush/downloadcenter/img/matcaps/thumbs/sathe/gw_worn_gold.jpg\n  }),\n\n  // Texture size\n  size: Object.freeze({\n    XS: 64,\n    SM: 128,\n    MD: 256,\n    LG: 512,\n    XL: 1024,\n  }),\n});\n\nexport default Matcap;\n","import { ObjectSpaceNormalMap, TangentSpaceNormalMap } from \"three\";\n\nexport { levaAlphaMap } from \"./Basic\";\n\nexport { levaAoMap } from \"./Basic\";\n\nexport { levaAoMapIntensity } from \"./Basic\";\n\nexport const levaBumpMap = {\n  label: \"Bump Map\",\n  hint: \"The texture to create a bump map. The black and white values map to the perceived depth in relation to the lights. Bump doesn't actually affect the geometry of the object, only the lighting. If a normal map is defined this will be ignored.\",\n  value: null,\n};\n\nexport const levaBumpScale = {\n  label: \"Bump Scale\",\n  hint: \"How much the bump map affects the material. Typical ranges are 0-1.\",\n  max: 1.0,\n  min: 0.0,\n  step: 0.01,\n  value: 1.0,\n};\n\nexport { levaColor } from \"./Basic\";\n\nexport { levaCombine } from \"./Basic\";\n\nexport const levaDisplacementMap = {\n  label: \"Displacement Map\",\n  hint: \"The displacement map affects the position of the mesh's vertices. Unlike other maps which only affect the light and shade of the material the displaced vertices can cast shadows, block other objects, and otherwise act as real geometry. The displacement texture is an image where the value of each pixel (white being the highest) is mapped against, and repositions, the vertices of the mesh.\",\n  value: null,\n};\n\nexport const levaDisplacementBias = {\n  label: \"Displacement Bias\",\n  hint: \"How much the displacement map affects the mesh (where black is no displacement, and white is maximum displacement). Without a displacement map set, this value is not applied. Default is 1.\",\n  max: 1.0,\n  min: 0.0,\n  step: 0.01,\n  value: 1.0,\n};\n\nexport const levaDisplacementScale = {\n  label: \"Displacement Scale\",\n  hint: \"How much the displacement map affects the mesh (where black is no displacement, and white is maximum displacement). Without a displacement map set, this value is not applied. Default is 1.\",\n  max: 1.0,\n  min: 0.0,\n  step: 0.01,\n  value: 1.0,\n};\n\nexport { levaEmissive } from \"./Lambert\";\n\nexport { levaEmissiveIntensity } from \"./Lambert\";\n\nexport { levaEmissiveMap } from \"./Lambert\";\n\nexport { levaEnvMap } from \"./Basic\";\n\nexport const levaFlatShading = {\n  label: \"Flat Shading\",\n  hint: \"Define whether the material is rendered with flat shading.\",\n  value: false,\n};\n\nexport { levaLightMap } from \"./Basic\";\n\nexport { levaLightMapIntensity } from \"./Basic\";\n\nexport { levaMap } from \"./Basic\";\n\nexport const levaNormalMap = {\n  label: \"Normal Map\",\n  hint: \"The texture to create a normal map. The RGB values affect the surface normal for each pixel fragment and change the way the color is lit. Normal maps do not change the actual shape of the surface, only the lighting. In case the material has a normal map authored using the left handed convention, the y component of normalScale should be negated to compensate for the different handedness.\",\n  value: null,\n};\n\nexport const levaNormalMapType = {\n  label: \"Normal Map Type\",\n  hint: \"The type of normal map.\",\n  options: { ObjectSpaceNormalMap, TangentSpaceNormalMap },\n  value: TangentSpaceNormalMap,\n};\n\nexport const levaNormalScale = {\n  label: \"Normal Map Type\",\n  hint: \"How much the normal map affects the material. Typical ranges are 0-1. Default is a Vector2 set to (1,1).\",\n  options: { ObjectSpaceNormalMap, TangentSpaceNormalMap },\n  max: 1.0,\n  min: 0.0,\n  step: 0.01,\n  value: [1.0, 1.0],\n};\n\nexport { levaReflectivity } from \"./Basic\";\n\nexport { levaRefractionRatio } from \"./Basic\";\n\nexport const levaShininess = {\n  label: \"Shininess\",\n  hint: \"How shiny the .specular highlight is; a higher value gives a sharper highlight.\",\n  max: 100.0,\n  min: 0.0,\n  step: 0.1,\n  value: 30.0,\n};\n\nexport const levaSpecular = {\n  label: \"Specular\",\n  hint: \"Specular color of the material. Default is a Color set to 0x111111 (very dark grey).\",\n  value: \"#111111\",\n};\n\nexport { levaSpecularMap } from \"./Basic\";\n\nexport { levaWireframe } from \"./Basic\";\n","import { useMatcapTexture } from \"@react-three/drei\";\nimport { folder, useControls } from \"leva\";\n\nimport { Matcap } from \"App/libs\";\nimport {\n  levaDithering,\n  levaOpacity,\n  levaSide,\n  levaTransparent,\n} from \"App/libs/LevaSettings/Material\";\nimport {\n  levaColor,\n  levaFlatShading,\n} from \"App/libs/LevaSettings/Material/Matcap\";\n\n/**\n * MeshMatcapMaterial is defined by a MatCap (or Lit Sphere) texture, which encodes the material color and shading.\n *\n * @see https://threejs.org/docs/index.html#api/en/materials/MeshMatcapMaterial\n */\nconst MaterialMatcap = () => {\n  const { color, dithering, flatShading, opacity, side, transparent } =\n    useControls(\"Components\", {\n      Materials: folder({\n        Material: folder({\n          dithering: levaDithering,\n          opacity: levaOpacity,\n          side: levaSide,\n          transparent: levaTransparent,\n        }),\n        \"Normal Material\": folder({\n          color: levaColor,\n          flatShading: levaFlatShading,\n        }),\n      }),\n    });\n  const [matcap] = useMatcapTexture(Matcap.id.WORN_GOLD, Matcap.size.XL);\n\n  return (\n    <meshMatcapMaterial\n      color={color}\n      dithering={dithering}\n      flatShading={flatShading}\n      matcap={matcap}\n      opacity={opacity}\n      side={side}\n      transparent={transparent}\n    />\n  );\n};\n\nexport default MaterialMatcap;\n","import { folder, useControls } from \"leva\";\n\nimport {\n  levaDithering,\n  levaOpacity,\n  levaSide,\n  levaTransparent,\n} from \"App/libs/LevaSettings/Material\";\nimport {\n  levaFlatShading,\n  levaWireframe,\n} from \"App/libs/LevaSettings/Material/Normal\";\n\n/**\n * A material that maps the normal vectors to RGB colors.\n *\n * @see https://threejs.org/docs/index.html#api/en/materials/MeshNormalMaterial\n */\nconst MaterialNormal = () => {\n  const { dithering, flatShading, opacity, side, transparent, wireframe } =\n    useControls(\"Components\", {\n      Materials: folder({\n        Material: folder({\n          dithering: levaDithering,\n          opacity: levaOpacity,\n          side: levaSide,\n          transparent: levaTransparent,\n        }),\n        \"Normal Material\": folder({\n          flatShading: levaFlatShading,\n          wireframe: levaWireframe,\n        }),\n      }),\n    });\n\n  return (\n    <meshNormalMaterial\n      dithering={dithering}\n      flatShading={flatShading}\n      opacity={opacity}\n      side={side}\n      transparent={transparent}\n      wireframe={wireframe}\n    />\n  );\n};\n\nexport default MaterialNormal;\n","import { folder, useControls } from \"leva\";\n\nimport {\n  levaDithering,\n  levaOpacity,\n  levaSide,\n  levaTransparent,\n} from \"App/libs/LevaSettings/Material\";\nimport {\n  levaColor,\n  levaEmissive,\n  levaEmissiveIntensity,\n  levaShininess,\n  levaFlatShading,\n  levaSpecular,\n  levaWireframe,\n} from \"App/libs/LevaSettings/Material/Phong\";\n\n/**\n * A material for shiny surfaces with specular highlights.\n *\n * @see https://threejs.org/docs/index.html#api/en/materials/MeshPhongMaterial\n */\nconst MaterialPhong = () => {\n  const {\n    color,\n    dithering,\n    emissive,\n    emissiveIntensity,\n    flatShading,\n    opacity,\n    shininess,\n    side,\n    specular,\n    transparent,\n    wireframe,\n  } = useControls(\"Components\", {\n    Materials: folder({\n      Material: folder({\n        dithering: levaDithering,\n        opacity: levaOpacity,\n        side: levaSide,\n        transparent: levaTransparent,\n      }),\n      \"Phong Material\": folder({\n        color: levaColor,\n        emissive: levaEmissive,\n        emissiveIntensity: levaEmissiveIntensity,\n        flatShading: levaFlatShading,\n        shininess: levaShininess,\n        specular: levaSpecular,\n        wireframe: levaWireframe,\n      }),\n    }),\n  });\n\n  return (\n    <meshPhongMaterial\n      color={color}\n      dithering={dithering}\n      emissive={emissive}\n      emissiveIntensity={emissiveIntensity}\n      flatShading={flatShading}\n      opacity={opacity}\n      shininess={shininess}\n      side={side}\n      specular={specular}\n      transparent={transparent}\n      wireframe={wireframe}\n    />\n  );\n};\n\nexport default MaterialPhong;\n","export { levaAlphaMap } from \"./Basic\";\n\nexport { levaAoMap } from \"./Basic\";\n\nexport { levaAoMapIntensity } from \"./Basic\";\n\nexport { levaBumpMap } from \"./Phong\";\n\nexport { levaBumpScale } from \"./Phong\";\n\nexport { levaColor } from \"./Basic\";\n\nexport { levaDisplacementBias } from \"./Phong\";\n\nexport { levaDisplacementMap } from \"./Phong\";\n\nexport { levaDisplacementScale } from \"./Phong\";\n\nexport { levaEmissive } from \"./Lambert\";\n\nexport { levaEmissiveIntensity } from \"./Lambert\";\n\nexport { levaEmissiveMap } from \"./Lambert\";\n\nexport { levaEnvMap } from \"./Basic\";\n\nexport const levaEnvMapIntensity = {\n  label: \"Environment Map Intensity\",\n  hint: \"Scales the effect of the environment map by multiplying its color.\",\n  max: 1.0,\n  min: 0.0,\n  step: 0.01,\n  value: 0.0,\n};\n\nexport { levaFlatShading } from \"./Phong\";\n\nexport { levaLightMap } from \"./Basic\";\n\nexport { levaLightMapIntensity } from \"./Basic\";\n\nexport { levaMap } from \"./Basic\";\n\nexport const levaMetalness = {\n  label: \"Metalness\",\n  hint: \"How much the material is like a metal. Non-metallic materials such as wood or stone use 0.0, metallic use 1.0, with nothing (usually) in between. Default is 0.0. A value between 0.0 and 1.0 could be used for a rusty metal look. If metalnessMap is also provided, both values are multiplied.\",\n  max: 1.0,\n  min: 0.0,\n  step: 0.01,\n  value: 0.0,\n};\n\nexport const levaMetalnessMap = {\n  label: \"Metalness Map\",\n  hint: \"The blue channel of this texture is used to alter the metalness of the material.\",\n  value: null,\n};\n\nexport { levaNormalMap } from \"./Phong\";\n\nexport { levaNormalMapType } from \"./Phong\";\n\nexport { levaNormalScale } from \"./Phong\";\n\nexport { levaRefractionRatio } from \"./Basic\";\n\nexport const levaRoughness = {\n  label: \"Roughness\",\n  hint: \"How rough the material appears. 0.0 means a smooth mirror reflection, 1.0 means fully diffuse. Default is 1.0. If roughnessMap is also provided, both values are multiplied.\",\n  max: 1.0,\n  min: 0.0,\n  step: 0.01,\n  value: 1.0,\n};\n\nexport const levaRoughnessMap = {\n  label: \"Roughness Map\",\n  hint: \"The green channel of this texture is used to alter the roughness of the material.\",\n  value: null,\n};\n\nexport { levaWireframe } from \"./Basic\";\n","export const levaClearcoat = {\n  label: \"Clearcoat\",\n  hint: \"Represents the intensity of the clear coat layer, from 0.0 to 1.0. Use clear coat related properties to enable multilayer materials that have a thin translucent layer over the base layer.\",\n  max: 1.0,\n  min: 0.0,\n  step: 0.01,\n  value: 0.0,\n};\n\nexport const levaClearcoatMap = {\n  label: \"Clearcoat Map\",\n  hint: \"The red channel of this texture is multiplied against .clearcoat, for per-pixel control over a coating's intensity.\",\n  value: null,\n};\n\nexport const levaClearcoatNormalMap = {\n  label: \"Clearcoat Normal Map\",\n  hint: \"Can be used to enable independent normals for the clear coat layer.\",\n  value: null,\n};\n\nexport const levaClearcoatNormalScale = {\n  label: \"Clearcoat Normal Scale\",\n  hint: \"How much .clearcoatNormalMap affects the clear coat layer, from (0,0) to (1,1). Default is (1,1).\",\n  max: 1.0,\n  min: 0.0,\n  step: 0.01,\n  value: [1.0, 1.0],\n};\n\nexport const levaClearcoatRoughness = {\n  label: \"Clearcoat Roughness\",\n  hint: \"Roughness of the clear coat layer, from 0.0 to 1.0.\",\n  max: 1.0,\n  min: 0.0,\n  step: 0.01,\n  value: 0.0,\n};\n\nexport const levaIor = {\n  label: \"Index-of-Refraction\",\n  hint: \"Index-of-refraction for non-metallic materials, from 1.0 to 2.333. Default is 1.5.\",\n  max: 2.333,\n  min: 1.0,\n  step: 0.001,\n  value: 1.5,\n};\n\nexport const levaReflectivity = {\n  label: \"Reflectivity\",\n  hint: \"Degree of reflectivity, from 0.0 to 1.0. Default is 0.5, which corresponds to an index-of-refraction of 1.5.\",\n  max: 1.0,\n  min: 0.0,\n  step: 0.01,\n  value: 0.5,\n};\n\nexport const levaSheen = {\n  label: \"Sheen\",\n  hint: \"The intensity of the sheen layer, from 0.0 to 1.0. Default is 0.0.\",\n  max: 1.0,\n  min: 0.0,\n  step: 0.01,\n  value: 0.0,\n};\n\nexport const levaSheenColor = {\n  label: \"Sheen Color\",\n  hint: \"The sheen tint. Default is 0xffffff, white.\",\n  value: \"#ffffff\",\n};\n\nexport const levaSheenColorMap = {\n  label: \"Sheen Color Map\",\n  hint: \"The RGB channels of this texture are multiplied against .sheenColor, for per-pixel control over sheen tint.\",\n  value: null,\n};\n\nexport const levaSheenRoughness = {\n  label: \"Sheen Roughness\",\n  hint: \"Roughness of the sheen layer, from 0.0 to 1.0. Default is 1.0.\",\n  max: 1.0,\n  min: 0.0,\n  step: 0.01,\n  value: 1.0,\n};\n\nexport const levaSheenRoughnessMap = {\n  label: \"Sheen Roughness Map\",\n  hint: \"The alpha channel of this texture is multiplied against .sheenRoughness, for per-pixel control over sheen roughness.\",\n  value: null,\n};\n\nexport const levaThickness = {\n  label: \"Thickness\",\n  max: 9.0,\n  min: 0.0,\n  step: 0.01,\n  value: 0.01,\n};\n\nexport const levaTransmission = {\n  label: \"Transmission\",\n  hint: \"Degree of transmission (or optical transparency), from 0.0 to 1.0. Default is 0.0.\\nThin, transparent or semitransparent, plastic or glass materials remain largely reflective even if they are fully transmissive. The transmission property can be used to model these materials.\\nWhen transmission is non-zero, opacity should be set to 1.\",\n  max: 2.0,\n  min: 0.0,\n  step: 0.01,\n  value: 0.0,\n};\n","import { folder, useControls } from \"leva\";\n\nimport {\n  levaDithering,\n  levaOpacity,\n  levaSide,\n  levaTransparent,\n} from \"App/libs/LevaSettings/Material\";\nimport {\n  levaColor,\n  levaEmissive,\n  levaEmissiveIntensity,\n  levaFlatShading,\n  levaMetalness,\n  levaRoughness,\n  levaWireframe,\n} from \"App/libs/LevaSettings/Material/Standard\";\nimport {\n  levaClearcoat,\n  levaClearcoatRoughness,\n  levaIor,\n  levaReflectivity,\n  levaSheen,\n  levaSheenColor,\n  levaSheenRoughness,\n  levaThickness,\n  levaTransmission,\n} from \"App/libs/LevaSettings/Material/Physical\";\n\n/**\n * An extension of the MeshStandardMaterial, providing more advanced physically-based rendering properties.\n *\n * @see https://threejs.org/docs/index.html#api/en/materials/MeshPhysicalMaterial\n */\nconst MaterialPhysical = () => {\n  const {\n    clearcoat,\n    clearcoatRoughness,\n    color,\n    dithering,\n    emissive,\n    emissiveIntensity,\n    flatShading,\n    ior,\n    metalness,\n    opacity,\n    reflectivity,\n    roughness,\n    sheen,\n    sheenColor,\n    sheenRoughness,\n    side,\n    thickness,\n    transmission,\n    transparent,\n    wireframe,\n  } = useControls(\"Components\", {\n    Materials: folder({\n      Material: folder({\n        dithering: levaDithering,\n        opacity: levaOpacity,\n        side: levaSide,\n        transparent: levaTransparent,\n      }),\n      \"Standard Material\": folder({\n        color: levaColor,\n        emissive: levaEmissive,\n        emissiveIntensity: levaEmissiveIntensity,\n        flatShading: levaFlatShading,\n        metalness: levaMetalness,\n        roughness: levaRoughness,\n        wireframe: levaWireframe,\n      }),\n      \"Physical Material\": folder({\n        clearcoat: levaClearcoat,\n        clearcoatRoughness: levaClearcoatRoughness,\n        ior: levaIor,\n        reflectivity: levaReflectivity,\n        sheen: levaSheen,\n        sheenColor: levaSheenColor,\n        sheenRoughness: levaSheenRoughness,\n        thickness: levaThickness,\n        transmission: levaTransmission,\n      }),\n    }),\n  });\n\n  return (\n    <meshPhysicalMaterial\n      clearcoat={clearcoat}\n      clearcoatRoughness={clearcoatRoughness}\n      color={color}\n      dithering={dithering}\n      emissive={emissive}\n      emissiveIntensity={emissiveIntensity}\n      flatShading={flatShading}\n      ior={ior}\n      metalness={metalness}\n      opacity={opacity}\n      reflectivity={reflectivity}\n      roughness={roughness}\n      sheen={sheen}\n      sheenColor={sheenColor}\n      sheenRoughness={sheenRoughness}\n      side={side}\n      thickness={thickness}\n      transmission={transmission}\n      transparent={transparent}\n      wireframe={wireframe}\n    />\n  );\n};\n\nexport default MaterialPhysical;\n","import { folder, useControls } from \"leva\";\n\nimport {\n  levaDithering,\n  levaOpacity,\n  levaSide,\n  levaTransparent,\n} from \"App/libs/LevaSettings/Material\";\nimport {\n  levaColor,\n  levaEmissive,\n  levaEmissiveIntensity,\n  levaFlatShading,\n  levaMetalness,\n  levaRoughness,\n  levaWireframe,\n} from \"App/libs/LevaSettings/Material/Standard\";\n\n/**\n * A standard physically based material, using Metallic-Roughness workflow.\n *\n * @see https://threejs.org/docs/index.html#api/en/materials/MeshStandardMaterial\n */\nconst MaterialStandard = () => {\n  const {\n    color,\n    dithering,\n    emissive,\n    emissiveIntensity,\n    flatShading,\n    metalness,\n    opacity,\n    roughness,\n    side,\n    transparent,\n    wireframe,\n  } = useControls(\"Components\", {\n    Materials: folder({\n      Material: folder({\n        dithering: levaDithering,\n        opacity: levaOpacity,\n        side: levaSide,\n        transparent: levaTransparent,\n      }),\n      \"Standard Material\": folder({\n        color: levaColor,\n        emissive: levaEmissive,\n        emissiveIntensity: levaEmissiveIntensity,\n        flatShading: levaFlatShading,\n        metalness: levaMetalness,\n        roughness: levaRoughness,\n        wireframe: levaWireframe,\n      }),\n    }),\n  });\n\n  return (\n    <meshStandardMaterial\n      color={color}\n      dithering={dithering}\n      emissive={emissive}\n      emissiveIntensity={emissiveIntensity}\n      flatShading={flatShading}\n      metalness={metalness}\n      opacity={opacity}\n      roughness={roughness}\n      side={side}\n      transparent={transparent}\n      wireframe={wireframe}\n    />\n  );\n};\n\nexport default MaterialStandard;\n","import { Vector2 } from \"three\";\nimport { useNormalTexture } from \"@react-three/drei\";\nimport { folder, useControls } from \"leva\";\n\nconst MaterialStandardNormalMap = () => {\n  const {\n    normalAnisotropy,\n    normalOffset,\n    normalRepeat,\n    normalScale,\n    normalTextureId,\n  } = useControls(\"Components\", {\n    Textures: folder({\n      \"Normal Map\": folder({\n        normalAnisotropy: { label: \"Anisotropy\", step: 1, value: 8 },\n        normalOffset: {\n          label: \"Offset\",\n          min: -1,\n          max: 1,\n          step: 0.01,\n          value: { x: 0, y: 0 },\n        },\n        normalRepeat: {\n          label: \"Repeat\",\n          min: -2,\n          max: 2,\n          step: 0.01,\n          value: { x: 1, y: 1 },\n        },\n        normalScale: { label: \"Scale\", value: 1 },\n        normalTextureId: {\n          label: \"Texture ID\", // https://github.com/emmelleppi/normal-maps/blob/master/normals.json\n          min: 0,\n          max: 75,\n          step: 1,\n          value: 8,\n        },\n      }),\n    }),\n  });\n  const [normalMap] = useNormalTexture(\n    normalTextureId, // Index or file name, see: https://github.com/emmelleppi/normal-maps/\n    {\n      anisotropy: normalAnisotropy,\n      offset: [normalOffset.x, normalOffset.y],\n      repeat: [normalRepeat.x, normalRepeat.y],\n    }\n  );\n\n  return (\n    <meshStandardMaterial\n      normalMap={normalMap}\n      normalScale={new Vector2(normalScale, normalScale)}\n    />\n  );\n};\n\nexport default MaterialStandardNormalMap;\n","import { folder, useControls } from \"leva\";\n\nimport {\n  levaDithering,\n  levaOpacity,\n  levaSide,\n  levaTransparent,\n} from \"App/libs/LevaSettings/Material\";\nimport {\n  levaColor,\n  levaEmissive,\n  levaEmissiveIntensity,\n  levaWireframe,\n} from \"App/libs/LevaSettings/Material/Toon\";\n\n/**\n * A material implementing toon shading.\n *\n * @see https://threejs.org/docs/index.html?q=toon#api/en/materials/MeshToonMaterial\n */\nconst MaterialToon = () => {\n  const {\n    color,\n    emissive,\n    emissiveIntensity,\n    opacity,\n    side,\n    transparent,\n    wireframe,\n  } = useControls(\"Components\", {\n    Materials: folder({\n      Material: folder({\n        dithering: levaDithering,\n        opacity: levaOpacity,\n        side: levaSide,\n        transparent: levaTransparent,\n      }),\n      \"Toon Material\": folder({\n        color: levaColor,\n        emissive: levaEmissive,\n        emissiveIntensity: levaEmissiveIntensity,\n        wireframe: levaWireframe,\n      }),\n    }),\n  });\n\n  return (\n    <meshToonMaterial\n      color={color}\n      emissive={emissive}\n      emissiveIntensity={emissiveIntensity}\n      opacity={opacity}\n      side={side}\n      transparent={transparent}\n      wireframe={wireframe}\n    />\n  );\n};\n\nexport default MaterialToon;\n","import { folder, useControls } from \"leva\";\n\nimport Basic from \"./Basic\";\nimport Lambert from \"./Lambert\";\nimport Matcap from \"./Matcap\";\nimport Normal from \"./Normal\";\nimport Phong from \"./Phong\";\nimport Physical from \"./Physical\";\nimport PhysicalFrostedGlass from \"./PhysicalFrostedGlass\";\nimport Standard from \"./Standard\";\nimport StandardNormalMap from \"./StandardNormalMap\";\nimport Toon from \"./Toon\";\n\nconst MATERIAL = Object.freeze({\n  Basic: \"Basic\",\n  Lambert: \"Lambert\",\n  Matcap: \"Matcap\",\n  Normal: \"Normal\",\n  Phong: \"Phong\",\n  Physical: \"Physical\",\n  PhysicalFrostedGlass: \"PhysicalFrostedGlass\",\n  Standard: \"Standard\",\n  StandardNormalMap: \"StandardNormalMap\",\n  Toon: \"Toon\",\n});\n\nfunction enableMaterial(name) {\n  let element;\n  switch (name) {\n    case MATERIAL.Basic:\n      element = <Basic />;\n      break;\n    case MATERIAL.Lambert:\n      element = <Lambert />;\n      break;\n    case MATERIAL.MatCap:\n      element = <Matcap />;\n      break;\n    case MATERIAL.Normal:\n      element = <Normal />;\n      break;\n    case MATERIAL.Phong:\n      element = <Phong />;\n      break;\n    case MATERIAL.Physical:\n      element = <Physical />;\n      break;\n    case MATERIAL.PhysicalFrostedGlass:\n      element = <PhysicalFrostedGlass />;\n      break;\n    case MATERIAL.StandardNormalMap:\n      element = <StandardNormalMap />;\n      break;\n    case MATERIAL.Toon:\n      element = <Toon />;\n      break;\n    default:\n      element = <Standard />;\n  }\n  return element;\n}\n\nconst Material = () => {\n  const { materialName } = useControls(\"Components\", {\n    Materials: folder({\n      materialName: {\n        label: \"Material\",\n        options: {\n          \"Basic (Flat, no light)               \": MATERIAL.Basic,\n          \"Matcap (Material Capture, no light)  \": MATERIAL.Matcap,\n          \"Lambert (NPBR, Gouraud)              \": MATERIAL.Lambert,\n          \"Phong (NPBR, Blinn-Phong)            \": MATERIAL.Phong,\n          \"Standard (PBR, Metallic-Roughness)   \": MATERIAL.Standard,\n          \"Standard - Normal Map                \": MATERIAL.StandardNormalMap,\n          \"Physical (PBR, extension of Standard)\": MATERIAL.Physical,\n          \"Physical - Frosted Glass             \":\n            MATERIAL.PhysicalFrostedGlass,\n          \"Toon                                 \": MATERIAL.Toon,\n        },\n        value: MATERIAL.Standard,\n      },\n    }),\n  });\n\n  return enableMaterial(materialName);\n};\n\nexport default Material;\n","export default __webpack_public_path__ + \"static/media/suzanne.f8d5e374.glb\";","import { useGLTF } from \"@react-three/drei\";\n\nimport Material from \"../Material\";\nimport suzanneGlb from \"./assets/suzanne.glb\";\n\nconst SuzanneMaterial = ({ children }) => {\n  const { nodes } = useGLTF(suzanneGlb, true);\n\n  return (\n    <mesh geometry={nodes.Suzanne.geometry}>{children ?? <Material />}</mesh>\n  );\n};\n\nexport default SuzanneMaterial;\n","import MaterialPhysicalFrostedGlass from \"../Material/PhysicalFrostedGlass\";\nimport Painting from \"./Painting\";\nimport Suzanne from \"../Suzanne/CustomMaterial\";\n\nconst Composition = () => {\n  return (\n    <>\n      <Suzanne>\n        <MaterialPhysicalFrostedGlass />\n      </Suzanne>\n      <Painting />\n    </>\n  );\n};\n\nexport default Composition;\n","import { useState } from \"react\";\nimport { animated, useSpring } from \"@react-spring/three\";\n\nconst Cube = (props) => {\n  const colors = [\"#f00\", \"#ff0\", \"#0f0\", \"#0ff\", \"#00f\", \"#f0f\"];\n  const color = colors[Math.floor(Math.random() * colors.length)];\n  const [toggle, setToggle] = useState(true);\n  const { opacity, position } = useSpring({\n    opacity: toggle ? 1 : 0.5,\n    position: toggle ? [0, 0, 0] : getPosition(),\n  });\n\n  function getPosition() {\n    return [4, 4, 0].map((value) => (Math.random() * 2 - 1) * value);\n  }\n\n  return (\n    <animated.mesh\n      {...props}\n      onClick={() => setToggle(!toggle)}\n      position={position}\n    >\n      <boxGeometry args={[1, 1, 1]} />\n      <animated.meshMatcapMaterial\n        color={color}\n        opacity={opacity}\n        transparent={true}\n      />\n    </animated.mesh>\n  );\n};\n\nexport default Cube;\n","import { BlendFunction } from \"postprocessing\";\n\nexport const levaBlendFunctionNormal = {\n  label: \"Blend Function\",\n  hint: \"The blend function of this effect. Default = BlendFunction.NORMAL.\",\n  options: BlendFunction,\n  value: BlendFunction.NORMAL,\n};\n\nexport const levaBlendFunctionMultiply = {\n  label: \"Blend Function\",\n  hint: \"The blend function of this effect. Default = BlendFunction.MULTIPLY.\",\n  options: BlendFunction,\n  value: BlendFunction.MULTIPLY,\n};\n\nexport const levaBlendFunctionOverlay = {\n  label: \"Blend Function\",\n  hint: \"The blend function of this effect. Default = BlendFunction.OVERLAY.\",\n  options: BlendFunction,\n  value: BlendFunction.OVERLAY,\n};\n\nexport const levaBlendFunctionScreen = {\n  label: \"Blend Function\",\n  hint: \"The blend function of this effect. Default = BlendFunction.SCREEN.\",\n  options: BlendFunction,\n  value: BlendFunction.SCREEN,\n};\n\nexport const levaIntensity = {\n  label: \"Intensity\",\n  hint: \"The intensity of the effect. Default = 1.\",\n  max: 9.0,\n  min: 0.0,\n  step: 0.1,\n  value: 1.0,\n};\n","export { levaBlendFunctionScreen as levaBlendFunction } from \"./index\";\n\nexport { levaIntensity } from \"./index\";\n\nexport const levaLuminanceSmoothing = {\n  label: \"Luminance Smoothing\",\n  hint: \"Controls the smoothness of the luminance threshold. Range is [0, 1]. Default = 0.025.\",\n  max: 1.0,\n  min: 0.0,\n  step: 0.005,\n  value: 0.025,\n};\n\nexport const levaLuminanceThreshold = {\n  label: \"Luminance Threshold\",\n  hint: \"The luminance threshold. Raise this value to mask out darker elements in the scene. Range is [0, 1].\",\n  max: 1.0,\n  min: 0.0,\n  step: 0.05,\n  value: 0.9,\n};\n","import { Resizer, KernelSize } from \"postprocessing\";\nimport { Bloom, EffectComposer } from \"@react-three/postprocessing\";\nimport { folder, useControls } from \"leva\";\n\nimport {\n  levaBlendFunction,\n  levaIntensity,\n  levaLuminanceSmoothing,\n  levaLuminanceThreshold,\n} from \"App/libs/LevaSettings/Effects/Bloom\";\n\n/**\n * Bloom effect.\n *\n * @see https://docs.pmnd.rs/react-postprocessing/effects/bloom\n * @see https://vanruesc.github.io/postprocessing/public/docs/class/src/effects/BloomEffect.js~BloomEffect.html\n */\nconst EffectsBloom = () => {\n  const { blendFunction, intensity, luminanceSmoothing, luminanceThreshold } =\n    useControls(\"General\", {\n      \"Effects Composer\": folder({\n        \"Bloom Effect\": folder({\n          blendFunction: levaBlendFunction,\n          intensity: levaIntensity,\n          luminanceSmoothing: levaLuminanceSmoothing,\n          luminanceThreshold: levaLuminanceThreshold,\n        }),\n      }),\n    });\n\n  return (\n    <EffectComposer>\n      <Bloom\n        blendFunction={blendFunction}\n        height={Resizer.AUTO_SIZE}\n        intensity={intensity}\n        kernelSize={KernelSize.LARGE}\n        luminanceSmoothing={luminanceSmoothing}\n        luminanceThreshold={luminanceThreshold}\n        width={Resizer.AUTO_SIZE}\n      />\n    </EffectComposer>\n  );\n};\n\nexport default EffectsBloom;\n","export { levaBlendFunctionScreen as levaBlendFunction } from \"./index\";\n\nexport const levaBrightness = {\n  label: \"Brightness\",\n  hint: \"Scene brightness shift. Default = 0.\",\n  max: 1.0,\n  min: -1.0,\n  step: 0.01,\n  value: 0.0,\n};\n\nexport const levaContrast = {\n  label: \"Contrast\",\n  hint: \"Scene contrast shift. Default = 0.\",\n  max: 1.0,\n  min: -1.0,\n  step: 0.01,\n  value: 0.0,\n};\n","import {\n  BrightnessContrast,\n  EffectComposer,\n} from \"@react-three/postprocessing\";\nimport { folder, useControls } from \"leva\";\n\nimport {\n  levaBlendFunction,\n  levaBrightness,\n  levaContrast,\n} from \"App/libs/LevaSettings/Effects/BrightnessContrast\";\n\n/**\n * Brightness/contrast effect.\n *\n * @see https://docs.pmnd.rs/react-postprocessing/effects/brightness-contrast\n * @see https://vanruesc.github.io/postprocessing/public/docs/class/src/effects/BrightnessContrastEffect.js~BrightnessContrastEffect.html\n */\nconst EffectsBrightnessContrast = () => {\n  const { blendFunction, brightness, contrast } = useControls(\"General\", {\n    \"Effects Composer\": folder({\n      \"Brightness/Contrast Effect\": folder({\n        blendFunction: levaBlendFunction,\n        brightness: levaBrightness,\n        contrast: levaContrast,\n      }),\n    }),\n  });\n\n  return (\n    <EffectComposer>\n      <BrightnessContrast\n        blendFunction={blendFunction}\n        brightness={brightness}\n        contrast={contrast}\n      />\n    </EffectComposer>\n  );\n};\n\nexport default EffectsBrightnessContrast;\n","export { levaBlendFunctionNormal as levaBlendFunction } from \"./index\";\n\nexport const levaOffset = {\n  hint: \"The color offset. Default = [0, 0]\",\n  label: \"Offset\",\n  max: 0.01,\n  min: -0.01,\n  step: 0.001,\n  value: { x: 0.0, y: 0.0 },\n};\n","import {\n  ChromaticAberration,\n  EffectComposer,\n} from \"@react-three/postprocessing\";\nimport { folder, useControls } from \"leva\";\n\nimport {\n  levaBlendFunction,\n  levaOffset,\n} from \"App/libs/LevaSettings/Effects/ChromaticAberration\";\n\n/**\n * Chromatic aberration effect.\n *\n * @see https://docs.pmnd.rs/react-postprocessing/effects/chromatic-aberration\n * @see https://vanruesc.github.io/postprocessing/public/docs/class/src/effects/ChromaticAberrationEffect.js~ChromaticAberrationEffect.html\n */\nconst EffectsChromaticAberration = () => {\n  const { blendFunction, offset } = useControls(\"General\", {\n    \"Effects Composer\": folder({\n      \"Chromatic Aberration Effect\": folder({\n        blendFunction: levaBlendFunction,\n        offset: levaOffset,\n      }),\n    }),\n  });\n\n  return (\n    <EffectComposer>\n      <ChromaticAberration\n        blendFunction={blendFunction}\n        offset={[offset.x, offset.y]}\n      />\n    </EffectComposer>\n  );\n};\n\nexport default EffectsChromaticAberration;\n","import { ColorAverage, EffectComposer } from \"@react-three/postprocessing\";\nimport { folder, useControls } from \"leva\";\n\nimport { levaBlendFunction } from \"App/libs/LevaSettings/Effects/ColorAverage\";\n\n/**\n * Color average effect.\n *\n * @see https://docs.pmnd.rs/react-postprocessing/effects/color-average\n * @see https://vanruesc.github.io/postprocessing/public/docs/class/src/effects/ColorAverageEffect.js~ColorAverageEffect.html\n */\nconst EffectsColorAverage = () => {\n  const { blendFunction } = useControls(\"General\", {\n    \"Effects Composer\": folder({\n      \"Color Average Effect\": folder({\n        blendFunction: levaBlendFunction,\n      }),\n    }),\n  });\n\n  return (\n    <EffectComposer>\n      <ColorAverage blendFunction={blendFunction} />\n    </EffectComposer>\n  );\n};\n\nexport default EffectsColorAverage;\n","export const levaBits = {\n  label: \"Bits\",\n  hint: \"The color bit depth. Default = 16.\",\n  max: 24,\n  min: 0,\n  step: 1,\n  value: 16,\n};\n\nexport { levaBlendFunctionNormal as levaBlendFunction } from \"./index\";\n","import { ColorDepth, EffectComposer } from \"@react-three/postprocessing\";\nimport { folder, useControls } from \"leva\";\n\nimport {\n  levaBits,\n  levaBlendFunction,\n} from \"App/libs/LevaSettings/Effects/ColorDepth\";\n\n/**\n * Color depth effect.\n *\n * @see https://vanruesc.github.io/postprocessing/public/docs/class/src/effects/ColorDepthEffect.js~ColorDepthEffect.html\n */\nconst EffectsColorDepth = () => {\n  const { bits, blendFunction } = useControls(\"General\", {\n    \"Effects Composer\": folder({\n      \"Color Depth Effect\": folder({\n        bits: levaBits,\n        blendFunction: levaBlendFunction,\n      }),\n    }),\n  });\n\n  return (\n    <EffectComposer>\n      <ColorDepth bits={bits} blendFunction={blendFunction} />\n    </EffectComposer>\n  );\n};\n\nexport default EffectsColorDepth;\n","export { levaBlendFunctionNormal as levaBlendFunction } from \"./index\";\n\nexport const levaBokehScale = {\n  label: \"Bokeh Scale\",\n  hint: \"The scale of the bokeh blur.\",\n  max: 16.0,\n  min: 0.0,\n  step: 0.1,\n  value: 1.0,\n};\n\nexport const levaFocalLength = {\n  label: \"Focal Length\",\n  hint: \"The focal length. Range = [0.0, 1.0]\",\n  max: 1.0,\n  min: 0.0,\n  step: 0.01,\n  value: 0.1,\n};\n\nexport const levaFocusDistance = {\n  label: \"Focus Distance\",\n  hint: \"The normalized focus distance. Range = [0.0, 1.0].\",\n  max: 1.0,\n  min: 0.0,\n  step: 0.01,\n  value: 0.0,\n};\n","import { Resizer } from \"postprocessing\";\nimport { DepthOfField, EffectComposer } from \"@react-three/postprocessing\";\nimport { folder, useControls } from \"leva\";\n\nimport {\n  levaBlendFunction,\n  levaBokehScale,\n  levaFocalLength,\n  levaFocusDistance,\n} from \"App/libs/LevaSettings/Effects/DepthOfField\";\n\n/**\n * Depth of Field effect.\n *\n * @see https://docs.pmnd.rs/react-postprocessing/effects/depth-of-field\n * @see https://vanruesc.github.io/postprocessing/public/docs/class/src/effects/DepthOfFieldEffect.js~DepthOfFieldEffect.html\n */\nconst EffectsDepthOfField = () => {\n  const { blendFunction, bokehScale, focalLength, focusDistance } = useControls(\n    \"General\",\n    {\n      \"Effects Composer\": folder({\n        \"Bloom Effect\": folder({\n          blendFunction: levaBlendFunction,\n          bokehScale: levaBokehScale,\n          focalLength: levaFocalLength,\n          focusDistance: levaFocusDistance,\n        }),\n      }),\n    }\n  );\n\n  return (\n    <EffectComposer>\n      <DepthOfField\n        blendFunction={blendFunction}\n        bokehScale={bokehScale}\n        focalLength={focalLength}\n        focusDistance={focusDistance}\n        height={Resizer.AUTO_SIZE}\n        width={Resizer.AUTO_SIZE}\n      />\n    </EffectComposer>\n  );\n};\n\nexport default EffectsDepthOfField;\n","export const levaAngle = {\n  label: \"Angle\",\n  hint: \"The angle of the dot pattern.\",\n  max: 3.0,\n  min: 0.0,\n  step: 0.1,\n  value: 1.57,\n};\n\nexport { levaBlendFunctionNormal as levaBlendFunction } from \"./index\";\n\nexport const levaScale = {\n  label: \"Scale\",\n  hint: \"The scale of the dot pattern.\",\n  max: 3.0,\n  min: 0.0,\n  step: 0.01,\n  value: 1.57,\n};\n","import { DotScreen, EffectComposer } from \"@react-three/postprocessing\";\nimport { folder, useControls } from \"leva\";\n\nimport {\n  levaAngle,\n  levaBlendFunction,\n  levaScale,\n} from \"App/libs/LevaSettings/Effects/DotScreen\";\n\n/**\n * Dot screen effect.\n *\n * @see https://docs.pmnd.rs/react-postprocessing/effects/dot-screen\n * @see https://vanruesc.github.io/postprocessing/public/docs/class/src/effects/DotScreenEffect.js~DotScreenEffect.html\n */\nconst EffectsDotScreen = () => {\n  const { angle, blendFunction, scale } = useControls(\"General\", {\n    \"Effects Composer\": folder({\n      \"Dot Screen Effect\": folder({\n        angle: levaAngle,\n        blendFunction: levaBlendFunction,\n        scale: levaScale,\n      }),\n    }),\n  });\n\n  return (\n    <EffectComposer>\n      <DotScreen angle={angle} blendFunction={blendFunction} scale={scale} />\n    </EffectComposer>\n  );\n};\n\nexport default EffectsDotScreen;\n","import { GlitchMode } from \"postprocessing\";\n\nexport const levaActive = {\n  label: \"Active\",\n  value: true,\n};\n\nexport const levaColumns = {\n  label: \"Columns\",\n  hint: \"The scale of the blocky glitch columns.\",\n  max: 5.0,\n  min: 0.0,\n  step: 0.1,\n  value: 0.05,\n};\n\nexport const levaDelay = {\n  label: \"Delay\",\n  hint: \"The minimum and maximum delay between glitch activations in seconds.\",\n  max: 5.0,\n  min: 0.0,\n  step: 0.1,\n  value: [1.5, 3.5],\n};\n\nexport const levaDtSize = {\n  label: \"dt Size\",\n  hint: \"The size of the generated noise map. Will be ignored if a perturbation map is provided.\",\n  max: 256,\n  min: 0,\n  step: 1,\n  value: 64,\n};\n\nexport const levaDuration = {\n  label: \"Duration\",\n  hint: \"The minimum and maximum duration of a glitch in seconds.\",\n  max: 5.0,\n  min: 0.0,\n  step: 0.1,\n  value: [0.6, 1.0],\n};\n\nexport const levaMode = {\n  label: \"Glitch Mode\",\n  options: GlitchMode,\n  value: GlitchMode.SPORADIC,\n};\n\nexport const levaPerturbationMap = {\n  label: \"PerturbationMap\",\n  hint: \"A perturbation map. If none is provided, a noise texture will be created.\",\n  value: null,\n};\n\nexport const levaRatio = {\n  label: \"Ratio\",\n  hint: \"Threshold for strong glitches, 0 - no weak glitches, 1 - no strong glitches.\",\n  max: 1.0,\n  min: 0.0,\n  step: 0.05,\n  value: 0.85,\n};\n\nexport const levaStrength = {\n  label: \"Strength\",\n  hint: \"The strength of weak and strong glitches.\",\n  max: 5.0,\n  min: 0.0,\n  step: 0.1,\n  value: [0.3, 1.0],\n};\n","import { EffectComposer, Glitch } from \"@react-three/postprocessing\";\nimport { folder, useControls } from \"leva\";\n\nimport {\n  levaActive,\n  levaColumns,\n  levaDelay,\n  levaDtSize,\n  levaDuration,\n  levaMode,\n  levaRatio,\n  levaStrength,\n} from \"App/libs/LevaSettings/Effects/Glitch\";\n\n/**\n * Glitch effect.\n *\n * @see https://docs.pmnd.rs/react-postprocessing/effects/glitch\n * @see https://vanruesc.github.io/postprocessing/public/docs/class/src/effects/GlitchEffect.js~GlitchEffect.html\n */\nconst EffectsGlitch = () => {\n  const {\n    active,\n\n    columns,\n    delay,\n    dtSize,\n    duration,\n    mode,\n    ratio,\n    strength,\n  } = useControls(\"General\", {\n    \"Effects Composer\": folder({\n      \"Glitch Effect\": folder({\n        active: levaActive,\n        columns: levaColumns,\n        delay: levaDelay,\n        dtSize: levaDtSize,\n        duration: levaDuration,\n        mode: levaMode,\n        ratio: levaRatio,\n        strength: levaStrength,\n      }),\n    }),\n  });\n\n  return (\n    <EffectComposer>\n      <Glitch\n        active={active}\n        columns={columns}\n        delay={delay}\n        dtSize={dtSize}\n        duration={duration}\n        mode={mode}\n        ratio={ratio}\n        strength={strength}\n      />\n    </EffectComposer>\n  );\n};\n\nexport default EffectsGlitch;\n","export { levaBlendFunctionOverlay as levaBlendFunction } from \"./index\";\n\nexport const levaLineWidth = {\n  label: \"Line Width\",\n  hint: \"The line width of the grid pattern.\",\n  max: 5.0,\n  min: 0.0,\n  step: 0.1,\n  value: 0.0,\n};\nexport const levaScale = {\n  label: \"Scale\",\n  hint: \"The scale of the grid pattern.\",\n  max: 5.0,\n  min: 0.5,\n  step: 0.05,\n  value: 1.0,\n};\n","import { EffectComposer, Grid } from \"@react-three/postprocessing\";\nimport { folder, useControls } from \"leva\";\n\nimport {\n  levaBlendFunction,\n  levaLineWidth,\n  levaScale,\n} from \"App/libs/LevaSettings/Effects/Grid\";\n\n/**\n * Grid effect.\n *\n * @see https://docs.pmnd.rs/react-postprocessing/effects/grid\n * @see https://vanruesc.github.io/postprocessing/public/docs/class/src/effects/GridEffect.js~GridEffect.html\n */\nconst EffectsGrid = () => {\n  const { blendFunction, lineWidth, scale } = useControls(\"General\", {\n    \"Effects Composer\": folder({\n      \"Grid Effect\": folder({\n        blendFunction: levaBlendFunction,\n        lineWidth: levaLineWidth,\n        scale: levaScale,\n      }),\n    }),\n  });\n\n  return (\n    <EffectComposer>\n      <Grid blendFunction={blendFunction} lineWidth={lineWidth} scale={scale} />\n    </EffectComposer>\n  );\n};\n\nexport default EffectsGrid;\n","export { levaBlendFunctionNormal as levaBlendFunction } from \"./index\";\n\nexport const levaHue = {\n  label: \"Hue\",\n  hint: \"The hue in degrees (converted to radians).\",\n  max: 180,\n  min: -180,\n  step: 1,\n  value: 0,\n};\n\nexport const levaSaturation = {\n  label: \"Saturation\",\n  hint: \"The saturation factor, ranging from -1 to 1, where 0 means no change.\",\n  max: 1.0,\n  min: -1.0,\n  step: 0.01,\n  value: 0.0,\n};\n","import { MathUtils } from \"three\";\nimport { EffectComposer, HueSaturation } from \"@react-three/postprocessing\";\nimport { folder, useControls } from \"leva\";\n\nimport {\n  levaBlendFunction,\n  levaHue,\n  levaSaturation,\n} from \"App/libs/LevaSettings/Effects/HueSaturation\";\n\n/**\n * Hue/saturation effect.\n *\n * @see https://docs.pmnd.rs/react-postprocessing/effects/hue-saturation\n * @see https://vanruesc.github.io/postprocessing/public/docs/class/src/effects/HueSaturationEffect.js~HueSaturationEffect.html\n */\nconst EffectsHueSaturation = () => {\n  const { blendFunction, hue, saturation } = useControls(\"General\", {\n    \"Effects Composer\": folder({\n      \"Hue/Saturation Effect\": folder({\n        blendFunction: levaBlendFunction,\n        hue: levaHue,\n        saturation: levaSaturation,\n      }),\n    }),\n  });\n\n  return (\n    <EffectComposer>\n      <HueSaturation\n        blendFunction={blendFunction}\n        hue={MathUtils.degToRad(hue)}\n        saturation={saturation}\n      />\n    </EffectComposer>\n  );\n};\n\nexport default EffectsHueSaturation;\n","export { levaBlendFunctionScreen as levaBlendFunction } from \"./index\";\n\nexport const levaPremultiply = {\n  label: \"Luminance Smoothing\",\n  hint: \"Whether the noise should be multiplied with the input color.\",\n  value: false,\n};\n","import { EffectComposer, Noise } from \"@react-three/postprocessing\";\nimport { folder, useControls } from \"leva\";\n\nimport {\n  levaBlendFunction,\n  levaPremultiply,\n} from \"App/libs/LevaSettings/Effects/Noise\";\n\n/**\n * Noise effect.\n *\n * @see https://vanruesc.github.io/postprocessing/public/docs/class/src/effects/NoiseEffect.js~NoiseEffect.html\n */\nconst EffectsNoise = () => {\n  const { blendFunction, premultiply } = useControls(\"General\", {\n    \"Effects Composer\": folder({\n      \"Noise Effect\": folder({\n        blendFunction: levaBlendFunction,\n        premultiply: levaPremultiply,\n      }),\n    }),\n  });\n\n  return (\n    <EffectComposer>\n      <Noise blendFunction={blendFunction} premultiply={premultiply} />\n    </EffectComposer>\n  );\n};\n\nexport default EffectsNoise;\n","export const levaGranularity = {\n  label: \"Granularity\",\n  hint: \"The pixel granularity. Default = 30.0.\",\n  max: 99,\n  min: 0,\n  step: 1,\n  value: 30,\n};\n","import { EffectComposer, Pixelation } from \"@react-three/postprocessing\";\nimport { folder, useControls } from \"leva\";\n\nimport { levaGranularity } from \"App/libs/LevaSettings/Effects/Pixelation\";\n\n/**\n * Pixelation effect.\n *\n * @see https://docs.pmnd.rs/react-postprocessing/effects/pixelation\n * @see https://vanruesc.github.io/postprocessing/public/docs/class/src/effects/PixelationEffect.js~PixelationEffect.html\n */\nconst EffectsPixelation = () => {\n  const { granularity } = useControls(\"General\", {\n    \"Effects Composer\": folder({\n      \"Pixelation Effect\": folder({\n        granularity: levaGranularity,\n      }),\n    }),\n  });\n\n  return (\n    <EffectComposer>\n      <Pixelation granularity={granularity} />\n    </EffectComposer>\n  );\n};\n\nexport default EffectsPixelation;\n","import { EdgeDetectionMode, SMAAPreset } from \"postprocessing\";\n\nexport const levaEdgeDetectionMode = {\n  label: \"Edge Detection Mode\",\n  hint: \"The edge detection mode. Default = EdgeDetectionMode.COLOR.\",\n  options: EdgeDetectionMode,\n  value: EdgeDetectionMode.COLOR,\n};\n\nexport const levaPreset = {\n  label: \"Preset\",\n  hint: \"An SMAA quality preset. Default = SMAAPreset.HIGH.\",\n  options: SMAAPreset,\n  value: SMAAPreset.HIGH,\n};\n","import { Suspense } from \"react\";\nimport { EffectComposer, SMAA } from \"@react-three/postprocessing\";\nimport { folder, useControls } from \"leva\";\n\nimport {\n  levaEdgeDetectionMode,\n  levaPreset,\n} from \"App/libs/LevaSettings/Effects/SMAA\";\n\n/**\n * SMAA effect.\n *\n * @see https://docs.pmnd.rs/react-postprocessing/effects/smaa\n * @see https://vanruesc.github.io/postprocessing/public/docs/class/src/effects/SMAAEffect.js~SMAAEffect.html\n */\nconst EffectsSMAA = () => {\n  const { edgeDetectionMode, preset } = useControls(\"General\", {\n    \"Effects Composer\": folder({\n      \"Subpixel Morphological Antialiasing (SMAA) Effect\": folder({\n        edgeDetectionMode: levaEdgeDetectionMode,\n        preset: levaPreset,\n      }),\n    }),\n  });\n\n  return (\n    <Suspense fallback={null}>\n      <EffectComposer multisampling={0}>\n        <SMAA edgeDetectionMode={edgeDetectionMode} preset={preset} />\n      </EffectComposer>\n    </Suspense>\n  );\n};\n\nexport default EffectsSMAA;\n","export { levaBlendFunctionOverlay as levaBlendFunction } from \"./index\";\n\nexport const levaDensity = {\n  label: \"Density\",\n  hint: \"The scanline density. Default = 1.25.\",\n  max: 9.0,\n  min: 0.0,\n  step: 0.01,\n  value: 1.25,\n};\n","import { EffectComposer, Scanline } from \"@react-three/postprocessing\";\nimport { folder, useControls } from \"leva\";\n\nimport {\n  levaBlendFunction,\n  levaDensity,\n} from \"App/libs/LevaSettings/Effects/Scanline\";\n\n/**\n * Scanline effect.\n *\n * @see https://docs.pmnd.rs/react-postprocessing/effects/scanline\n * @see https://vanruesc.github.io/postprocessing/public/docs/class/src/effects/ScanlineEffect.js~ScanlineEffect.html\n */\nconst EffectsScanline = () => {\n  const { density, blendFunction } = useControls(\"General\", {\n    \"Effects Composer\": folder({\n      \"Scanline Effect\": folder({\n        blendFunction: levaBlendFunction,\n        density: levaDensity,\n      }),\n    }),\n  });\n\n  return (\n    <EffectComposer>\n      <Scanline blendFunction={blendFunction} density={density} />\n    </EffectComposer>\n  );\n};\n\nexport default EffectsScanline;\n","import { EffectComposer, Sepia } from \"@react-three/postprocessing\";\nimport { folder, useControls } from \"leva\";\n\nimport {\n  levaBlendFunction,\n  levaIntensity,\n} from \"App/libs/LevaSettings/Effects/Sepia\";\n\n/**\n * Sepia effect.\n *\n * @see https://docs.pmnd.rs/react-postprocessing/effects/sepia\n * @see https://vanruesc.github.io/postprocessing/public/docs/class/src/effects/SepiaEffect.js~SepiaEffect.html\n */\nconst EffectsSepia = () => {\n  const { blendFunction, intensity } = useControls(\"General\", {\n    \"Effects Composer\": folder({\n      \"Sepia Effect\": folder({\n        blendFunction: levaBlendFunction,\n        intensity: levaIntensity,\n      }),\n    }),\n  });\n\n  return (\n    <EffectComposer>\n      <Sepia blendFunction={blendFunction} intensity={intensity} />\n    </EffectComposer>\n  );\n};\n\nexport default EffectsSepia;\n","export { levaBlendFunctionNormal as levaBlendFunction } from \"./index\";\n\nexport const levaAdaptationRate = {\n  label: \"Adaption Rate\",\n  hint: \"The luminance adaptation rate. Default = 1.0.\",\n  max: 9.9,\n  min: 0.0,\n  step: 0.1,\n  value: 1.0,\n};\n\nexport const levaAverageLuminance = {\n  label: \"Average Luminance\",\n  hint: \"The average luminance. Used for the non-adaptive Reinhard operator. Default = 1.0.\",\n  max: 9.9,\n  min: 0.0,\n  step: 0.1,\n  value: 1.0,\n};\n\nexport const levaMiddleGrey = {\n  label: \"Middle Grey\",\n  hint: \"The middle grey factor. Default = 0.6.\",\n  max: 2.0,\n  min: 0.0,\n  step: 0.01,\n  value: 0.6,\n};\n\nexport const levaResolution = {\n  label: \"Resolution\",\n  hint: \"The resolution of the luminance texture. Must be a power of two. Default = 256.\",\n  options: [2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048],\n  value: 256,\n};\n","import { EffectComposer, ToneMapping } from \"@react-three/postprocessing\";\nimport { folder, useControls } from \"leva\";\n\nimport {\n  levaAdaptationRate,\n  levaAverageLuminance,\n  levaBlendFunction,\n  levaMiddleGrey,\n  levaResolution,\n} from \"App/libs/LevaSettings/Effects/ToneMapping\";\n\n/**\n * ToneMapping effect.\n *\n * @see https://docs.pmnd.rs/react-postprocessing/effects/tone-mapping\n * @see https://vanruesc.github.io/postprocessing/public/docs/class/src/effects/ToneMappingEffect.js~ToneMappingEffect.html\n */\nconst EffectsToneMapping = () => {\n  const {\n    adaptationRate,\n    averageLuminance,\n    blendFunction,\n    middleGrey,\n    resolution,\n  } = useControls(\"General\", {\n    \"Effects Composer\": folder({\n      \"ToneMapping Effect\": folder({\n        adaptationRate: levaAdaptationRate,\n        averageLuminance: levaAverageLuminance,\n        blendFunction: levaBlendFunction,\n        middleGrey: levaMiddleGrey,\n        resolution: levaResolution,\n      }),\n    }),\n  });\n\n  return (\n    <EffectComposer>\n      <ToneMapping\n        adaptationRate={adaptationRate}\n        averageLuminance={averageLuminance}\n        blendFunction={blendFunction}\n        middleGrey={middleGrey}\n        resolution={resolution}\n      />\n    </EffectComposer>\n  );\n};\n\nexport default EffectsToneMapping;\n","export { levaBlendFunctionNormal as levaBlendFunction } from \"./index\";\n\nexport const levaEskil = {\n  label: \"Eskil\",\n  hint: \"Enables Eskil's vignette technique. Default = false.\",\n  value: false,\n};\n\nexport const levaDarkness = {\n  label: \"Darkness\",\n  hint: \"The vignette darkness. Default = 0.5.\",\n  max: 1.0,\n  min: 0.0,\n  step: 0.01,\n  value: 0.5,\n};\n\nexport const levaOffset = {\n  label: \"Offset\",\n  hint: \"The vignette offset. Default = 0.5.\",\n  max: 1.0,\n  min: 0.0,\n  step: 0.01,\n  value: 0.5,\n};\n","import { EffectComposer, Vignette } from \"@react-three/postprocessing\";\nimport { folder, useControls } from \"leva\";\n\nimport {\n  levaBlendFunction,\n  levaDarkness,\n  levaEskil,\n  levaOffset,\n} from \"App/libs/LevaSettings/Effects/Vignette\";\n\n/**\n * Vignette effect.\n *\n * @see https://docs.pmnd.rs/react-postprocessing/effects/vignette\n * @see https://vanruesc.github.io/postprocessing/public/docs/class/src/effects/VignetteEffect.js~VignetteEffect.html\n */\nconst EffectsVignette = () => {\n  const { blendFunction, darkness, eskil, offset } = useControls(\"General\", {\n    \"Effects Composer\": folder({\n      \"Vignette Effect\": folder({\n        blendFunction: levaBlendFunction,\n        darkness: levaDarkness,\n        eskil: levaEskil,\n        offset: levaOffset,\n      }),\n    }),\n  });\n\n  return (\n    <EffectComposer>\n      <Vignette\n        blendFunction={blendFunction}\n        darkness={darkness}\n        eskil={eskil}\n        offset={offset}\n      />\n    </EffectComposer>\n  );\n};\n\nexport default EffectsVignette;\n","import { folder, useControls } from \"leva\";\n\nimport Bloom from \"./Bloom\";\nimport BrightnessContrast from \"./BrightnessContrast\";\nimport ChromaticAberration from \"./ChromaticAberration\";\nimport ColorAverage from \"./ColorAverage\";\nimport ColorDepth from \"./ColorDepth\";\nimport DepthOfField from \"./DepthOfField\";\nimport DotScreen from \"./DotScreen\";\nimport Glitch from \"./Glitch\";\nimport Grid from \"./Grid\";\nimport HueSaturation from \"./HueSaturation\";\nimport Noise from \"./Noise\";\nimport Pixelation from \"./Pixelation\";\nimport SMAA from \"./SMAA\";\nimport Scanline from \"./Scanline\";\nimport Sepia from \"./Sepia\";\nimport ToneMapping from \"./ToneMapping\";\nimport Vignette from \"./Vignette\";\n\nconst EFFECT = Object.freeze({\n  None: \"None\",\n  Bloom: \"Bloom\",\n  BrightnessContrast: \"BrightnessContrast\",\n  ChromaticAberration: \"ChromaticAberration\",\n  ColorAverage: \"ColorAverage\",\n  ColorDepth: \"ColorDepth\",\n  DepthOfField: \"DepthOfField\",\n  DotScreen: \"DotScreen\",\n  Glitch: \"Glitch\",\n  Grid: \"Grid\",\n  HueSaturation: \"HueSaturation\",\n  Noise: \"Noise\",\n  Pixelation: \"Pixelation\",\n  SMAA: \"SMAA\",\n  Scanline: \"Scanline\",\n  Sepia: \"Sepia\",\n  ToneMapping: \"ToneMapping\",\n  Vignette: \"Vignette\",\n});\n\nconst Effects = () => {\n  const { useEffect } = useControls(\"General\", {\n    \"Effects Composer\": folder({\n      useEffect: {\n        label: \"Effect\",\n        options: EFFECT,\n        value: EFFECT.None,\n      },\n    }),\n  });\n\n  function enableEffect(name, element) {\n    return useEffect === name ? element : null;\n  }\n\n  return (\n    <>\n      {enableEffect(EFFECT.Bloom, <Bloom />)}\n      {enableEffect(EFFECT.BrightnessContrast, <BrightnessContrast />)}\n      {enableEffect(EFFECT.ChromaticAberration, <ChromaticAberration />)}\n      {enableEffect(EFFECT.ColorAverage, <ColorAverage />)}\n      {enableEffect(EFFECT.ColorDepth, <ColorDepth />)}\n      {enableEffect(EFFECT.DepthOfField, <DepthOfField />)}\n      {enableEffect(EFFECT.DotScreen, <DotScreen />)}\n      {enableEffect(EFFECT.Glitch, <Glitch />)}\n      {enableEffect(EFFECT.Grid, <Grid />)}\n      {enableEffect(EFFECT.HueSaturation, <HueSaturation />)}\n      {enableEffect(EFFECT.Noise, <Noise />)}\n      {enableEffect(EFFECT.Pixelation, <Pixelation />)}\n      {enableEffect(EFFECT.SMAA, <SMAA />)}\n      {enableEffect(EFFECT.Scanline, <Scanline />)}\n      {enableEffect(EFFECT.Sepia, <Sepia />)}\n      {enableEffect(EFFECT.ToneMapping, <ToneMapping />)}\n      {enableEffect(EFFECT.Vignette, <Vignette />)}\n    </>\n  );\n};\n\nexport default Effects;\n","import { MathUtils } from \"three\";\nimport { Plane } from \"@react-three/drei\";\n\nconst Face = (props) => {\n  return (\n    <Plane\n      args={[10, 10]}\n      rotation={[MathUtils.degToRad(-90), 0, 0]}\n      {...props}\n    >\n      <meshStandardMaterial />\n    </Plane>\n  );\n};\n\nexport default Face;\n","// @todo Rotate gauge based on range, in stead of compensating rotation in calculation.\nimport { useRef } from \"react\";\nimport { MathUtils } from \"three\";\nimport { useFrame } from \"@react-three/fiber\";\nimport { Box, Circle, Cone, Cylinder } from \"@react-three/drei\";\n\nconst ANGLE_RANGE = 270;\nconst NEEDLE_STEP = {\n  DOWN: -250,\n  UP: 60,\n};\n\nconst Gauge = (props) => {\n  const TICK_MARKS = [\n    { color: \"green\", label: \"0\", ref: useRef(), value: 0 },\n    { color: \"white\", label: \"10\", ref: useRef(), value: 1000 },\n    { color: \"white\", label: \"20\", ref: useRef(), value: 2000 },\n    { color: \"white\", label: \"30\", ref: useRef(), value: 3000 },\n    { color: \"white\", label: \"40\", ref: useRef(), value: 4000 },\n    { color: \"white\", label: \"50\", ref: useRef(), value: 5000 },\n    { color: \"orange\", label: \"60\", ref: useRef(), value: 6000 },\n    { color: \"red\", label: \"70\", ref: useRef(), value: 7000 },\n    { color: \"red\", label: \"80\", ref: useRef(), value: 8000 },\n  ];\n  const angleStep = ANGLE_RANGE / (TICK_MARKS.length - 1);\n  const angleStart = MathUtils.degToRad(-(90 + (360 - ANGLE_RANGE) / 2));\n  const valueRange = (TICK_MARKS.length - 1) * 1000;\n  const valueStep = ANGLE_RANGE / valueRange;\n  const needleRef = useRef();\n  let needleAngle = 0;\n  let needleValue = 0;\n  let needleStep = NEEDLE_STEP.UP;\n\n  useFrame(() => {\n    if (needleValue <= 0) {\n      needleStep = NEEDLE_STEP.UP;\n    } else if (valueRange <= needleValue) {\n      needleStep = NEEDLE_STEP.DOWN;\n    }\n    needleValue += needleStep;\n    needleAngle = MathUtils.degToRad(-(valueStep * needleValue));\n    needleRef.current.rotation.z = needleAngle;\n\n    TICK_MARKS.forEach((tickMark) => {\n      tickMark.ref.current.children[0].material.color.setColorName(\n        tickMark.value <= needleValue ? \"blue\" : tickMark.color\n      );\n    });\n  });\n\n  return (\n    <group {...props} rotation={[0, 0, angleStart]}>\n      <Circle args={[1.2, 62]} position={[0, 0, 0]} receiveShadow={true}>\n        <meshStandardMaterial opacity={0.25} transparent={true} />\n      </Circle>\n      {TICK_MARKS.map((tickMark, index) => {\n        return (\n          <group\n            key={index}\n            ref={tickMark.ref}\n            rotation={[0, 0, -angleStep * index].map((degrees) =>\n              MathUtils.degToRad(degrees)\n            )}\n          >\n            <Box args={[0.25, 0.05, 0.02]} position={[1, 0, 0.01]}>\n              <meshStandardMaterial\n                color={tickMark.color}\n                metalness={0.1}\n                opacity={0.5}\n                roughness={0.6}\n                transparent={true}\n              />\n            </Box>\n          </group>\n        );\n      })}\n\n      <group position={[0, 0, 0.05]}>\n        <group ref={needleRef}>\n          <group\n            rotation={[0, 0, -90].map((degrees) => MathUtils.degToRad(degrees))}\n          >\n            <Cone args={[0.03, 1, 4]} castShadow={true} position={[0, 0.5, 0]}>\n              <meshStandardMaterial\n                color=\"orange\"\n                metalness={0.1}\n                roughness={0.6}\n              />\n            </Cone>\n          </group>\n        </group>\n        <Cylinder\n          args={[0.1, 0.05, 0.1, 36]}\n          castShadow={true}\n          rotation={[-90, 0, 0].map((degrees) => MathUtils.degToRad(degrees))}\n        >\n          <meshStandardMaterial />\n        </Cylinder>\n      </group>\n    </group>\n  );\n};\n\nexport default Gauge;\n","export const levaRadius = {\n  label: \"Radius\",\n  hint: \"Radius of the circle, default = 1.\",\n  max: 3.0,\n  min: 0.1,\n  step: 0.1,\n  value: 1.0,\n};\n\nexport const levaSegments = {\n  label: \"Segments\",\n  hint: \"Number of segments (triangles), minimum = 3, default = 8.\",\n  max: 64,\n  min: 3,\n  step: 1,\n  value: 8,\n};\n\nexport const levaΘLength = {\n  label: \"Θ Length\",\n  hint: \"The central angle, often called theta, of the circular sector. The default = 2*Math.PI, which makes for a complete circle.\",\n  max: 360.0,\n  min: -360.0,\n  step: 0.1,\n  value: 360.0,\n};\n\nexport const levaΘStart = {\n  label: \"Θ Start\",\n  hint: \"Start angle for first segment, default = 0 (three o'clock position).\",\n  max: 360.0,\n  min: -360.0,\n  step: 0.1,\n  value: 0.0,\n};\n","import { MathUtils } from \"three\";\nimport { Circle } from \"@react-three/drei\";\nimport { folder, useControls } from \"leva\";\n\nimport Material from \"../Material\";\n\nimport {\n  levaRadius,\n  levaSegments,\n  levaΘLength,\n  levaΘStart,\n} from \"App/libs/LevaSettings/Geometry/Circle\";\n\n/**\n * Circle geometry.\n *\n * @see https://threejs.org/docs/index.html#api/en/geometries/CircleGeometry\n */\nconst Geometry2DCircle = ({ children }) => {\n  const { radius, segments, θLength, θStart } = useControls(\"Components\", {\n    Geometry: folder({\n      Arguments: folder({\n        \"XY Plane\": folder({\n          radius: levaRadius,\n          segments: levaSegments,\n          Θ: folder({\n            θStart: levaΘStart,\n            θLength: levaΘLength,\n          }),\n        }),\n      }),\n    }),\n  });\n\n  return (\n    <Circle\n      args={[\n        radius,\n        segments,\n        MathUtils.degToRad(θStart),\n        MathUtils.degToRad(θLength),\n      ]}\n    >\n      {children ?? <Material />}\n    </Circle>\n  );\n};\n\nexport default Geometry2DCircle;\n","export const levaHeight = {\n  label: \"Height\",\n  hint: \"Height along the Y axis. Default is 1.\",\n  max: 6.0,\n  min: 0.1,\n  step: 0.1,\n  value: 1.0,\n};\n\nexport const levaHeightSegments = {\n  label: \"Height Segments\",\n  hint: \"Optional. Default is 1.\",\n  max: 16,\n  min: 1,\n  step: 1,\n  value: 1,\n};\n\nexport const levaWidth = {\n  label: \"Width\",\n  hint: \"Width along the X axis. Default is 1.\",\n  max: 6.0,\n  min: 0.1,\n  step: 0.1,\n  value: 1.0,\n};\n\nexport const levaWidthSegments = {\n  label: \"Width Segments\",\n  hint: \"Optional. Default is 1.\",\n  max: 16,\n  min: 1,\n  step: 1,\n  value: 1,\n};\n","import { Plane } from \"@react-three/drei\";\nimport { folder, useControls } from \"leva\";\n\nimport Material from \"../Material\";\n\nimport {\n  levaHeight,\n  levaHeightSegments,\n  levaWidth,\n  levaWidthSegments,\n} from \"App/libs/LevaSettings/Geometry/Plane\";\n\n/**\n * Plane geometry.\n *\n * @see https://threejs.org/docs/index.html#api/en/geometries/PlaneGeometry\n */\nconst Geometry2DPlane = ({ children }) => {\n  const { height, heightSegments, width, widthSegments } = useControls(\n    \"Components\",\n    {\n      Geometry: folder({\n        Arguments: folder({\n          \"X Axis\": folder({\n            width: levaWidth,\n            widthSegments: levaWidthSegments,\n          }),\n          \"Y Axis\": folder({\n            height: levaHeight,\n            heightSegments: levaHeightSegments,\n          }),\n        }),\n      }),\n    }\n  );\n\n  return (\n    <Plane args={[width, height, widthSegments, heightSegments]}>\n      {children ?? <Material />}\n    </Plane>\n  );\n};\n\nexport default Geometry2DPlane;\n","export const levaInnerRadius = {\n  label: \"Inner Radius\",\n  hint: \"Default is 0.5.\",\n  max: 3.0,\n  min: 0.1,\n  step: 0.1,\n  value: 0.5,\n};\n\nexport const levaOuterRadius = {\n  label: \"Outer Radius\",\n  hint: \"Default is 1.\",\n  max: 3.0,\n  min: 0.1,\n  step: 0.1,\n  value: 1.0,\n};\n\nexport const levaΘSegments = {\n  label: \"Θ Segments\",\n  hint: \"Number of segments. A higher number means the ring will be more round. Minimum is 3. Default is 8.\",\n  max: 64,\n  min: 3,\n  step: 1,\n  value: 8,\n};\n\nexport { levaΘLength } from \"./Circle\";\n\nexport { levaΘStart } from \"./Circle\";\n\nexport const levaΦSegments = {\n  label: \"Φ Segments\",\n  hints: \"Minimum is 1. Default is 1.\",\n  max: 64,\n  min: 1,\n  step: 1,\n  value: 8,\n};\n","import { MathUtils } from \"three\";\nimport { Ring } from \"@react-three/drei\";\nimport { folder, useControls } from \"leva\";\n\nimport {\n  levaInnerRadius,\n  levaOuterRadius,\n  levaΘLength,\n  levaΘSegments,\n  levaΘStart,\n  levaΦSegments,\n} from \"App/libs/LevaSettings/Geometry/Ring\";\n\nimport Material from \"../Material\";\n\n/**\n * Ring geometry.\n *\n * @see https://threejs.org/docs/index.html#api/en/geometries/RingGeometry\n */\nconst Geometry2DRing = ({ children }) => {\n  const { innerRadius, outerRadius, θLength, θSegments, θStart, φSegments } =\n    useControls(\"Components\", {\n      Geometry: folder({\n        Arguments: folder({\n          \"XY Plane\": folder({\n            innerRadius: levaInnerRadius,\n            outerRadius: levaOuterRadius,\n            Θ: folder({\n              θSegments: levaΘSegments,\n              θStart: levaΘStart,\n              θLength: levaΘLength,\n            }),\n            Φ: folder({\n              φSegments: levaΦSegments,\n            }),\n          }),\n        }),\n      }),\n    });\n\n  return (\n    <Ring\n      args={[\n        innerRadius,\n        outerRadius,\n        θSegments,\n        φSegments,\n        MathUtils.degToRad(θStart),\n        MathUtils.degToRad(θLength),\n      ]}\n    >\n      {children ?? <Material />}\n    </Ring>\n  );\n};\n\nexport default Geometry2DRing;\n","import { folder, useControls } from \"leva\";\n\nimport Circle from \"./Circle\";\nimport Plane from \"./Plane\";\nimport Ring from \"./Ring\";\n\nconst GEOMETRY_2D = Object.freeze({\n  Circle: \"Circle\",\n  None: \"None\",\n  Plane: \"Plane\",\n  Ring: \"Ring\",\n});\n\nfunction enableGeometry(name, children) {\n  let element;\n  switch (name) {\n    case GEOMETRY_2D.Circle:\n      element = <Circle>{children}</Circle>;\n      break;\n    case GEOMETRY_2D.Plane:\n      element = <Plane>{children}</Plane>;\n      break;\n    case GEOMETRY_2D.Ring:\n      element = <Ring>{children}</Ring>;\n      break;\n    default:\n      element = <></>;\n  }\n  return element;\n}\n\nconst Geometry2D = ({ children }) => {\n  const { geometry2DName } = useControls(\"Components\", {\n    Geometry: folder({\n      geometry2DName: {\n        label: \"Geometry\",\n        options: GEOMETRY_2D,\n        value: GEOMETRY_2D.Plane,\n      },\n    }),\n  });\n\n  return enableGeometry(geometry2DName, children);\n};\n\nexport default Geometry2D;\n","export const levaDepth = {\n  label: \"Depth\",\n  hint: \"Depth along the Z axis. Default is 1.\",\n  max: 6.0,\n  min: 0.1,\n  step: 0.1,\n  value: 1.0,\n};\n\nexport const levaDepthSegments = {\n  label: \"Depth Segments\",\n  hint: \"Optional. Default is 1.\",\n  max: 16,\n  min: 1,\n  step: 1,\n  value: 1,\n};\n\nexport { levaHeight } from \"./Plane\";\n\nexport { levaHeightSegments } from \"./Plane\";\n\nexport { levaWidth } from \"./Plane\";\n\nexport { levaWidthSegments } from \"./Plane\";\n","import { Box } from \"@react-three/drei\";\nimport { folder, useControls } from \"leva\";\n\nimport Material from \"../Material\";\n\nimport {\n  levaDepth,\n  levaDepthSegments,\n  levaHeight,\n  levaHeightSegments,\n  levaWidth,\n  levaWidthSegments,\n} from \"App/libs/LevaSettings/Geometry/Box\";\n\n/**\n * Box geometry.\n *\n * @see https://threejs.org/docs/index.html#api/en/geometries/BoxGeometry\n */\nconst Geometry3DBox = ({ children }) => {\n  const { depth, depthSegment, height, heightSegments, width, widthSegments } =\n    useControls(\"Components\", {\n      Geometry: folder({\n        Arguments: folder({\n          \"X Axis\": folder({\n            width: levaWidth,\n            widthSegments: levaWidthSegments,\n          }),\n          \"Y Axis\": folder({\n            height: levaHeight,\n            heightSegments: levaHeightSegments,\n          }),\n          \"Z Axis\": folder({\n            depth: levaDepth,\n            depthSegments: levaDepthSegments,\n          }),\n        }),\n      }),\n    });\n\n  return (\n    <Box\n      args={[width, height, depth, widthSegments, heightSegments, depthSegment]}\n    >\n      {children ?? <Material />}\n    </Box>\n  );\n};\n\nexport default Geometry3DBox;\n","export { levaHeight } from \"./Plane\";\n\nexport { levaHeightSegments } from \"./Plane\";\n\nexport const levaOpenEnded = {\n  label: \"Open Ended\",\n  hint: \"A Boolean indicating whether the base of the cone is open or capped. Default is false, meaning capped.\",\n  value: false,\n};\n\nexport const levaRadialSegments = {\n  label: \"Radial Segments\",\n  hint: \"Number of segmented faces around the circumference of the cone. Default is 8.\",\n  max: 64,\n  min: 3,\n  step: 1,\n  value: 8,\n};\n\nexport { levaRadius } from \"./Circle\";\n\nexport { levaΘLength } from \"./Circle\";\n\nexport { levaΘStart } from \"./Circle\";\n","import { MathUtils } from \"three\";\nimport { Cone } from \"@react-three/drei\";\nimport { folder, useControls } from \"leva\";\n\nimport {\n  levaHeight,\n  levaHeightSegments,\n  levaOpenEnded,\n  levaRadialSegments,\n  levaRadius,\n  levaΘStart,\n  levaΘLength,\n} from \"App/libs/LevaSettings/Geometry/Cone\";\n\nimport Material from \"../Material\";\n\n/**\n * Cone geometry.\n *\n * @see https://threejs.org/docs/index.html#api/en/geometries/ConeGeometry\n */\nconst Geometry3DCone = ({ children }) => {\n  const {\n    height,\n    heightSegments,\n    openEnded,\n    radialSegments,\n    radius,\n    θLength,\n    θStart,\n  } = useControls(\"Components\", {\n    Geometry: folder({\n      Arguments: folder({\n        \"XZ Plane\": folder({\n          radius: levaRadius,\n          radialSegments: levaRadialSegments,\n          openEnded: levaOpenEnded,\n          Θ: folder({\n            θStart: levaΘStart,\n            θLength: levaΘLength,\n          }),\n        }),\n        \"Y Axis\": folder({\n          height: levaHeight,\n          heightSegments: levaHeightSegments,\n        }),\n      }),\n    }),\n  });\n\n  return (\n    <Cone\n      args={[\n        radius,\n        height,\n        radialSegments,\n        heightSegments,\n        openEnded,\n        MathUtils.degToRad(θStart),\n        MathUtils.degToRad(θLength),\n      ]}\n    >\n      {children ?? <Material />}\n    </Cone>\n  );\n};\n\nexport default Geometry3DCone;\n","export { levaHeight } from \"./Plane\";\n\nexport { levaHeightSegments } from \"./Plane\";\n\nexport { levaOpenEnded } from \"./Cone\";\n\nexport { levaRadialSegments } from \"./Cone\";\n\nexport const levaRadiusBottom = {\n  label: \"Radius Bottom\",\n  hint: \"Radius of the cylinder at the top. Default is 1.\",\n  max: 3.0,\n  min: 0.1,\n  step: 0.1,\n  value: 1.0,\n};\n\nexport const levaRadiusTop = {\n  label: \"Radius Top\",\n  hint: \"Radius of the cylinder at the bottom. Default is 1.\",\n  max: 3.0,\n  min: 0.1,\n  step: 0.1,\n  value: 1.0,\n};\n\nexport { levaΘLength } from \"./Circle\";\n\nexport { levaΘStart } from \"./Circle\";\n","import { MathUtils } from \"three\";\nimport { Cylinder } from \"@react-three/drei\";\nimport { folder, useControls } from \"leva\";\n\nimport {\n  levaHeight,\n  levaHeightSegments,\n  levaOpenEnded,\n  levaRadialSegments,\n  levaRadiusBottom,\n  levaRadiusTop,\n  levaΘLength,\n  levaΘStart,\n} from \"App/libs/LevaSettings/Geometry/Cylinder\";\n\nimport Material from \"../Material\";\n\n/**\n * Cylinder geometry.\n *\n * @see https://threejs.org/docs/index.html#api/en/geometries/CylinderGeometry\n */\nconst Geometry3DCylinder = ({ children }) => {\n  const {\n    height,\n    heightSegments,\n    openEnded,\n    radialSegments,\n    radiusBottom,\n    radiusTop,\n    θLength,\n    θStart,\n  } = useControls(\"Components\", {\n    Geometry: folder({\n      Arguments: folder({\n        \"XZ Plane\": folder({\n          radiusBottom: levaRadiusBottom,\n          radiusTop: levaRadiusTop,\n          radialSegments: levaRadialSegments,\n          openEnded: levaOpenEnded,\n          Θ: folder({\n            θStart: levaΘStart,\n            θLength: levaΘLength,\n          }),\n        }),\n        \"Y Axis\": folder({\n          height: levaHeight,\n          heightSegments: levaHeightSegments,\n        }),\n      }),\n    }),\n  });\n\n  return (\n    <Cylinder\n      args={[\n        radiusTop,\n        radiusBottom,\n        height,\n        radialSegments,\n        heightSegments,\n        openEnded,\n        MathUtils.degToRad(θStart),\n        MathUtils.degToRad(θLength),\n      ]}\n    >\n      {children ?? <Material />}\n    </Cylinder>\n  );\n};\n\nexport default Geometry3DCylinder;\n","export const levaDetail = {\n  label: \"Detail\",\n  hint: \"Default is 0.\",\n  max: 8,\n  min: 0,\n  step: 1,\n  value: 0,\n};\n\nexport { levaRadius } from \"./Circle\";\n","import { Tetrahedron } from \"@react-three/drei\";\nimport { folder, useControls } from \"leva\";\n\nimport {\n  levaDetail,\n  levaRadius,\n} from \"App/libs/LevaSettings/Geometry/Tetrahedron\";\n\nimport Material from \"../Material\";\n\n/**\n * Tetrahedron geometry (4 faces).\n *\n * @see https://threejs.org/docs/index.html#api/en/geometries/TetrahedronGeometry\n */\nconst Geometry3DTetrahedron = ({ children }) => {\n  const { detail, radius } = useControls(\"Components\", {\n    Geometry: folder({\n      Arguments: folder({\n        radius: levaRadius,\n        detail: levaDetail,\n      }),\n    }),\n  });\n\n  return (\n    <Tetrahedron args={[radius, detail]}>\n      {children ?? <Material />}\n    </Tetrahedron>\n  );\n};\n\nexport default Geometry3DTetrahedron;\n","import { Dodecahedron } from \"@react-three/drei\";\nimport { folder, useControls } from \"leva\";\n\nimport {\n  levaDetail,\n  levaRadius,\n} from \"App/libs/LevaSettings/Geometry/Dodecahedron\";\n\nimport Material from \"../Material\";\n\n/**\n * Dodecahedron geometry (12 faces).\n *\n * @see https://threejs.org/docs/index.html#api/en/geometries/DodecahedronGeometry\n */\nconst Geometry3DDodecahedron = ({ children }) => {\n  const { detail, radius } = useControls(\"Components\", {\n    Geometry: folder({\n      Arguments: folder({\n        radius: levaRadius,\n        detail: levaDetail,\n      }),\n    }),\n  });\n\n  return (\n    <Dodecahedron args={[radius, detail]}>\n      {children ?? <Material />}\n    </Dodecahedron>\n  );\n};\n\nexport default Geometry3DDodecahedron;\n","import { Icosahedron } from \"@react-three/drei\";\nimport { folder, useControls } from \"leva\";\n\nimport {\n  levaDetail,\n  levaRadius,\n} from \"App/libs/LevaSettings/Geometry/Icosahedron\";\n\nimport Material from \"../Material\";\n\n/**\n * Icosahedron geometry (20 faces).\n *\n * @see https://threejs.org/docs/index.html#api/en/geometries/IcosahedronGeometry\n */\nconst Geometry3DIcosahedron = ({ children }) => {\n  const { detail, radius } = useControls(\"Components\", {\n    Geometry: folder({\n      Arguments: folder({\n        radius: levaRadius,\n        detail: levaDetail,\n      }),\n    }),\n  });\n\n  return (\n    <Icosahedron args={[radius, detail]}>\n      {children ?? <Material />}\n    </Icosahedron>\n  );\n};\n\nexport default Geometry3DIcosahedron;\n","import { Octahedron } from \"@react-three/drei\";\nimport { folder, useControls } from \"leva\";\n\nimport {\n  levaDetail,\n  levaRadius,\n} from \"App/libs/LevaSettings/Geometry/Octahedron\";\n\nimport Material from \"../Material\";\n\n/**\n * Octahedron geometry (8 faces).\n *\n * @see https://threejs.org/docs/index.html#api/en/geometries/OctahedronGeometry\n */\nconst Geometry3DOctahedron = ({ children }) => {\n  const { detail, radius } = useControls(\"Components\", {\n    Geometry: folder({\n      Arguments: folder({\n        radius: levaRadius,\n        detail: levaDetail,\n      }),\n    }),\n  });\n\n  return (\n    <Octahedron args={[radius, detail]}>{children ?? <Material />}</Octahedron>\n  );\n};\n\nexport default Geometry3DOctahedron;\n","export const levaHeightSegments = {\n  label: \"Height Segments\",\n  hint: \"Number of vertical segments. Minimum = 2, default = 16.\",\n  max: 32,\n  min: 2,\n  step: 1,\n  value: 16,\n};\n\nexport { levaRadius } from \"./Circle\";\n\nexport const levaWidthSegments = {\n  label: \"Width Segments\",\n  hint: \"Number of horizontal segments. Minimum = 3, default = 32.\",\n  max: 64,\n  min: 3,\n  step: 1,\n  value: 32,\n};\n\nexport const levaΘLength = {\n  label: \"Θ Length\",\n  hint: \"Specify vertical sweep angle size. Default = Math.PI.\",\n  max: 180.0,\n  min: -180.0,\n  step: 0.1,\n  value: 180.0,\n};\n\nexport { levaΘStart } from \"./Circle\";\n\nexport const levaΦLength = {\n  label: \"Φ Length\",\n  hint: \"Specify horizontal sweep angle size. Default = 2*Math.PI.\",\n  max: 360.0,\n  min: 0.0,\n  step: 0.1,\n  value: 360.0,\n};\n\nexport const levaΦStart = {\n  label: \"Φ Start\",\n  hint: \"Specify horizontal starting angle. Default = 0.\",\n  max: 360.0,\n  min: -360.0,\n  step: 0.1,\n  value: 0.0,\n};\n","import { MathUtils } from \"three\";\nimport { Sphere } from \"@react-three/drei\";\nimport { folder, useControls } from \"leva\";\n\nimport {\n  levaHeightSegments,\n  levaRadius,\n  levaWidthSegments,\n  levaΘLength,\n  levaΘStart,\n  levaΦLength,\n  levaΦStart,\n} from \"App/libs/LevaSettings/Geometry/Sphere\";\n\nimport Material from \"../Material\";\n\n/**\n * Sphere geometry.\n *\n * @see https://threejs.org/docs/index.html#api/en/geometries/SphereGeometry\n */\nconst Geometry3DSphere = ({ children }) => {\n  const {\n    heightSegments,\n    radius,\n    widthSegments,\n    θLength,\n    θStart,\n    φLength,\n    φStart,\n  } = useControls(\"Components\", {\n    Geometry: folder({\n      Arguments: folder({\n        \"Transverse Plane\": folder({\n          radius: levaRadius,\n          sphereWidthSegments: levaWidthSegments,\n          Φ: folder({\n            φStart: levaΦStart,\n            φLength: levaΦLength,\n          }),\n        }),\n        \"Frontal Plane\": folder({\n          heightSegments: levaHeightSegments,\n          Θ: folder({\n            θStart: levaΘStart,\n            θLength: levaΘLength,\n          }),\n        }),\n      }),\n    }),\n  });\n\n  return (\n    <Sphere\n      args={[\n        radius,\n        widthSegments,\n        heightSegments,\n        MathUtils.degToRad(φStart),\n        MathUtils.degToRad(φLength),\n        MathUtils.degToRad(θStart),\n        MathUtils.degToRad(θLength),\n      ]}\n    >\n      {children ?? <Material />}\n    </Sphere>\n  );\n};\n\nexport default Geometry3DSphere;\n","export const levaArc = {\n  label: \"Arc\",\n  max: 360.0,\n  min: 0.0,\n  step: 0.1,\n  value: 360.0,\n};\n\nexport { levaRadialSegments } from \"./Cone\";\n\nexport { levaRadius } from \"./Circle\";\n\nexport const levaTube = {\n  label: \"Tube\",\n  hint: \"Radius of the tube. Default = 0.4.\",\n  max: 3.0,\n  min: 0.0,\n  step: 0.1,\n  value: 0.4,\n};\n\nexport const levaTubularSegments = {\n  label: \"Tubular Segments\",\n  hint: \"Default = 6.\",\n  max: 64,\n  min: 3,\n  step: 1,\n  value: 6,\n};\n","import { MathUtils } from \"three\";\nimport { Torus } from \"@react-three/drei\";\nimport { folder, useControls } from \"leva\";\n\nimport {\n  levaArc,\n  levaRadialSegments,\n  levaRadius,\n  levaTube,\n  levaTubularSegments,\n} from \"App/libs/LevaSettings/Geometry/Torus\";\n\nimport Material from \"../Material\";\n\nconst Geometry3DTorus = ({ children }) => {\n  const { arc, radialSegments, radius, tube, tubularSegments } = useControls(\n    \"Components\",\n    {\n      Geometry: folder({\n        Torus: folder({\n          radius: levaRadius,\n          tube: levaTube,\n          radialSegments: levaRadialSegments,\n          tubularSegments: levaTubularSegments,\n          arc: levaArc,\n        }),\n      }),\n    }\n  );\n\n  return (\n    <Torus\n      args={[\n        radius,\n        tube,\n        radialSegments,\n        tubularSegments,\n        MathUtils.degToRad(arc),\n      ]}\n    >\n      {children ?? <Material />}\n    </Torus>\n  );\n};\n\nexport default Geometry3DTorus;\n","export const levaP = {\n  label: \"P\",\n  hint: \"This value determines, how many times the geometry winds around its axis of rotational symmetry. Default = 2.\",\n  max: 32,\n  min: 1,\n  step: 1,\n  value: 2,\n};\n\nexport const levaQ = {\n  label: \"Q\",\n  hint: \"This value determines, how many times the geometry winds around a circle in the interior of the torus. Default = 3.\",\n  max: 32,\n  min: 1,\n  step: 1,\n  value: 3,\n};\n\nexport { levaRadialSegments } from \"./Cone\";\n\nexport { levaRadius } from \"./Circle\";\n\nexport { levaTube } from \"./Torus\";\n\nexport { levaTubularSegments } from \"./Torus\";\n","import { TorusKnot } from \"@react-three/drei\";\nimport { folder, useControls } from \"leva\";\n\nimport {\n  levaP,\n  levaQ,\n  levaRadialSegments,\n  levaRadius,\n  levaTube,\n  levaTubularSegments,\n} from \"App/libs/LevaSettings/Geometry/TorusKnot\";\n\nimport Material from \"../Material\";\n\nconst Geometry3DTorusKnot = ({ children }) => {\n  const { p, q, radialSegments, radius, tube, tubularSegments } = useControls(\n    \"Components\",\n    {\n      Geometry: folder({\n        Arguments: folder({\n          radius: levaRadius,\n          tube: levaTube,\n          tubularSegments: levaTubularSegments,\n          radialSegments: levaRadialSegments,\n          p: levaP,\n          q: levaQ,\n        }),\n      }),\n    }\n  );\n  return (\n    <TorusKnot args={[radius, tube, tubularSegments, radialSegments, p, q]}>\n      {children ?? <Material />}\n    </TorusKnot>\n  );\n};\n\nexport default Geometry3DTorusKnot;\n","import { folder, useControls } from \"leva\";\n\nimport Box from \"./Box\";\nimport Cone from \"./Cone\";\nimport Cylinder from \"./Cylinder\";\nimport Tetrahedron from \"./Tetrahedron\";\nimport Dodecahedron from \"./Dodecahedron\";\nimport Icosahedron from \"./Icosahedron\";\nimport Octahedron from \"./Octahedron\";\nimport Sphere from \"./Sphere\";\n\nimport Torus from \"./Torus\";\nimport TorusKnot from \"./TorusKnot\";\n\nconst GEOMETRY_3D = Object.freeze({\n  Box: \"Box\",\n  Cone: \"Cone\",\n  Cylinder: \"Cylinder\",\n  Dodecahedron: \"Dodecahedron\",\n  Icosahedron: \"Icosahedron\",\n  None: \"None\",\n  Octahedron: \"Octahedron\",\n  Sphere: \"Sphere\",\n  Tetrahedron: \"Tetrahedron\",\n  Torus: \"Torus\",\n  TorusKnot: \"TorusKnot\",\n});\n\nfunction enableGeometry(name, children) {\n  let element;\n  switch (name) {\n    case GEOMETRY_3D.Box:\n      element = <Box>{children}</Box>;\n      break;\n    case GEOMETRY_3D.Cone:\n      element = <Cone>{children}</Cone>;\n      break;\n    case GEOMETRY_3D.Cylinder:\n      element = <Cylinder>{children}</Cylinder>;\n      break;\n    case GEOMETRY_3D.Dodecahedron:\n      element = <Dodecahedron>{children}</Dodecahedron>;\n      break;\n    case GEOMETRY_3D.Icosahedron:\n      element = <Icosahedron>{children}</Icosahedron>;\n      break;\n    case GEOMETRY_3D.Octahedron:\n      element = <Octahedron>{children}</Octahedron>;\n      break;\n    case GEOMETRY_3D.Sphere:\n      element = <Sphere>{children}</Sphere>;\n      break;\n    case GEOMETRY_3D.Tetrahedron:\n      element = <Tetrahedron>{children}</Tetrahedron>;\n      break;\n    case GEOMETRY_3D.Torus:\n      element = <Torus>{children}</Torus>;\n      break;\n    case GEOMETRY_3D.TorusKnot:\n      element = <TorusKnot>{children}</TorusKnot>;\n      break;\n    default:\n      element = <></>;\n  }\n  return element;\n}\n\nconst Geometry3D = ({ children }) => {\n  const { geometry3DName } = useControls(\"Components\", {\n    Geometry: folder({\n      geometry3DName: {\n        label: \"Geometry\",\n        options: {\n          \"Box                    \": GEOMETRY_3D.Box,\n          \"Cone                   \": GEOMETRY_3D.Cone,\n          \"Cylinder               \": GEOMETRY_3D.Cylinder,\n          \"Tetrahedron (4 faces)  \": GEOMETRY_3D.Tetrahedron,\n          \"Octahedron (8 faces)   \": GEOMETRY_3D.Octahedron,\n          \"Dodecahedron (12 faces)\": GEOMETRY_3D.Dodecahedron,\n          \"Icosahedron (20 faces) \": GEOMETRY_3D.Icosahedron,\n          \"Sphere                 \": GEOMETRY_3D.Sphere,\n          \"Torus                  \": GEOMETRY_3D.Torus,\n          \"Torus Knot             \": GEOMETRY_3D.TorusKnot,\n        },\n        value: GEOMETRY_3D.Box,\n      },\n    }),\n  });\n\n  return enableGeometry(geometry3DName, children);\n};\n\nexport default Geometry3D;\n","import { GizmoHelper, GizmoViewport } from \"@react-three/drei\";\nimport { folder, useControls } from \"leva\";\n\nconst Helpers = () => {\n  const { enableAxesHelper, enableGizmoHelper, enableGridHelper } = useControls(\n    \"General\",\n    {\n      Helpers: folder({\n        enableAxesHelper: { label: \"Axes\", value: false },\n        enableGizmoHelper: { label: \"Gizmo\", value: true },\n        enableGridHelper: { label: \"Grid\", value: false },\n      }),\n    }\n  );\n\n  return (\n    <>\n      {enableAxesHelper && <axesHelper />}\n      {enableGizmoHelper && (\n        <GizmoHelper alignment=\"bottom-right\" margin={[80, 80]}>\n          <GizmoViewport\n            axisColors={[\n              \"hsl(0, 100%, 50%)\",\n              \"hsl(120, 100%, 50%)\",\n              \"hsl(240, 100%, 50%)\",\n            ]}\n            labelColor=\"black\"\n          />\n        </GizmoHelper>\n      )}\n      {enableGridHelper && <gridHelper args={[10, 10, 0xffffff, 0x333333]} />}\n    </>\n  );\n};\n\nexport default Helpers;\n","export default __webpack_public_path__ + \"static/media/UV_Grid_Sm.8ab40f71.jpg\";","import { DoubleSide, Vector2 } from \"three\";\nimport { useTexture } from \"@react-three/drei\";\n\nimport uvGrid from \"./assets/UV_Grid_Sm.jpg\";\n\nconst ImageDefault = () => {\n  const texture = useTexture(uvGrid, true);\n  texture.offset = new Vector2(0, 0);\n  texture.repeat = new Vector2(1, 1);\n\n  return (\n    <mesh>\n      <planeGeometry args={[1, 1, 1]} />\n      <meshStandardMaterial center map={texture} side={DoubleSide} />\n    </mesh>\n  );\n};\n\nexport default ImageDefault;\n","export default __webpack_public_path__ + \"static/media/arteveldehogeschool_logo.6220cd57.svg\";","export default __webpack_public_path__ + \"static/media/SVG_logo.31892e95.svg\";","import { SvgLoader } from \"App/components\";\n\nimport logoNl from \"./assets/arteveldehogeschool_logo.svg\";\nimport svgLogo from \"./assets/SVG_logo.svg\";\n\nconst svgLogoUrl =\n  \"https://upload.wikimedia.org/wikipedia/commons/0/02/SVG_logo.svg\";\n\nconst ImageSvg = (props) => {\n  const scale = 0.0075;\n\n  return (\n    <>\n      <SvgLoader position={[0, 0, 0]} scale={scale} source={svgLogoUrl} />;\n      <SvgLoader position={[0, 0, -1]} scale={scale} source={logoNl} />;\n      <SvgLoader position={[0, 0, -2]} scale={scale} source={svgLogo} />;\n    </>\n  );\n};\n\nexport default ImageSvg;\n","import { useControls } from \"leva\";\n\nimport Default from \"./Default\";\nimport Svg from \"./Svg\";\n\nconst IMAGE = Object.freeze({\n  Default: \"Default\",\n  Svg: \"Svg\",\n});\n\nconst Image = () => {\n  const { useImage } = useControls(\"Components\", {\n    useImage: {\n      label: \"Image\",\n      options: IMAGE,\n      value: IMAGE.Default,\n    },\n  });\n\n  function enableImage(name, element) {\n    return useImage === name ? element : null;\n  }\n\n  return (\n    <>\n      {enableImage(IMAGE.Default, <Default />)}\n      {enableImage(IMAGE.Svg, <Svg />)}\n    </>\n  );\n};\n\nexport default Image;\n","import { OrbitControls, TrackballControls } from \"@react-three/drei\";\nimport { folder, useControls } from \"leva\";\n\nconst CONTROLS = Object.freeze({\n  Orbit: \"Orbit\",\n  Trackball: \"Trackball\",\n});\n\nconst InputControls = () => {\n  const { useInputControls } = useControls(\"General\", {\n    enableStats: { label: \"Stats\", value: false },\n    \"Input Controls\": folder({\n      useInputControls: {\n        label: \"Controls\",\n        options: CONTROLS,\n        value: CONTROLS.Orbit,\n      },\n    }),\n  });\n\n  function enableInputControls(name, element) {\n    return useInputControls === name ? element : null;\n  }\n\n  return (\n    <>\n      {enableInputControls(\n        CONTROLS.Orbit,\n        <OrbitControls enablePan={true} enableRotate={true} enableZoom={true} />\n      )}\n      {enableInputControls(CONTROLS.Trackball, <TrackballControls />)}\n    </>\n  );\n};\n\nexport default InputControls;\n","import { useRef } from \"react\";\nimport {\n  DirectionalLightHelper,\n  HemisphereLightHelper,\n  MathUtils,\n  Object3D,\n  PointLightHelper,\n  SpotLightHelper,\n} from \"three\";\nimport { useFrame, useThree } from \"@react-three/fiber\";\nimport { useHelper } from \"@react-three/drei\";\nimport { folder, useControls } from \"leva\";\n\nconst LightingDemo = () => {\n  const { helpers, helperSize } = useControls(\"Lightings\", {\n    helpers: { label: \"Helpers\", value: false },\n    helperSize: { label: \"Helper Size\", max: 2, min: 0, value: 0.5 },\n  });\n  const ambientLight = useControls(\"Lightings\", {\n    \"Ambient Light\": folder({\n      color: { label: \"Color\", value: \"#ffffff\" },\n      intensity: {\n        label: \"Intensity\",\n        max: 1,\n        min: 0,\n        value: 0.1,\n      },\n    }),\n  });\n  const directionalLight = useControls(\"Lightings\", {\n    \"Directional Light\": folder({\n      castShadow: { label: \"Cast Shadow\", value: true },\n      color: { label: \"Color\", value: \"#ffffff\" },\n      intensity: {\n        label: \"Intensity\",\n        max: 1,\n        min: 0,\n        value: 1,\n      },\n      position: {\n        label: \"Position\",\n        value: { x: 4, y: 4, z: 1 },\n      },\n    }),\n  });\n  const hemisphereLight = useControls(\"Lightings\", {\n    \"Hemisphere Light\": folder({\n      castShadow: { label: \"Cast Shadow\", value: true },\n      color: { label: \"Sky Color\", value: \"#ffffff\" },\n      groundColor: { label: \"Ground Color\", value: \"#ffffff\" },\n      intensity: {\n        label: \"Intensity\",\n        max: 1,\n        min: 0,\n        value: 1,\n      },\n      position: {\n        label: \"Position\",\n        value: { x: 0, y: 1, z: 0 },\n      },\n    }),\n  });\n  const pointLight = useControls(\"Lightings\", {\n    \"Point Light\": folder({\n      castShadow: { label: \"Cast Shadow\", value: true },\n      color: { label: \"Color\", value: \"#ffcc77\" },\n      intensity: { label: \"Intensity\", max: 20, min: 0, value: 0.5 },\n      position: { label: \"Position\", value: { x: -4, y: 1, z: -4 } },\n    }),\n  });\n  const spotLight = useControls(\"Lightings\", {\n    Spotlight: folder({\n      castShadow: { label: \"Cast Shadow\", value: true },\n      color: { label: \"Color\", value: \"#ffcc77\" },\n      intensity: { label: \"Intensity\", max: 20, min: 0, value: 1 },\n      penumbra: { label: \"Penumbra\", value: 0.5 },\n      position: { label: \"Position\", value: { x: 0, y: 4, z: 0 } },\n      target: { label: \"Target\", value: { x: 0, y: 0, z: 0 } },\n    }),\n  });\n\n  const { scene } = useThree();\n  const target = new Object3D();\n  scene.add(target);\n\n  const nullRef = { current: null };\n  const directionalLightRef = useRef();\n  const hemisphereLightRef = useRef();\n  const pointLightRef = useRef();\n  const spotLightRef = useRef();\n\n  useHelper(\n    helpers ? directionalLightRef : nullRef,\n    DirectionalLightHelper,\n    helperSize,\n    directionalLight.color\n  );\n  useHelper(\n    helpers ? pointLightRef : nullRef,\n    PointLightHelper,\n    helperSize,\n    pointLight.color\n  );\n  useHelper(helpers ? spotLightRef : nullRef, SpotLightHelper, spotLight.color);\n  useHelper(\n    helpers ? hemisphereLightRef : nullRef,\n    HemisphereLightHelper,\n    helperSize\n  );\n\n  useFrame(() => {\n    target.translateX(spotLight.target.x);\n    target.translateZ(spotLight.target.z);\n  });\n\n  return (\n    <>\n      <ambientLight\n        color={ambientLight.color}\n        intensity={ambientLight.intensity}\n      />\n      <directionalLight\n        castShadow={directionalLight.castShadow}\n        color={directionalLight.color}\n        intensity={directionalLight.intensity}\n        position={[\n          directionalLight.position.x,\n          directionalLight.position.y,\n          directionalLight.position.z,\n        ]}\n        ref={directionalLightRef}\n      />\n      <hemisphereLight\n        castShadow={hemisphereLight.castShadow}\n        color={hemisphereLight.color}\n        groundColor={hemisphereLight.groundColor}\n        intensity={hemisphereLight.intensity}\n        position={[\n          hemisphereLight.position.x,\n          hemisphereLight.position.y,\n          hemisphereLight.position.z,\n        ]}\n        ref={hemisphereLightRef}\n      />\n      <pointLight\n        castShadow={pointLight.castShadow}\n        color={pointLight.color}\n        intensity={pointLight.intensity}\n        position={[\n          pointLight.position.x,\n          pointLight.position.y,\n          pointLight.position.z,\n        ]}\n        ref={pointLightRef}\n      />\n      <spotLight\n        angle={MathUtils.degToRad(30)}\n        castShadow={spotLight.castShadow}\n        color={spotLight.color}\n        intensity={spotLight.intensity}\n        penumbra={spotLight.penumbra}\n        position={[\n          spotLight.position.x,\n          spotLight.position.y,\n          spotLight.position.z,\n        ]}\n        ref={spotLightRef}\n        target={target}\n      />\n    </>\n  );\n};\n\nexport default LightingDemo;\n","import { useRef } from \"react\";\nimport { DirectionalLightHelper } from \"three\";\nimport { folder, useControls } from \"leva\";\nimport { useHelper } from \"@react-three/drei\";\n\nconst LightingStudio = () => {\n  const { helpers, helperSize } = useControls(\"Lightings\", {\n    helpers: { label: \"Helpers\", value: false },\n    helperSize: { label: \"Helper Size\", max: 2, min: 0, value: 0.5 },\n  });\n  const ambientLight = useControls(\"Lightings\", {\n    \"Ambient Light\": folder({\n      color: { label: \"Color\", value: \"hsl(0, 0%, 100%)\" },\n      intensity: { label: \"Intensity\", max: 1, min: 0, value: 0.1 },\n    }),\n  });\n  const frontLight = useControls(\"Lightings\", {\n    \"Front Light\": folder({\n      castShadow: { label: \"Cast Shadow\", value: true },\n      color: { label: \"Color\", value: \"hsl(0, 0%, 70%)\" },\n      intensity: { label: \"Intensity\", max: 2, min: 0, value: 0.4 },\n      position: { label: \"Position\", value: { x: 0, y: 2, z: 4 } },\n    }),\n  });\n  const leftLight = useControls(\"Lightings\", {\n    \"Left Light\": folder({\n      castShadow: { label: \"Cast Shadow\", value: true },\n      color: { label: \"Color\", value: \"hsl(210, 100%, 70%)\" },\n      intensity: { label: \"Intensity\", max: 2, min: 0, value: 1 },\n      position: { label: \"Position\", value: { x: -4, y: 0, z: 0 } },\n    }),\n  });\n  const rightLight = useControls(\"Lightings\", {\n    \"Right Light\": folder({\n      castShadow: { label: \"Cast Shadow\", value: true },\n      color: { label: \"Color\", value: \"hsl(30, 100%, 70%)\" },\n      intensity: { label: \"Intensity\", max: 2, min: 0, value: 1 },\n      position: { label: \"Position\", value: { x: 4, y: 0, z: 0 } },\n    }),\n  });\n\n  const nullRef = { current: null };\n  const frontLightRef = useRef();\n  const leftLightRef = useRef();\n  const rightLightRef = useRef();\n\n  useHelper(\n    helpers ? frontLightRef : nullRef,\n    DirectionalLightHelper,\n    helperSize,\n    frontLight.color\n  );\n  useHelper(\n    helpers ? leftLightRef : nullRef,\n    DirectionalLightHelper,\n    helperSize,\n    leftLight.color\n  );\n  useHelper(\n    helpers ? rightLightRef : nullRef,\n    DirectionalLightHelper,\n    helperSize,\n    rightLight.color\n  );\n\n  return (\n    <>\n      <ambientLight\n        color={ambientLight.color}\n        intensity={ambientLight.intensity}\n      />\n      <directionalLight\n        castShadow={frontLight.castShadow}\n        color={frontLight.color}\n        intensity={frontLight.intensity}\n        position={[\n          frontLight.position.x,\n          frontLight.position.y,\n          frontLight.position.z,\n        ]}\n        ref={frontLightRef}\n      />\n      <directionalLight\n        castShadow={leftLight.castShadow}\n        color={leftLight.color}\n        intensity={leftLight.intensity}\n        position={[\n          leftLight.position.x,\n          leftLight.position.y,\n          leftLight.position.z,\n        ]}\n        ref={leftLightRef}\n      />\n      <directionalLight\n        castShadow={rightLight.castShadow}\n        color={rightLight.color}\n        intensity={rightLight.intensity}\n        position={[\n          rightLight.position.x,\n          rightLight.position.y,\n          rightLight.position.z,\n        ]}\n        ref={rightLightRef}\n      />\n    </>\n  );\n};\n\nexport default LightingStudio;\n","import { useRef } from \"react\";\nimport { SpotLightHelper } from \"three\";\nimport { useHelper } from \"@react-three/drei\";\nimport { folder, useControls } from \"leva\";\n\nconst LightingThreePoint = () => {\n  const { helpers } = useControls(\"Lightings\", {\n    helpers: { label: \"Helpers\", value: false },\n  });\n  const ambientLight = useControls(\"Lightings\", {\n    \"Ambient Light\": folder({\n      color: { label: \"Color\", value: \"hsl(0, 0%, 100%)\" },\n      intensity: {\n        label: \"Intensity\",\n        max: 1,\n        min: 0,\n        value: 0.1,\n      },\n    }),\n  });\n  const backLight = useControls(\"Lightings\", {\n    \"Back Light\": folder({\n      castShadow: { label: \"Cast Shadow\", value: true },\n      color: { label: \"Color\", value: \"hsl(0, 0%, 70%)\" },\n      intensity: { label: \"Intensity\", max: 2, min: 0, value: 0.75 },\n      position: { label: \"Position\", value: { x: 4, y: 2, z: -4 } },\n    }),\n  });\n  const fillLight = useControls(\"Lightings\", {\n    \"Fill Light\": folder({\n      castShadow: { label: \"Cast Shadow\", value: true },\n      color: { label: \"Color\", value: \"hsl(210, 100%, 70%)\" },\n      intensity: { label: \"Intensity\", max: 2, min: 0, value: 0.75 },\n      position: { label: \"Position\", value: { x: -4, y: 2, z: 4 } },\n    }),\n  });\n  const keyLight = useControls(\"Lightings\", {\n    \"Key Light\": folder({\n      castShadow: { label: \"Cast Shadow\", value: true },\n      color: { label: \"Color\", value: \"hsl(30, 100%, 70%)\" },\n      intensity: { label: \"Intensity\", max: 2, min: 0, value: 0.75 },\n      position: { label: \"Position\", value: { x: 4, y: 2, z: 4 } },\n    }),\n  });\n\n  const nullRef = { current: null };\n  const backLightRef = useRef();\n  const fillLightRef = useRef();\n  const keyLightRef = useRef();\n\n  useHelper(helpers ? backLightRef : nullRef, SpotLightHelper, backLight.color);\n  useHelper(helpers ? fillLightRef : nullRef, SpotLightHelper, fillLight.color);\n  useHelper(helpers ? keyLightRef : nullRef, SpotLightHelper, keyLight.color);\n\n  return (\n    <>\n      <ambientLight\n        color={ambientLight.color}\n        intensity={ambientLight.intensity}\n      />\n      <spotLight\n        castShadow={backLight.castShadow}\n        color={backLight.color}\n        intensity={backLight.intensity}\n        position={[\n          backLight.position.x,\n          backLight.position.y,\n          backLight.position.z,\n        ]}\n        ref={backLightRef}\n      />\n      <spotLight\n        castShadow={fillLight.castShadow}\n        color={fillLight.color}\n        intensity={fillLight.intensity}\n        position={[\n          fillLight.position.x,\n          fillLight.position.y,\n          fillLight.position.z,\n        ]}\n        ref={fillLightRef}\n      />\n      <spotLight\n        castShadow={keyLight.castShadow}\n        color={keyLight.color}\n        intensity={keyLight.intensity}\n        position={[\n          keyLight.position.x,\n          keyLight.position.y,\n          keyLight.position.z,\n        ]}\n        ref={keyLightRef}\n      />\n    </>\n  );\n};\n\nexport default LightingThreePoint;\n","import { useControls } from \"leva\";\n\nimport Demo from \"./Demo\";\nimport Studio from \"./Studio\";\nimport ThreePoint from \"./ThreePoint\";\n\nconst LIGHTING = Object.freeze({\n  Demo: \"Demo\",\n  None: \"None\",\n  Studio: \"Studio\",\n  ThreePoint: \"ThreePoint\",\n});\n\nfunction enableLighting(name) {\n  let element;\n  switch (name) {\n    case LIGHTING.Demo:\n      element = <Demo />;\n      break;\n    case LIGHTING.Studio:\n      element = <Studio />;\n      break;\n    case LIGHTING.ThreePoint:\n      element = <ThreePoint />;\n      break;\n    default:\n      element = null;\n  }\n  return element;\n}\n\nconst Lighting = () => {\n  const { ligthingName } = useControls(\"Lightings\", {\n    ligthingName: {\n      label: \"Lighting\",\n      options: {\n        \"None       \": LIGHTING.None,\n        \"Demo       \": LIGHTING.Demo,\n        \"Studio     \": LIGHTING.Studio,\n        \"Three Point\": LIGHTING.ThreePoint,\n      },\n      value: LIGHTING.Studio,\n    },\n  });\n\n  return enableLighting(ligthingName);\n};\n\nexport default Lighting;\n","export default __webpack_public_path__ + \"static/media/gltf-logo.d3501fc2.glb\";","import { useRef, useState } from \"react\";\nimport { useFrame } from \"@react-three/fiber\";\nimport { useGLTF } from \"@react-three/drei\";\n\nimport gltfLogoGlb from \"./assets/gltf-logo.glb\";\n\nconst LogoDefault = () => {\n  const [clockwise, setClockwise] = useState(false);\n\n  const gltfLogo = useGLTF(gltfLogoGlb, true);\n  const logoRef = useRef();\n  const speed = 0.025;\n\n  useFrame(() => {\n    logoRef.current.rotation.y += speed * (clockwise ? 1 : -1);\n  });\n\n  return (\n    <primitive\n      object={gltfLogo.scene}\n      onClick={() => setClockwise(!clockwise)}\n      position={[0, 0, 0]}\n      ref={logoRef}\n    />\n  );\n};\n\nexport default LogoDefault;\n","import { useRef, useState } from \"react\";\nimport { useFrame } from \"@react-three/fiber\";\nimport { useGLTF } from \"@react-three/drei\";\n\nimport gltfLogoGlb from \"./assets/gltf-logo.glb\";\n\nconst LogoDouble = () => {\n  const [clockwise, setClockwise] = useState(false);\n\n  const gltfLogo = useGLTF(gltfLogoGlb, true);\n  const logo1Ref = useRef();\n  const logo2Ref = useRef();\n  const speed = 0.025;\n\n  useFrame(() => {\n    if (logo1Ref.current)\n      logo1Ref.current.rotation.x += speed * (clockwise ? 1 : -1);\n    if (logo2Ref.current)\n      logo2Ref.current.rotation.y += speed * (clockwise ? 1 : -1);\n  });\n\n  return (\n    <group onClick={() => setClockwise(!clockwise)}>\n      <primitive\n        object={gltfLogo.scene}\n        position={[-1, -1, 0]}\n        ref={logo1Ref}\n      />\n      <primitive\n        object={gltfLogo.scene.clone(true)}\n        position={[1, 1, 0]}\n        ref={logo2Ref}\n      />\n    </group>\n  );\n};\n\nexport default LogoDouble;\n","import { useControls } from \"leva\";\n\nimport Default from \"./Default\";\nimport Double from \"./Double\";\n\nconst LOGO = Object.freeze({\n  Default: \"Default\",\n  Double: \"Double\",\n});\n\nconst Image = () => {\n  const { useLogo } = useControls(\"Components\", {\n    useLogo: {\n      label: \"Logo\",\n      options: LOGO,\n      value: LOGO.Default,\n    },\n  });\n\n  function enableLogo(name, element) {\n    return useLogo === name ? element : null;\n  }\n\n  return (\n    <>\n      {enableLogo(LOGO.Default, <Default />)}\n      {enableLogo(LOGO.Double, <Double />)}\n    </>\n  );\n};\n\nexport default Image;\n","import { Text, useMatcapTexture } from \"@react-three/drei\";\nimport { useControls } from \"leva\";\n\nimport { FontFamily, Matcap } from \"App/libs\";\n\nconst LoremIpsumDefault = () => {\n  const { size, string } = useControls(\"Components\", {\n    size: {\n      label: \"Size\",\n      max: 1.0,\n      min: 0.1,\n      value: 0.5,\n    },\n    string: {\n      label: \"String\",\n      value: \"Lorem ipsum dolor sit amet.\",\n    },\n  });\n\n  const [matcapGreenCrystal] = useMatcapTexture(\n    Matcap.id.GREEN_CRYSTAL,\n    Matcap.size.XL\n  );\n  const [matcapSilvery] = useMatcapTexture(Matcap.id.SILVERY, Matcap.size.XL);\n  const [matcapWornGold] = useMatcapTexture(\n    Matcap.id.WORN_GOLD,\n    Matcap.size.XL\n  );\n\n  return (\n    <>\n      <Text fontSize={size} position={[0, 1, -0.2]}>\n        {string}\n        <meshLambertMaterial />\n      </Text>\n      <Text\n        font={FontFamily.ROBOTO_SLAB.url}\n        fontSize={size}\n        position={[0, 0, 0]}\n      >\n        {string}\n        <meshMatcapMaterial matcap={matcapWornGold} />\n      </Text>\n      <Text\n        font={FontFamily.ARCHITECTS_DAUGHTER.url}\n        fontSize={size}\n        opacity={0.5}\n        position={[0, -1, 0.1]}\n        text={string}\n      >\n        <meshMatcapMaterial matcap={matcapGreenCrystal} />\n      </Text>\n      <Text\n        color={0x000000}\n        font={FontFamily.PRESS_START_2P.url}\n        fontSize={size}\n        outlineColor={0x00ff00}\n        outlineWidth={0.04}\n        position={[0, -2, 0.2]}\n        text={string}\n      >\n        <meshMatcapMaterial matcap={matcapSilvery} opacity={0.9} />\n      </Text>\n    </>\n  );\n};\n\nexport default LoremIpsumDefault;\n","import { Text } from \"@react-three/drei\";\nimport { useControls } from \"leva\";\n\nimport { FontFamily } from \"App/libs\";\n\nconst length = Object.keys(FontFamily).length;\n\nconst LoremIpsumFonts = () => {\n  const { color, size, string } = useControls(\"Components\", {\n    color: {\n      label: \"Color\",\n      value: \"#ffffff\",\n    },\n    size: {\n      label: \"Size\",\n      value: 0.5,\n      min: 0.1,\n      max: 1,\n    },\n    string: {\n      label: \"String\",\n      value: \"Lorem ipsum dolor sit amet.\",\n    },\n  });\n\n  const start = (-length * size) / 2;\n\n  return (\n    <>\n      {Object.keys(FontFamily).map((name, index) => {\n        return (\n          <Text\n            color={color}\n            font={FontFamily[name].url}\n            fontSize={size}\n            key={name}\n            position={[0, start + index * size, 0]}\n          >\n            {string}\n          </Text>\n        );\n      })}\n    </>\n  );\n};\n\nexport default LoremIpsumFonts;\n","import { useControls } from \"leva\";\n\nimport Default from \"./Default\";\nimport Fonts from \"./Fonts\";\n\nconst LOREM_IPSUM = Object.freeze({\n  Default: \"Default\",\n  Fonts: \"Fonts\",\n});\n\nconst LoremIpsum = () => {\n  const { useLoremIpsum } = useControls(\"Components\", {\n    useLoremIpsum: {\n      label: \"LoremIpsum\",\n      options: LOREM_IPSUM,\n      value: LOREM_IPSUM.Default,\n    },\n  });\n\n  function enableLoremIpsum(name, element) {\n    return useLoremIpsum === name ? element : null;\n  }\n\n  return (\n    <>\n      {enableLoremIpsum(LOREM_IPSUM.Default, <Default />)}\n      {enableLoremIpsum(LOREM_IPSUM.Fonts, <Fonts />)}\n    </>\n  );\n};\n\nexport default LoremIpsum;\n","export default __webpack_public_path__ + \"static/media/normals.c5aed970.glb\";","import { useRef } from \"react\";\nimport { useGLTF } from \"@react-three/drei\";\nimport { useFrame } from \"@react-three/fiber\";\n\nimport normalsGlb from \"./assets/normals.glb\";\n\nconst Normals = () => {\n  const normals = useGLTF(normalsGlb, true);\n  const normalsRef = useRef();\n\n  useFrame(() => {\n    if (normalsRef.current) {\n      normalsRef.current.rotation.x += 0.02;\n    }\n  });\n\n  return <primitive object={normals.scene} ref={normalsRef} />;\n};\n\nexport default Normals;\n","import { folder, useControls } from \"leva\";\n\nconst ParticlesDefault = () => {\n  const { color, complexity, opacity, radius, size, transparent } = useControls(\n    \"Components\",\n    {\n      \"Icosahedron (20 faces)\": folder({\n        radius: { label: \"Radius\", max: 3, min: 0.5, step: 0.1, value: 2 },\n        complexity: {\n          label: \"Complexity\",\n          hint: \"0 → 12 vertices\",\n          max: 50,\n          min: 0,\n          step: 1,\n          value: 0,\n        },\n      }),\n      \"Points Material\": folder({\n        color: { label: \"Color\", value: \"hsl(0, 100%, 100%)\" },\n        opacity: {\n          label: \"Opacity\",\n          hint: \"`transparent` must be `true`\",\n          max: 1,\n          min: 0,\n          value: 1,\n        },\n        size: { label: \"Size\", max: 2, min: 0.05, step: 0.01, value: 1 },\n        transparent: { label: \"Transparent\", value: false },\n      }),\n    }\n  );\n\n  return (\n    <points>\n      <icosahedronGeometry args={[radius, complexity]} />\n      <pointsMaterial\n        color={color}\n        opacity={opacity}\n        size={size}\n        transparent={transparent}\n      />\n    </points>\n  );\n};\n\nexport default ParticlesDefault;\n","export default __webpack_public_path__ + \"static/media/Arteveldehogeschool_favicon.209a12d1.png\";","import { useTexture } from \"@react-three/drei\";\nimport { folder, useControls } from \"leva\";\n\nimport particleImage from \"./assets/Arteveldehogeschool_favicon.png\";\n\nconst ParticlesSprites = () => {\n  const { color, complexity, opacity, radius, size, transparent } = useControls(\n    \"Components\",\n    {\n      \"Icosahedron (20 faces)\": folder({\n        radius: { label: \"Radius\", max: 3, min: 0.5, step: 0.1, value: 2 },\n        complexity: {\n          label: \"Complexity\",\n          hint: \"0 → 12 vertices\",\n          max: 50,\n          min: 0,\n          step: 1,\n          value: 0,\n        },\n      }),\n      \"Points Material\": folder({\n        color: { label: \"Color\", value: \"hsl(0, 100%, 100%)\" },\n        opacity: {\n          label: \"Opacity\",\n          hint: \"`transparent` must be `true`\",\n          max: 1,\n          min: 0,\n          value: 1,\n        },\n        size: { label: \"Size\", max: 2, min: 0.05, step: 0.01, value: 1 },\n        transparent: { label: \"Transparent\", value: false },\n      }),\n    }\n  );\n\n  const sprite = useTexture(particleImage, true);\n\n  return (\n    <points>\n      <icosahedronGeometry args={[radius, complexity]} />\n      <pointsMaterial\n        color={color}\n        map={sprite}\n        opacity={opacity}\n        size={size}\n        transparent={transparent}\n      />\n    </points>\n  );\n};\n\nexport default ParticlesSprites;\n","import { useControls } from \"leva\";\n\nimport Default from \"./Default\";\nimport Sprites from \"./Sprites\";\n\nconst PARTICLES = Object.freeze({\n  Default: \"Default\",\n  Sprites: \"Sprites\",\n});\n\nconst Particles = () => {\n  const { useParticles } = useControls(\"Components\", {\n    useParticles: {\n      label: \"Particles\",\n      options: PARTICLES,\n      value: PARTICLES.Default,\n    },\n  });\n\n  function enableParticles(name, element) {\n    return useParticles === name ? element : null;\n  }\n\n  return (\n    <>\n      {enableParticles(PARTICLES.Default, <Default />)}\n      {enableParticles(PARTICLES.Sprites, <Sprites />)}\n    </>\n  );\n};\n\nexport default Particles;\n","import { FrontSide } from \"three\";\nimport { Text } from \"@react-three/drei\";\n\nconst PlanesPlane = ({ color, name }) => {\n  const offset = 0.02;\n  const padding = 0.1;\n  const size = 3;\n\n  return (\n    <group>\n      <Text\n        position={[-size / 2 + padding / 2, size / 2 - padding, offset]}\n        anchorX=\"left\"\n      >\n        {name.en}\n        <meshBasicMaterial color={color} side={FrontSide} />\n      </Text>\n      <Text\n        position={[size / 2 - padding / 2, -size / 2 + padding, offset]}\n        anchorX=\"right\"\n      >\n        {name.nl}\n        <meshBasicMaterial color={color} side={FrontSide} />\n      </Text>\n    </group>\n  );\n};\n\nexport default PlanesPlane;\n","import { DoubleSide, MathUtils } from \"three\";\nimport { Plane } from \"@react-three/drei\";\n\nimport Text from \"./Text\";\n\nconst PlanesPlane = ({ color, name, rotation }) => {\n  const opacity = 0.25;\n  const size = 3;\n\n  return (\n    <group rotation={rotation.map((degrees) => MathUtils.degToRad(degrees))}>\n      <Plane args={[size, size]}>\n        <meshBasicMaterial\n          color={color}\n          opacity={opacity}\n          side={DoubleSide}\n          transparent={true}\n        />\n      </Plane>\n      {[\n        [0, 0, 0],\n        [0, 0, 90],\n        [0, 180, 0],\n        [0, 180, 90],\n      ].map((rotation) => (\n        <group\n          rotation={rotation.map((degrees) => MathUtils.degToRad(degrees))}\n        >\n          <Text color={color} name={name} />\n        </group>\n      ))}\n    </group>\n  );\n};\n\nexport default PlanesPlane;\n","import { useRef } from \"react\";\nimport { VertexNormalsHelper } from \"three-stdlib\";\nimport { useGLTF, useHelper } from \"@react-three/drei\";\nimport { useControls } from \"leva\";\n\nimport suzanneGlb from \"./assets/suzanne.glb\";\n\nconst SuzanneDefault = () => {\n  const { nodes, materials } = useGLTF(suzanneGlb, true);\n  const suzanneRef = useRef();\n\n  const { normalColor, enableVertexNormalsHelper, helperSize } = useControls(\n    \"Components\",\n    {\n      enableVertexNormalsHelper: {\n        label: \"Normals\",\n        value: false,\n      },\n      normalColor: { label: \"Normal Color\", value: \"cyan\" },\n      helperSize: {\n        label: \"Helper Size\",\n        max: 2,\n        min: 0,\n        step: 0.05,\n        value: 0.25,\n      },\n    }\n  );\n\n  useHelper(\n    enableVertexNormalsHelper ? suzanneRef : { current: null },\n    VertexNormalsHelper,\n    helperSize,\n    normalColor\n  );\n\n  return (\n    <mesh\n      ref={suzanneRef}\n      geometry={nodes.Suzanne.geometry}\n      material={materials[\"Paars\"]}\n    />\n  );\n};\n\nexport default SuzanneDefault;\n","import Plane from \"./Plane\";\nimport Suzanne from \"../Suzanne/Default\";\n\nconst PLANE = Object.freeze({\n  FRONTAL: Object.freeze({\n    color: \"yellow\",\n    name: Object.freeze({\n      en: \"Frontal Plane\",\n      nl: \"Frontaal Vlak\",\n    }),\n    rotation: [0, 0, 0],\n  }),\n  SAGITTAL: Object.freeze({\n    color: \"cyan\",\n    name: Object.freeze({\n      en: \"Sagittal Plane\",\n      nl: \"Sagittaal Vlak\",\n    }),\n    rotation: [0, 90, 0],\n  }),\n  TRANSVERSE: Object.freeze({\n    color: \"magenta\",\n    name: Object.freeze({\n      en: \"Transverse Plane\",\n      nl: \"Transversaal Vlak\",\n    }),\n    rotation: [-90, 0, 0],\n  }),\n});\n\nconst Planes = () => {\n  return (\n    <>\n      <Suzanne />\n      {[PLANE.FRONTAL, PLANE.TRANSVERSE, PLANE.SAGITTAL].map((props, index) => (\n        <Plane {...props} key={index} />\n      ))}\n    </>\n  );\n};\n\nexport default Planes;\n","import { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Text } from \"@react-three/drei\";\nimport { useControls } from \"leva\";\n\nimport { ROUTES } from \"./ROUTES\";\n\nconst ReactRouter = () => {\n  const navigate = useNavigate();\n  const [hoverSubTitle, setHoverSubTitle] = useState(false);\n  const [hoverTitle, setHoverTitle] = useState(false);\n\n  useControls(\"Components\", {\n    route: {\n      label: \"Route\",\n      options: ROUTES,\n      value: ROUTES.Root,\n      onChange: (route) => {\n        navigate(route);\n      },\n    },\n  });\n\n  return (\n    <>\n      <Text\n        color={hoverTitle ? \"hsl(0, 100%, 50%)\" : \"hsl(120, 100%, 70%)\"}\n        fontSize={1}\n        onClick={() => navigate(ROUTES.Alpha)}\n        onPointerOut={() => setHoverTitle(false)}\n        onPointerOver={() => setHoverTitle(true)}\n        text=\"React Router\"\n      />\n      <Text\n        color={hoverSubTitle ? \"hsl(0, 100%, 50%)\" : \"hsl(120, 100%, 70%)\"}\n        fontSize={0.5}\n        onClick={() => navigate(ROUTES.Root)}\n        onPointerOut={() => setHoverSubTitle(false)}\n        onPointerOver={() => setHoverSubTitle(true)}\n        position={[0, -0.75, 0]}\n        text=\"(go back)\"\n      />\n    </>\n  );\n};\n\nexport default ReactRouter;\n","import { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Text } from \"@react-three/drei\";\n\nimport { ROUTES } from \"./ROUTES\";\n\nconst WouterPathRouter = () => {\n  const navigate = useNavigate();\n  const [hover, setHover] = useState(false);\n\n  return (\n    <Text\n      color={hover ? \"hsl(0, 100%, 50%)\" : \"hsl(210, 100%, 70%)\"}\n      fontSize={0.5}\n      onClick={() => navigate(ROUTES.Omega)}\n      onPointerOut={() => setHover(false)}\n      onPointerOver={() => setHover(true)}\n      position={[0, 2, 0]}\n      text=\"Path Alpha\"\n    />\n  );\n};\n\nexport default WouterPathRouter;\n","import { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Text } from \"@react-three/drei\";\n\nimport { ROUTES } from \"./ROUTES\";\n\nconst ReactRouterPathOmega = () => {\n  const navigate = useNavigate();\n  const [hover, setHover] = useState(false);\n\n  return (\n    <Text\n      color={hover ? \"hsl(0, 100%, 50%)\" : \"hsl(30, 100%, 70%)\"}\n      fontSize={0.5}\n      onClick={() => navigate(ROUTES.Alpha)}\n      onPointerOut={() => setHover(false)}\n      onPointerOver={() => setHover(true)}\n      position={[0, -2, 0]}\n      text=\"Path Omega\"\n    />\n  );\n};\n\nexport default ReactRouterPathOmega;\n","import { useEffect, useRef } from \"react\";\nimport { Text } from \"@react-three/drei\";\nimport { Box, Flex } from \"@react-three/flex\";\nimport { Manager } from \"socket.io-client\";\nimport { ZeroFill } from \"App/utils\";\n\nconst Socket = () => {\n  const distanceRef = useRef();\n  const speedRef = useRef();\n\n  const PORT = 3001;\n  const manager = new Manager(`http://localhost:${PORT}`);\n  const socket = manager.socket(\"/\");\n\n  socket.on(\"connect\", () => {\n    console.log(\"Socket connected: \", socket.connected);\n  });\n\n  socket.on(\"disconnect\", () => {\n    console.log(\"Socket disconnected\");\n  });\n\n  useEffect(() => {\n    socket.on(\"telemetry\", (message) => {\n      const distance = new ZeroFill(message.distance, 6, \" km\");\n      const speed = new ZeroFill(message.speed, 3, \" km/u\");\n      if (distanceRef.current) distanceRef.current.text = distance;\n      if (speedRef.current) speedRef.current.text = speed;\n    });\n  }, [socket]);\n\n  return (\n    <Flex\n      flexDirection=\"row\"\n      flexWrap=\"wrap\"\n      justifyContent=\"space-between\"\n      position={[-3, 0, 0]}\n      size={[6, 0, 0]}\n    >\n      <Box>\n        <Text\n          color=\"hsl(210, 100%, 70%)\"\n          fontSize={1}\n          ref={distanceRef}\n          text=\"Socket.IO\"\n        />\n      </Box>\n      <Box>\n        <Text\n          color=\"hsl(30, 100%, 70%)\"\n          fontSize={1}\n          ref={speedRef}\n          text=\"Socket.IO\"\n        />\n      </Box>\n    </Flex>\n  );\n};\n\nexport default Socket;\n","import { useState } from \"react\";\nimport { DoubleSide, MathUtils } from \"three\";\nimport { useMatcapTexture } from \"@react-three/drei\";\nimport { animated, useSpring } from \"@react-spring/three\";\nimport * as easings from \"d3-ease\";\n\nconst Spring = (props) => {\n  const [toggle, setToggle] = useState(true);\n  const [matcap] = useMatcapTexture(\n    \"80CA23_B7EE37_D5FA4C_A3E434\", // Index or ID string, see: https://github.com/emmelleppi/matcaps/\n    1024 // Texture size (64, 128, 256, 512, 1024)\n  );\n  const { opacity, position } = useSpring({\n    config: {\n      duration: 200,\n      easing: easings.easeCubic,\n    },\n    delay: 100,\n    from: {\n      opacity: toggle ? 0.5 : 1,\n      position: toggle ? [0, 0, 0] : [0, 0, -2],\n    },\n    to: [\n      { opacity: toggle ? 1 : 0.5 },\n      { opacity: toggle ? 0.5 : 1 },\n      { opacity: toggle ? 1 : 0.5, position: toggle ? [0, 0, -2] : [0, 0, 0] },\n    ],\n  });\n\n  return (\n    <group {...props}>\n      <mesh onClick={() => setToggle(!toggle)}>\n        <ringGeometry\n          args={[\n            1.1, // innerRadius\n            1.9, // outerRadius\n            72, // thetaSegments\n            1, // phiSegments\n            MathUtils.degToRad(90), // thetaStart\n            MathUtils.degToRad(350), // thetaLength\n          ]}\n        />\n        <animated.meshMatcapMaterial\n          matcap={matcap}\n          opacity={opacity}\n          side={DoubleSide}\n          transparent={true}\n        />\n      </mesh>\n      <animated.mesh position={position}>\n        <torusGeometry\n          args={[\n            1.5, // radius\n            0.5, // tube\n            72, // radialSegments\n            32, // tubularSegments\n            MathUtils.degToRad(360), // arc\n          ]}\n        />\n        <meshMatcapMaterial matcap={matcap} opacity={0.25} transparent={true} />\n      </animated.mesh>\n    </group>\n  );\n};\n\nexport default Spring;\n","import { useRef, useState } from \"react\";\nimport { useFrame } from \"@react-three/fiber\";\nimport { folder, useControls } from \"leva\";\n\nimport Suzanne from \"./Default\";\n\nconst SuzanneRotating = () => {\n  const [clockwise, setClockwise] = useState(false);\n  const suzanneRef = useRef();\n\n  const { speed, rotate } = useControls(\"Components\", {\n    Rotation: folder({\n      rotate: { label: \"Rotate\", value: true },\n      speed: { label: \"Speed\", max: 0.5, min: 0, step: 0.005, value: 0.025 },\n    }),\n  });\n\n  useFrame(() => {\n    if (suzanneRef.current) {\n      suzanneRef.current.rotation.x +=\n        speed * (rotate ? 1 : 0) * (clockwise ? 1 : -1);\n      suzanneRef.current.rotation.y +=\n        speed * (rotate ? 1 : 0) * (clockwise ? 1 : -1);\n      suzanneRef.current.rotation.z +=\n        speed * (rotate ? 1 : 0) * (clockwise ? 1 : -1);\n    }\n  });\n\n  return (\n    <group ref={suzanneRef} onClick={() => setClockwise(!clockwise)}>\n      <Suzanne />\n    </group>\n  );\n};\n\nexport default SuzanneRotating;\n","import { MathUtils } from \"three\";\nimport { Plane, Text } from \"@react-three/drei\";\nimport { useControls } from \"leva\";\n\nimport CustomMaterial from \"./CustomMaterial\";\nimport Default from \"./Default\";\nimport Rotating from \"./Rotating\";\n\nconst SUZANNE = Object.freeze({\n  CustomMaterial: \"CustomMaterial\",\n  Default: \"Default\",\n  Rotating: \"Rotating\",\n});\n\nconst Suzanne = () => {\n  const { useSuzanne } = useControls(\"Components\", {\n    useSuzanne: {\n      label: \"Suzanne\",\n      options: {\n        \"Custom Material \": SUZANNE.CustomMaterial,\n        \"Default         \": SUZANNE.Default,\n        \"Default Rotating\": SUZANNE.Rotating,\n      },\n      value: SUZANNE.Default,\n    },\n  });\n\n  function enableSuzanne(name, element) {\n    return useSuzanne === name ? element : null;\n  }\n\n  return (\n    <>\n      <Text\n        color={\"white\"}\n        fillOpacity={1}\n        fontSize={0.25}\n        position={[0, -1.85, -1.499]}\n      >\n        SUZANNE\n      </Text>\n      <Plane\n        args={[4, 4]}\n        position={[0, 0, -1.5]}\n        rotation={[0, 0, 45].map((degree) => MathUtils.degToRad(degree))}\n      >\n        <meshBasicMaterial opacity={0.05} transparent={true} />\n      </Plane>\n      <>\n        {enableSuzanne(SUZANNE.CustomMaterial, <CustomMaterial />)}\n        {enableSuzanne(SUZANNE.Default, <Default />)}\n        {enableSuzanne(SUZANNE.Rotating, <Rotating />)}\n      </>\n    </>\n  );\n};\n\nexport default Suzanne;\n","import { DoubleSide } from \"three\";\n\nconst SvgLoaderShape = ({ color, index, shape }) => {\n  // console.log(\"Shape\", color, index);\n  return (\n    <mesh position={[0, 0, -0.05 * index]}>\n      <shapeGeometry args={[shape]} />\n      <meshBasicMaterial color={color} side={DoubleSide} />\n    </mesh>\n  );\n};\n\nexport default SvgLoaderShape;\n","import { MathUtils } from \"three\";\nimport Shape from \"./Shape\";\n\nconst SvgLoaderGroup = ({ paths, position, scale }) => {\n  // console.log(\"Group\", paths, scale);\n  return (\n    <group\n      position={position}\n      rotation={[180, 0, 0].map((degrees) => MathUtils.degToRad(degrees))}\n      scale={scale}\n    >\n      {paths.map((path, index) => {\n        // console.log(\"Path\", index, path, path.color, path.toShapes());\n        const shapes = path.toShapes();\n        const pathIndex = index;\n        return shapes.map((shape, index) => {\n          return (\n            <Shape\n              color={path.color}\n              index={index + pathIndex}\n              key={index}\n              shape={shape}\n            />\n          );\n        });\n      })}\n    </group>\n  );\n};\n\nexport default SvgLoaderGroup;\n","import { useEffect, useState } from \"react\";\nimport { SVGLoader } from \"three-stdlib\";\n\nimport Group from \"./Group\";\n\nconst SvgLoader = (props) => {\n  const [paths, setPaths] = useState([]);\n  const position = props.position;\n  const scale = [props.scale, props.scale, props.scale];\n\n  useEffect(() => {\n    const svgResource = new Promise((resolve) =>\n      new SVGLoader().load(props.source, (data) => resolve(data.paths))\n    );\n    svgResource.then(setPaths);\n  }, [props]);\n\n  return <Group paths={paths} position={position} scale={scale} />;\n};\n\nexport default SvgLoader;\n","export default __webpack_public_path__ + \"static/media/TexturedCube.2b78eebc.glb\";","import { useGLTF } from \"@react-three/drei\";\n\nimport cubeGlb from \"./assets/TexturedCube.glb\";\n\nconst TextureDefault = () => {\n  const { nodes, materials } = useGLTF(cubeGlb, true);\n  return (\n    <>\n      <group position={[-1.5, 0, 0]}>\n        <mesh\n          geometry={nodes.Cube_1.geometry}\n          material={materials[\"MaterialTexture\"]}\n        />\n        <mesh geometry={nodes.Cube_2.geometry} material={materials[\"Blue\"]} />\n      </group>\n      {nodes.Cube.children.map((child, index) => {\n        return (\n          <mesh\n            key={index}\n            geometry={child.geometry}\n            material={child.material}\n            position={[1.5, 0, 0]}\n          />\n        );\n      })}\n    </>\n  );\n};\n\nexport default TextureDefault;\n","export default __webpack_public_path__ + \"static/media/BakedNormals.03580610.glb\";","import { MathUtils } from \"three\";\nimport { useGLTF } from \"@react-three/drei\";\n\nimport cubeGlb from \"./assets/BakedNormals.glb\";\n\nconst TextureBakedNormals = () => {\n  const { nodes, materials } = useGLTF(cubeGlb, true);\n  return (\n    <mesh\n      geometry={nodes.Plane.geometry}\n      material={materials[\"Material\"]}\n      rotation={[90, 0, 0].map((degree) => MathUtils.degToRad(degree))}\n    />\n  );\n};\n\nexport default TextureBakedNormals;\n","import { useControls } from \"leva\";\n\nimport Default from \"./Default\";\nimport BakedNormals from \"./BakedNormals\";\n\nconst TEXTURE = Object.freeze({\n  Default: \"Default\",\n  BakedNormals: \"BakedNormals\",\n});\n\nconst Texture = () => {\n  const { useTexture } = useControls(\"Components\", {\n    useTexture: {\n      label: \"Type\",\n      options: {\n        \"Default      \": TEXTURE.Default,\n        \"Baked Normals\": TEXTURE.BakedNormals,\n      },\n      value: TEXTURE.Default,\n    },\n  });\n\n  function enableTexture(name, element) {\n    return useTexture === name ? element : null;\n  }\n\n  return (\n    <>\n      {enableTexture(TEXTURE.Default, <Default />)}\n      {enableTexture(TEXTURE.BakedNormals, <BakedNormals />)}\n    </>\n  );\n};\n\nexport default Texture;\n","const Tripod = (props) => {\n  const length = 1;\n  const radius = (length / 100) * 2;\n  const segments = 32;\n  const thickness = length / 100;\n\n  return (\n    <group {...props}>\n      <mesh>\n        <boxGeometry args={[1, 1, 1].map((value) => value * 1.5 * thickness)} />\n        <meshBasicMaterial color={0xffffff} />\n      </mesh>\n\n      {Array(3)\n        .fill()\n        .map((value, index) => {\n          return (\n            <group\n              key={index}\n              position={[0, 0, 0].map((v, i) =>\n                index === i ? length / 2 + thickness * 2 : v\n              )}\n            >\n              <mesh>\n                <boxGeometry\n                  args={[1, 1, 1].map(\n                    (v, i) => v * (index === i ? length : thickness)\n                  )}\n                />\n                <meshBasicMaterial color={0xff0000 >> (8 * index)} />\n              </mesh>\n              <mesh\n                position={[0, 0, 0].map((v, i) =>\n                  index === i ? length / 2 + thickness * 3 : v\n                )}\n              >\n                <sphereGeometry args={[radius, segments, segments]} />\n                <meshBasicMaterial color={0xffffff} />\n              </mesh>\n            </group>\n          );\n        })}\n    </group>\n  );\n};\n\nexport default Tripod;\n","import { useEffect, useRef } from \"react\";\nimport { DoubleSide, MathUtils } from \"three\";\nimport { useFrame } from \"@react-three/fiber\";\nimport { Box, Plane, PointerLockControls } from \"@react-three/drei\";\nimport { useControls } from \"leva\";\n\nimport { KeyboardControls } from \"App/utils\";\n\nconst BOX_SIZE = 1;\nconst MOVE_SPEED = {\n  FORWARD: 0.1,\n  RIGHT: 0.05,\n  UP: 0.5,\n};\n\nconst WorldDefault = (props) => {\n  const { enablePointerLockControls } = useControls(\"Controls\", {\n    enablePointerLockControls: { label: \"PointerLock\", value: true },\n  });\n\n  const pointerRef = useRef();\n\n  useEffect(() => {\n    KeyboardControls.addEventListeners();\n\n    if (pointerRef.current) {\n      pointerRef.current.getObject().position.y = 1.75; // m\n    }\n\n    return KeyboardControls.removeEventListeners;\n  }, [enablePointerLockControls]);\n\n  useFrame(() => {\n    if (pointerRef.current) {\n      pointerRef.current.moveForward(\n        MOVE_SPEED.FORWARD * KeyboardControls.forwardDirection\n      );\n      pointerRef.current.moveRight(\n        MOVE_SPEED.RIGHT * KeyboardControls.rightDirection\n      );\n      pointerRef.current.getObject().position.y +=\n        MOVE_SPEED.UP * KeyboardControls.upDirection; // m\n    }\n  });\n\n  return (\n    <>\n      {enablePointerLockControls && <PointerLockControls ref={pointerRef} />}\n      <Plane\n        args={[10, 10]}\n        rotation={[MathUtils.degToRad(-90), 0, 0]}\n        {...props}\n      >\n        <meshBasicMaterial color={0x666666} side={DoubleSide} />\n      </Plane>\n      <Box\n        args={[BOX_SIZE, BOX_SIZE, BOX_SIZE]}\n        position={[0, BOX_SIZE / 2, 0]}\n      >\n        <meshBasicMaterial color={0xff0000} opacity={0.75} transparent={true} />\n      </Box>\n    </>\n  );\n};\n\nexport default WorldDefault;\n","export default __webpack_public_path__ + \"static/media/bensound-evolution.4375aef0.mp3\";","import { useEffect, useRef } from \"react\";\nimport { AudioListener, AudioLoader, DoubleSide, MathUtils } from \"three\";\nimport { useFrame, useLoader } from \"@react-three/fiber\";\nimport { Plane, PointerLockControls, Text } from \"@react-three/drei\";\nimport { useControls } from \"leva\";\n\nimport { KeyboardControls } from \"App/utils\";\n\nimport evolutionAudioFile from \"./audio/bensound-evolution.mp3\";\n\nconst MOVE_SPEED = {\n  FORWARD: 0.1,\n  RIGHT: 0.05,\n  UP: 0.5,\n};\n\nconst WorldSound = () => {\n  const { enablePointerLockControls } = useControls(\"Controls\", {\n    enablePointerLockControls: { label: \"PointerLock\", value: true },\n  });\n\n  const pointerRef = useRef();\n  const audioRef = useRef();\n  const audioListener = new AudioListener();\n  const audioBuffer = useLoader(AudioLoader, evolutionAudioFile);\n\n  useEffect(() => {\n    KeyboardControls.addEventListeners();\n\n    if (pointerRef.current) {\n      pointerRef.current.getObject().position.y = 1.75; // m\n    }\n\n    return KeyboardControls.removeEventListeners;\n  }, [enablePointerLockControls]);\n\n  useEffect(() => {\n    if (audioRef.current) {\n      audioRef.current.setBuffer(audioBuffer);\n      audioRef.current.setLoop(true);\n      audioRef.current.setVolume(0.01);\n      audioRef.current.play();\n    }\n  }, [audioBuffer]);\n\n  useFrame(() => {\n    if (pointerRef.current) {\n      pointerRef.current.moveForward(\n        MOVE_SPEED.FORWARD * KeyboardControls.forwardDirection\n      );\n      pointerRef.current.moveRight(\n        MOVE_SPEED.RIGHT * KeyboardControls.rightDirection\n      );\n      pointerRef.current.getObject().position.y +=\n        MOVE_SPEED.UP * KeyboardControls.upDirection; // m\n    }\n  });\n\n  return (\n    <>\n      {enablePointerLockControls && <PointerLockControls ref={pointerRef} />}\n      <Plane args={[10, 10]} rotation={[MathUtils.degToRad(-90), 0, 0]}>\n        <meshBasicMaterial color={0x666666} side={DoubleSide} />\n      </Plane>\n      <audio args={[audioListener]} ref={audioRef} />\n      <mesh position={[0, 0, 0]}>\n        <Text position={[0, 1, 0]}>Music: https://www.bensound.com</Text>\n      </mesh>\n    </>\n  );\n};\n\nexport default WorldSound;\n","import { useControls } from \"leva\";\n\nimport Default from \"./Default\";\n// import PositionalSound from \"./PositionalSound\";\nimport Sound from \"./Sound\";\n\nconst WORLD = Object.freeze({\n  Default: \"Default\",\n  // PositionalSound: \"PositionalSound\", // Bug in Drei\n  Sound: \"Sound\",\n});\n\nconst World = () => {\n  const { useWorld } = useControls(\"Components\", {\n    useWorld: {\n      label: \"World\",\n      options: WORLD,\n      value: WORLD.Default,\n    },\n  });\n\n  function enableWorld(name, element) {\n    return useWorld === name ? element : null;\n  }\n\n  return (\n    <>\n      {enableWorld(WORLD.Default, <Default />)}\n      {/* {enableWorld(WORLD.PositionalSound, <PositionalSound />)} */}\n      {enableWorld(WORLD.Sound, <Sound />)}\n    </>\n  );\n};\n\nexport default World;\n","import { Suspense } from \"react\";\nimport {\n  HashRouter as Router,\n  Navigate,\n  Route,\n  Routes,\n} from \"react-router-dom\";\nimport { MathUtils } from \"three\";\nimport { Stats } from \"@react-three/drei\";\nimport { useControls } from \"leva\";\n\nimport {\n  Animation,\n  Button,\n  Clock,\n  Cube,\n  Effects,\n  Composition,\n  Face,\n  Gauge,\n  Geometry2D,\n  Geometry3D,\n  Helpers,\n  Image,\n  InputControls,\n  Lighting,\n  Logo,\n  LoremIpsum,\n  Normals,\n  Particles,\n  Planes,\n  ReactRouter,\n  ReactRouterPathAlpha,\n  ReactRouterPathOmega,\n  Socket,\n  Spring,\n  Suzanne,\n  Texture,\n  Tripod,\n  World,\n  ROUTES,\n} from \"./components\";\n\nconst COMPONENT = Object.freeze({\n  Animation: \"Animation\",\n  Button: \"Button\",\n  Clock: \"Clock\",\n  Composition: \"Composition\",\n  Cube: \"Cube\",\n  Cube_Positioned: \"Cube_Positioned\",\n  Face: \"Face\",\n  Gauge: \"Gauge\",\n  Geometry2D: \"Geometry2D\",\n  Geometry3D: \"Geometry3D\",\n  Image: \"Image\",\n  Logo: \"Logo\",\n  LoremIpsum: \"LoremIpsum\",\n  None: \"None\",\n  Normals: \"Normals\",\n  Particles: \"Particles\",\n  Planes: \"Planes\",\n  ReactRouter: \"ReactRouter\",\n  Socket: \"Socket\",\n  Spring: \"Spring\",\n  Suzanne: \"Suzanne\",\n  Texture: \"Texture\",\n  Tripod: \"Tripod\",\n  World: \"World\",\n});\n\nconst Content = () => {\n  const { enableStats } = useControls(\"General\", {\n    enableStats: { label: \"Stats\", value: false },\n  });\n\n  const { useComponent } = useControls(\"Components\", {\n    useComponent: {\n      label: \"Component\",\n      options: {\n        \"None                  \": COMPONENT.None,\n        \"Animation             \": COMPONENT.Animation,\n        \"Button                \": COMPONENT.Button,\n        \"Clock                 \": COMPONENT.Clock,\n        \"Composition           \": COMPONENT.Composition,\n        \"Cube                  \": COMPONENT.Cube,\n        \"Cube (positioned)     \": COMPONENT.Cube_Positioned,\n        \"Face                  \": COMPONENT.Face,\n        \"Gauge                 \": COMPONENT.Gauge,\n        \"Geometry 2D           \": COMPONENT.Geometry2D,\n        \"Geometry 3D           \": COMPONENT.Geometry3D,\n        \"Image                 \": COMPONENT.Image,\n        \"Logo                  \": COMPONENT.Logo,\n        \"Lorem Ipsum           \": COMPONENT.LoremIpsum,\n        \"Normals               \": COMPONENT.Normals,\n        \"Particles             \": COMPONENT.Particles,\n        \"Planes                \": COMPONENT.Planes,\n        \"ReactRouter           \": COMPONENT.ReactRouter,\n        \"Socket (Socket.IO 4.4)\": COMPONENT.Socket,\n        \"Spring                \": COMPONENT.Spring,\n        \"Suzanne               \": COMPONENT.Suzanne,\n        \"Texture               \": COMPONENT.Texture,\n        \"Tripod                \": COMPONENT.Tripod,\n        \"World                 \": COMPONENT.World,\n      },\n      value: COMPONENT.Suzanne,\n    },\n  });\n\n  function enableComponent(name, element) {\n    return useComponent === name ? element : null;\n  }\n\n  return (\n    <>\n      {enableStats && <Stats />}\n      <Effects />\n      <Helpers />\n      <InputControls />\n      <Lighting />\n\n      <Router>\n        {enableComponent(COMPONENT.Button, <Button />)}\n        {enableComponent(COMPONENT.Cube, <Cube />)}\n        {enableComponent(\n          COMPONENT.Cube_Positioned,\n          <Cube\n            position={[1, 1, 1]}\n            rotation={[45, 45, 45].map((degrees) =>\n              MathUtils.degToRad(degrees)\n            )}\n          />\n        )}\n        {enableComponent(COMPONENT.Face, <Face />)}\n        {enableComponent(COMPONENT.Gauge, <Gauge />)}\n        {enableComponent(COMPONENT.ReactRouter, <ReactRouter />)}\n        {enableComponent(COMPONENT.Socket, <Socket />)}\n        <Suspense fallback={null}>\n          {enableComponent(COMPONENT.Animation, <Animation />)}\n          {enableComponent(COMPONENT.Clock, <Clock />)}\n          {enableComponent(COMPONENT.Composition, <Composition />)}\n          {enableComponent(COMPONENT.Geometry2D, <Geometry2D />)}\n          {enableComponent(COMPONENT.Geometry3D, <Geometry3D />)}\n          {enableComponent(COMPONENT.Image, <Image />)}\n          {enableComponent(COMPONENT.Logo, <Logo />)}\n          {enableComponent(COMPONENT.LoremIpsum, <LoremIpsum />)}\n          {enableComponent(COMPONENT.Normals, <Normals />)}\n          {enableComponent(COMPONENT.Particles, <Particles />)}\n          {enableComponent(COMPONENT.Planes, <Planes />)}\n          {enableComponent(COMPONENT.Spring, <Spring />)}\n          {enableComponent(COMPONENT.Suzanne, <Suzanne />)}\n          {enableComponent(COMPONENT.Texture, <Texture />)}\n          {enableComponent(COMPONENT.World, <World />)}\n        </Suspense>\n        {enableComponent(COMPONENT.Tripod, <Tripod />)}\n        <Routes>\n          <Route element={<Navigate to={ROUTES.Root} />} path={ROUTES.All} />\n          <Route element={<ReactRouterPathAlpha />} path={ROUTES.Alpha} />\n          <Route element={<ReactRouterPathOmega />} path={ROUTES.Omega} />\n          <Route element={null} path={ROUTES.Root} />\n        </Routes>\n      </Router>\n    </>\n  );\n};\n\nexport default Content;\n","import { Canvas } from \"@react-three/fiber\";\nimport { Leva } from \"leva\";\n\nimport Content from \"./Content\";\n\nimport \"./index.css\";\n\nconst App = () => {\n  return (\n    <>\n      <Leva flat={true} oneLineLabels={true} />\n      <Canvas linear={false} shadows={true}>\n        <Content />\n      </Canvas>\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { StrictMode } from \"react\";\nimport { render } from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nrender(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}