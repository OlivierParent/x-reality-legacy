{"version":3,"sources":["App/components/Animation/animation.glb","App/components/Animation/index.jsx","App/components/Button/index.jsx","App/components/Button/Spring.jsx","App/utils/KeyboardControls/index.js","App/utils/MathCircle/index.js","App/utils/ZeroFill/index.js","App/components/Clock/Analogue.jsx","App/components/Clock/Digital.jsx","App/components/Cube/index.jsx","App/components/Face/index.jsx","App/components/Gauge/index.jsx","App/components/Image/UV_Grid_Sm.jpg","App/components/Image/index.jsx","App/components/Image/arteveldehogeschool_logo.svg","App/components/Image/SVG_logo.svg","App/components/Image/Svg.jsx","App/components/Lighting/index.jsx","App/components/Lighting/indexGui.jsx","App/components/Lighting/Studio.jsx","App/components/Lighting/StudioGui.jsx","App/components/Lighting/ThreePoint.jsx","App/components/Lighting/ThreePointGui.jsx","App/components/Logo/gltf-logo.glb","App/components/Logo/index.jsx","App/components/Logo/Double.jsx","App/lib/FontFamily/index.js","App/lib/MatCap/index.js","App/components/LoremIpsum/index.jsx","App/components/Normals/normals.glb","App/components/Normals/index.jsx","App/components/Socket/index.jsx","App/components/Spring/index.jsx","App/components/Suzanne/suzanne.glb","App/components/Suzanne/index.jsx","App/components/Suzanne/MatcapTexture.jsx","App/components/Suzanne/NormalTexture.jsx","App/components/Suzanne/PhysicalMaterial.jsx","App/components/Suzanne/StandardMaterial.jsx","App/components/Suzanne/ToonMaterial.jsx","App/components/SvgLoader/Shape.jsx","App/components/SvgLoader/Group.jsx","App/components/SvgLoader/index.jsx","App/components/Texture/TexturedCube.glb","App/components/Texture/index.jsx","App/components/Texture/BakedNormals.glb","App/components/Texture/BakedNormals.jsx","App/components/Tripod/index.jsx","App/components/World/index.jsx","App/components/World/audio/bensound-badass.mp3","App/components/World/audio/bensound-evolution.mp3","App/components/World/Sound.jsx","App/components/Wouter/index.jsx","App/components/Wouter/PathRouter.jsx","App/components/Wouter/PathWouter.jsx","App/Content.jsx","App/index.jsx","reportWebVitals.js","index.jsx"],"names":["Animation","useGLTF","animationGlb","animations","scene","animationRef","useRef","mixer","useMemo","AnimationMixer","useEffect","current","clipAction","play","useFrame","state","delta","update","object","ref","Button","useState","hover","setHover","color","setColor","onClick","onDoubleClick","onPointerOut","onPointerOver","opacity","transparent","args","Text","fontSize","position","Spring","props","toggle","setToggle","colorCurrent","setColorCurrent","useSpring","rotation","MathUtils","degToRad","scale","group","mesh","meshBasicMaterial","AZERTY","LEFT","UP","DIRECTION","QWERTY","KeyboardControls","this","event","console","log","code","info","window","addEventListener","keyDownHandler","keyUpHandler","removeEventListener","MathCircle","radius","degrees","angle","x","Math","cos","y","sin","ZeroFill","number","zeros","postfix","zeroFill","floor","toString","string","length","isHour","tick","CLOCK","HAND","HH","LENGTH","WIDTH","MM","SS","COLOR","THICKNESS","MARK","OFFSET","ClockAnalogue","clockRef","handHoursRef","handMinutesRef","handSecondsRef","angleStart","d","Date","z","getHours","getMinutes","getSeconds","map","value","Array","fill","index","getCoordinates","receiveShadow","side","DoubleSide","castShadow","radians","ClockDigital","text","toLocaleTimeString","Cube","colors","random","meshMatcapMaterial","Face","NEEDLE_STEP","Gauge","TICK_MARKS","label","angleStep","valueRange","valueStep","needleRef","needleAngle","needleValue","needleStep","forEach","tickMark","children","material","setColorName","metalness","roughness","Image","texture","useTexture","uvGrid","offset","Vector2","repeat","center","ImageSvg","source","logoNl","svgLogo","Lighting","intensity","penumbra","LightingGui","useControls","ambientLightColor","ambientLightIntensity","max","min","directionalLightColor","directionalLightIntensity","pointLightColor","pointLightIntensity","pointLightPosition","spotLightColor","spotLightIntensity","spotLightPosition","spotLightTarget","useThree","target","Object3D","add","directionalLightRef","pointLightRef","spotLightRef","useHelper","DirectionalLightHelper","PointLightHelper","SpotLightHelper","translateX","translateZ","LightingStudio","frontLightColor","frontLightIntensity","leftLightColor","leftLightIntensity","rightLightColor","rightLightIntensity","frontLightRef","leftLightRef","rightLightRef","LightingThreePoint","LightingThreePointGui","backLightColor","backLightIntensity","fillLightColor","fillLightIntensity","keyLightColor","keyLightIntensity","backLightRef","fillLightRef","keyLightRef","Logo","clockwise","setClockwise","gltfLogo","gltfLogoGlb","logoRef","LogoDouble","logo1Ref","logo2Ref","clone","FontFamily","Architects_Daughter","Press_Start_2P","Roboto_Slab","MatCap","id","GREEN_CRYSTAL","SILVERY","TITANIUM","WORN_GOLD","size","XS","SM","MD","LG","XL","LoremIpsum","useMatcapTexture","matcapGreenCrystal","matcapSilvery","matcapWornGold","font","matcap","outlineColor","outlineWidth","Normals","normals","normalsGlb","normalsRef","Socket","distanceRef","speedRef","socket","Manager","on","connected","message","distance","speed","flexDirection","flexWrap","justifyContent","config","duration","easing","easings","delay","from","to","Suzanne","rotate","setRotate","suzanneGlb","nodes","materials","objectRef","geometry","SuzanneMatcapTexture","SuzanneNormalTexture","useNormalTexture","anisotropy","normalMap","SuzannePhysicalMaterial","dithering","emissive","emissiveIntensity","refractionRatio","wireframe","clearcoat","clearcoatRoughness","ior","reflectivity","sheen","sheenRoughness","sheenTint","specularIntensity","specularTint","thickness","transmission","v","SuzanneStandardMaterial","SuzanneToonMaterial","SvgLoaderShape","shape","SvgLoaderGroup","paths","path","shapes","toShapes","pathIndex","Shape","SvgLoader","setPaths","Promise","resolve","SVGLoader","load","data","then","Group","Texture","cubeGlb","Cube_1","Cube_2","child","TextureBakedNormals","Plane","degree","Tripod","i","MOVE_SPEED","World","enablePointerLockControls","pointerRef","addEventListeners","getObject","removeEventListeners","moveForward","forwardDirection","moveRight","rightDirection","upDirection","PointerLockControls","BOX_SIZE","extend","PositionalAudioHelper","WorldSound","audioRef","audioListener","AudioListener","audioBuffer","useLoader","AudioLoader","evolutionAudioFile","positionalAudioRef","setBuffer","setLoop","setVolume","PositionalAudio","loop","url","badassAudioFile","Wouter","useLocation","setLocation","route","WouterPathRouter","WouterPathWouter","currentLocation","location","hash","replace","useHashLocation","handler","useCallback","Content","enableOrbitControls","showEffects","showStats","useComponent","options","useLighting","showAxesHelper","showGizmoHelper","showGridHelper","showLighting","name","showComponent","base","process","hook","OrbitControls","enablePan","enableRotate","enableZoom","GizmoHelper","alignment","margin","GizmoViewport","axisColors","labelColor","Stats","height","luminanceThreshold","luminanceSmoothing","fallback","component","App","linear","shadows","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","render","document","getElementById"],"mappings":"wPAAe,MAA0B,sC,OCyB1BA,EAlBG,WAChB,MAA8BC,YAAQC,GAAc,GAA5CC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,MACdC,EAAeC,mBACfC,EAAQC,mBAAQ,kBAAM,IAAIC,mBAAkB,IAYlD,OAVAC,qBAAU,WACJL,EAAaM,SACfJ,EAAMK,WAAWT,EAAW,GAAIE,EAAaM,SAASE,SAEvD,CAACV,EAAYI,IAEhBO,aAAS,SAACC,EAAOC,GACfT,EAAMU,OAAOD,MAGR,2BAAWE,OAAQd,EAAOe,IAAKd,K,SCOzBe,EA1BA,WACb,MAA0BC,oBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,mBAAS,OAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAEA,OACE,wBACEC,QAAS,kBAAMD,EAAS,WACxBE,cAAe,kBAAMF,EAAS,MAC9BG,aAAc,kBAAML,GAAS,IAC7BM,cAAe,kBAAMN,GAAS,IAJhC,UAME,iCACE,oCACEC,MAAOA,EACPM,QAASR,EAAQ,IAAO,EACxBS,aAAa,IAEf,+BAAeC,KAAM,CAAC,EAAG,SAE3B,cAACC,EAAA,EAAD,CAAMT,MAAM,QAAQU,SAAU,GAAKC,SAAU,CAAC,EAAG,EAAG,KAApD,2B,gBCiBSC,EAlCA,SAACC,GACd,MAA0BhB,oBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA4BF,oBAAS,GAArC,mBAAOiB,EAAP,KAAeC,EAAf,KACA,EAAwClB,mBAAS,UAAjD,mBAAOmB,EAAP,KAAqBC,EAArB,KACA,EAAqCC,oBAAU,CAC7CZ,QAASQ,EAAS,GAAM,GACxBK,SAAUL,EAAS,CAACM,YAAUC,UAAU,IAAK,EAAG,GAAK,CAAC,EAAG,EAAG,GAC5DC,MAAOxB,EAAQ,CAAC,IAAK,KAAM,GAAK,CAAC,EAAG,EAAG,KAHjCQ,EAAR,EAAQA,QAASa,EAAjB,EAAiBA,SAAUG,EAA3B,EAA2BA,MAM3B,OACE,eAAC,WAASC,MAAV,2BACMV,GADN,IAEEX,QAAS,kBAAMa,GAAWD,IAC1BX,cAAe,kBAAMc,EAAgBD,GAAgB,IACrDZ,aAAc,kBAAML,GAAS,IAC7BM,cAAe,kBAAMN,GAAS,IAC9BoB,SAAUA,EANZ,UAQE,eAAC,WAASK,KAAV,CAAeF,MAAOA,EAAtB,UACE,+BAAed,KAAM,CAAC,EAAG,MACzB,cAAC,WAASiB,kBAAV,CACEzB,MAAO,SACPM,QAASA,EACTC,aAAa,OAGjB,cAACE,EAAA,EAAD,CAAMT,MAAM,QAAQU,SAAU,GAAKC,SAAU,CAAC,EAAG,EAAG,KAApD,4B,8BChCAe,EAAS,CACbC,KAAM,OACNC,GAAI,QAEAC,GACG,EADHA,GAEG,EAFHA,EAGK,EAHLA,GAIG,EAJHA,EAKE,EALFA,EAMG,EANHA,EAOA,EAEAC,EAAS,CACbH,KAAM,OACNC,GAAI,Q,yHAGAG,E,mGAMJ,WACE,OAAO,YAAAC,KAAP,Q,0BAGF,WACE,OAAO,YAAAA,KAAP,Q,uBAGF,WACE,OAAO,YAAAA,KAAP,Q,4BAGF,SAAsBC,GAEpB,OADAC,QAAQC,IAAI,mCAAZ,WAAoDF,EAAMG,KAA1D,MACQH,EAAMG,MACZ,IAAK,YACL,IAAK,OACH,YAAAL,EAAgB,GAAhB,GAAqCF,EACrC,MACF,IAAK,YACL,KAAK,YAAAE,EAAgB,GAAhB,GAA2BJ,KAC9B,YAAAI,EAAgB,GAAhB,GAAmCF,EACnC,MACF,IAAK,aACL,IAAK,OACH,YAAAE,EAAgB,GAAhB,GAAmCF,EACnC,MACF,IAAK,UACL,KAAK,YAAAE,EAAgB,GAAhB,GAA2BH,GAC9B,YAAAG,EAAgB,GAAhB,GAAqCF,EACrC,MACF,IAAK,OACH,YAAAE,EAAgB,GAAhB,GAAgCF,EAChC,MACF,IAAK,OACH,YAAAE,EAAgB,GAAhB,GAAgCF,K,0BAMtC,SAAoBI,GAElB,OADAC,QAAQC,IAAI,iCAAZ,WAAkDF,EAAMG,KAAxD,MACQH,EAAMG,MACZ,IAAK,YACL,IAAK,UACL,IAAK,OACL,KAAK,YAAAL,EAAgB,GAAhB,GAA2BH,GAC9B,YAAAG,EAAgB,GAAhB,GAAqCF,EACrC,MACF,IAAK,YACL,IAAK,aACL,IAAK,OACL,KAAK,YAAAE,EAAgB,GAAhB,GAA2BJ,KAC9B,YAAAI,EAAgB,GAAhB,GAAmCF,EACnC,MACF,IAAK,OACL,IAAK,OACH,YAAAE,EAAgB,GAAhB,GAAgCF,K,+BAMtC,WACEK,QAAQG,KAAK,uCACbC,OAAOC,iBAAiB,UAAWR,EAAiBS,gBACpDF,OAAOC,iBAAiB,QAASR,EAAiBU,gB,kCAGpD,WACEP,QAAQG,KAAK,0CACbC,OAAOI,oBAAoB,UAAWX,EAAiBS,gBACvDF,OAAOI,oBAAoB,QAASX,EAAiBU,gB,+BAGvD,WACEP,QAAQC,IAAR,YAAYH,KAAZ,OACA,YAAAA,KAAA,MAAiBN,EACjBQ,QAAQC,IAAR,YAAYH,KAAZ,S,+BAGF,WACE,YAAAA,KAAA,MAAiBF,M,2BAzFfC,E,qBACuBF,I,sBADvBE,E,qBAEeD,I,sBAFfC,E,qBAGqBF,I,sBAHrBE,E,qBAIkBF,IAyFTE,Q,+CC7GTY,E,WAIJ,aAAyB,IAAbC,EAAY,uDAAH,EAAG,oEAHd,IAGc,gDAFf,IAGP,YAAAZ,KAAA,MAAeY,E,uCAGjB,WACE,OAAO,YAAAZ,KAAP,O,IAGF,SAAUa,GACR,YAAAb,KAAA,MAAcZ,YAAUC,SAASwB,K,4BAGnC,SAAeA,GAKb,OAJAb,KAAKc,MAAQD,EAIN,CAAEE,EAHCC,KAAKC,IAAIjB,KAAKc,OAAd,YAAuBd,KAAvB,MAGEkB,EAFFF,KAAKG,IAAInB,KAAKc,OAAd,YAAuBd,KAAvB,W,KAMCW,I,wEC3BTS,E,WAKJ,aAAkD,IAAtCC,EAAqC,uDAA5B,EAAGC,EAAyB,uDAAjB,EAAGC,EAAc,uDAAJ,GAAI,+LAC/CvB,KAAKqB,OAASA,EACd,YAAArB,KAAA,MAAgBuB,EAChB,YAAAvB,KAAA,MAAcsB,E,wCAGhB,WACE,OAAOtB,KAAKwB,SAAL,YAAcxB,KAAd,Q,IAGT,SAAWqB,GACT,YAAArB,KAAA,MAAegB,KAAKS,MAAMJ,GAAQK,a,sBAGpC,WACE,OAAO1B,KAAKqB,OAAL,YAAcrB,KAAd,Q,sBAGT,SAAS2B,GACP,KAAOA,EAAOC,OAAP,YAAgB5B,KAAhB,OACL2B,EAAM,WAAOA,GAEf,OAAOA,M,KAIIP,ICzBf,SAASS,EAAOC,GACd,QAASA,EAAO,GAGlB,IAMMC,EAAQ,CACZC,KAAM,CACJC,GAAI,CACFC,OAAQ,IACRC,MAAO,KAETC,GAAI,CAAEF,OAAQ,KACdG,GAAI,CAAEC,MAAO,SAAUJ,OAAQ,KAC/BK,UAAW,KAEbC,KAAM,CACJP,GAAI,CACFK,MAAO,SACPJ,OAAQ,GACRC,MAAO,KAETC,GAAI,CACFE,MAAO,SACPJ,OAAQ,IACRC,MAAO,KAETM,OAAQ,KA0KGC,GAnKO,SAAC7D,GACrB,IAAM8D,EAAW7F,mBACX8F,EAAe9F,mBACf+F,EAAiB/F,mBACjBgG,EAAiBhG,mBAEjBiG,EAAa3D,YAAUC,SAAS,IAqBtC,OAnBA/B,aAAS,WACP,IAAM0F,EAAI,IAAIC,KACVL,EAAazF,UACfyF,EAAazF,QAAQgC,SAAS+D,EAAI9D,YAAUC,UACF,IAAvC2D,EAAEG,WAAaH,EAAEI,aA7Cf,MAgDHP,EAAe1F,UACjB0F,EAAe1F,QAAQgC,SAAS+D,EAAI9D,YAAUC,UAC1B,EAAlB2D,EAAEI,eAGFN,EAAe3F,UACjB2F,EAAe3F,QAAQgC,SAAS+D,EAAI9D,YAAUC,UAC1B,EAAlB2D,EAAEK,kBAMN,gDAAO1F,IAAKgF,GAAc9D,GAA1B,cACE,kCACE,cAACJ,EAAA,EAAD,CACET,MAAM,QACNU,SAAU,GACVC,SAAU,CAAC,GAAI,IAAM,KAAM2E,KAAI,SAACC,GAAD,OA/DtB,EA+DiCA,KAH5C,iCAOCC,MAvEE,IAwEAC,KAAK,MACLH,KAAI,SAACC,EAAOG,GACX,IACM5C,EAAiB,IAAR4C,EA3EhB,GA2EoC,GACnC,EAFU,IAAI/C,EAAkC,EAAvBoB,EAAMS,KAAKP,GAAGC,QAEpByB,eAAe7C,GAA1BC,EAAR,EAAQA,EAAGG,EAAX,EAAWA,EACX,OACE,cAACzC,EAAA,EAAD,CACET,MAAO+D,EAAMC,KAAKK,GAAGC,MACrB5D,SAAU,GAEVC,SAAU,CAACoC,EAAGG,EAAG,KACjB5B,MAAOkE,MAAM,GAAGC,KAAK,GALvB,UAOI,GAAKC,GAAOhC,YAJTgC,SASf,wBAAOvE,SAAU,CAAC,EAAG,EAAG4D,GAAxB,UACE,uBAAMa,eAAe,EAArB,UACE,gCAAgBpF,KAAM,CAxFb,EAHR,MA4FD,sCACEF,QAAS,IACTuF,KAAMC,aACNvF,aAAa,OAGjB,wBAAOI,SAAU,CAAC,EAAG,EAAGoD,EAAMC,KAAKO,UAAY,GAA/C,UACE,uBAAO5D,SAAU,CAAC,EAAG,EAAGoD,EAAMC,KAAKO,UAAY,GAAI5E,IAAKiF,EAAxD,SACE,uBAAMmB,YAAY,EAAMpF,SAAU,CAACoD,EAAMC,KAAKC,GAAGC,OAAS,EAAG,EAAG,GAAhE,UACE,6BACE1D,KAAM,CACJuD,EAAMC,KAAKC,GAAGC,OACd,IACAH,EAAMC,KAAKO,aAGf,8CAGJ,uBACE5D,SAAU,CAAC,EAAG,EAA0B,EAAvBoD,EAAMC,KAAKO,WAC5B5E,IAAKkF,EAFP,SAIE,uBAAMkB,YAAY,EAAMpF,SAAU,CAACoD,EAAMC,KAAKI,GAAGF,OAAS,EAAG,EAAG,GAAhE,UACE,6BACE1D,KAAM,CAACuD,EAAMC,KAAKI,GAAGF,OAAQ,IAAMH,EAAMC,KAAKO,aAEhD,8CAGJ,uBACE5D,SAAU,CACR,EACA,EACuB,EAAvBoD,EAAMC,KAAKO,UAAgBR,EAAMC,KAAKO,UAAY,GAEpD5E,IAAKmF,EANP,SAQE,uBAAMiB,YAAY,EAAMpF,SAAU,CAACoD,EAAMC,KAAKK,GAAGH,OAAS,EAAG,EAAG,GAAhE,UACE,6BACE1D,KAAM,CAACuD,EAAMC,KAAKK,GAAGH,OAAQ,IAAMH,EAAMC,KAAKO,aAEhD,sCAAsBvE,MAAO+D,EAAMC,KAAKK,GAAGC,gBAIhDkB,MA1IE,IA2IAC,KAAK,MACLH,KAAI,SAACC,EAAOG,GACX,IAAMM,EAAU5E,YAAUC,SAAU,EAAYqE,GAEhD,OACE,uBAEEvE,SAAU,CAAC,EAAG,EAAG6E,GACjBrF,SAAU,CAAC,EAAG,EAAG,MAHnB,SAKE,uBACEA,SAAU,CAnJT,EAqJGoD,EAAMS,KAAKC,QACVZ,EAAO6B,GACJ3B,EAAMS,KAAKP,GAAGC,OAAS,IACvBH,EAAMS,KAAKP,GAAGC,QAChB,EACJ,EACA,GATJ,UAYE,6BACE1D,KAAM,CACJqD,EAAO6B,GACH3B,EAAMS,KAAKP,GAAGC,OACdH,EAAMS,KAAKJ,GAAGF,OAClBL,EAAO6B,GAAS3B,EAAMS,KAAKP,GAAGE,MAAQJ,EAAMS,KAAKJ,GAAGD,MACpD,OAGJ,sCACEnE,MACY,IAAV0F,EACI,IACA7B,EAAO6B,GACP3B,EAAMS,KAAKP,GAAGK,MACdP,EAAMS,KAAKJ,GAAGE,YA/BnBoB,MAsCb,uBACEK,YAAY,EACZpF,SAAU,CAAC,EAAG,EAAG,KACjBQ,SAAU,EAAE,GAAI,EAAG,GAAGmE,KAAI,SAACzC,GAAD,OAAazB,YAAUC,SAASwB,MAH5D,UAKE,kCAAkBrC,KAAM,CAAC,GAAK,IAA6B,EAAvBuD,EAAMC,KAAKO,UAAe,MAC9D,oDCjLK0B,GAlBM,SAACpF,GACpB,IAAM8D,EAAW7F,mBAcjB,OAZAI,qBAAU,WACJyF,EAASxF,UACXwF,EAASxF,QAAQgC,SAAS4B,EAAI3B,YAAUC,UAAU,OAEnD,IAEH/B,aAAS,WACHqF,EAASxF,UACXwF,EAASxF,QAAQ+G,MAAO,IAAIjB,MAAOkB,yBAIhC,cAAC1F,EAAA,EAAD,aAAMC,SAAU,EAAGf,IAAKgF,GAAc9D,KCYhCuF,GA7BF,SAACvF,GACZ,IAAMwF,EAAS,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QAClDrG,EAAQqG,EAAOrD,KAAKS,MAAMT,KAAKsD,SAAWD,EAAOzC,SACvD,EAA4B/D,oBAAS,GAArC,mBAAOiB,EAAP,KAAeC,EAAf,KACA,EAA8BG,oBAAU,CACtCZ,QAASQ,EAAS,EAAI,GACtBH,SAAUG,EAAS,CAAC,EAAG,EAAG,GAInB,CAAC,EAAG,EAAG,GAAGwE,KAAI,SAACC,GAAD,OAA4B,EAAhBvC,KAAKsD,SAAe,GAAKf,OANpDjF,EAAR,EAAQA,QAASK,EAAjB,EAAiBA,SASjB,OACE,eAAC,WAASa,KAAV,2BACMX,GADN,IAEEX,QAAS,kBAAMa,GAAWD,IAC1BH,SAAUA,EAHZ,UAKE,6BAAaH,KAAM,CAAC,EAAG,EAAG,KAC1B,cAAC,WAAS+F,mBAAV,CACEvG,MAAOA,EACPM,QAASA,EACTC,aAAa,S,UCXNiG,GAZF,SAAC3F,GACZ,OACE,cAAC,KAAD,yBACEL,KAAM,CAAC,GAAI,IACXW,SAAU,CAACC,YAAUC,UAAU,IAAK,EAAG,IACnCR,GAHN,aAKE,6CCHA4F,IACG,IADHA,GAEA,GA8FSC,GA3FD,SAAC7F,GACb,IAAM8F,EAAa,CACjB,CAAE3G,MAAO,QAAS4G,MAAO,IAAKjH,IAAKb,mBAAUyG,MAAO,GACpD,CAAEvF,MAAO,QAAS4G,MAAO,KAAMjH,IAAKb,mBAAUyG,MAAO,KACrD,CAAEvF,MAAO,QAAS4G,MAAO,KAAMjH,IAAKb,mBAAUyG,MAAO,KACrD,CAAEvF,MAAO,QAAS4G,MAAO,KAAMjH,IAAKb,mBAAUyG,MAAO,KACrD,CAAEvF,MAAO,QAAS4G,MAAO,KAAMjH,IAAKb,mBAAUyG,MAAO,KACrD,CAAEvF,MAAO,QAAS4G,MAAO,KAAMjH,IAAKb,mBAAUyG,MAAO,KACrD,CAAEvF,MAAO,SAAU4G,MAAO,KAAMjH,IAAKb,mBAAUyG,MAAO,KACtD,CAAEvF,MAAO,MAAO4G,MAAO,KAAMjH,IAAKb,mBAAUyG,MAAO,KACnD,CAAEvF,MAAO,MAAO4G,MAAO,KAAMjH,IAAKb,mBAAUyG,MAAO,MAE/CsB,EAlBY,KAkBeF,EAAW/C,OAAS,GAC/CmB,EAAa3D,YAAUC,UAAU,KACjCyF,EAAuC,KAAzBH,EAAW/C,OAAS,GAClCmD,EArBY,IAqBcD,EAC1BE,EAAYlI,mBACdmI,EAAc,EACdC,EAAc,EACdC,EAAaV,GAmBjB,OAjBAnH,aAAS,WACH4H,GAAe,EACjBC,EAAaV,GACJK,GAAcI,IACvBC,EAAaV,IAEfS,GAAeC,EACfF,EAAc7F,YAAUC,UAAW0F,EAAYG,GAC/CF,EAAU7H,QAAQgC,SAAS+D,EAAI+B,EAE/BN,EAAWS,SAAQ,SAACC,GAClBA,EAAS1H,IAAIR,QAAQmI,SAAS,GAAGC,SAASvH,MAAMwH,aAC9CH,EAAS9B,OAAS2B,EAAc,OAASG,EAASrH,aAMtD,kDAAWa,GAAX,IAAkBM,SAAU,CAAC,EAAG,EAAG4D,GAAnC,UACE,cAAC,KAAD,CAAQvE,KAAM,CAAC,IAAK,IAAKG,SAAU,CAAC,EAAG,EAAG,GAAIiF,eAAe,EAA7D,SACE,sCAAsBtF,QAAS,IAAMC,aAAa,MAEnDoG,EAAWrB,KAAI,SAAC+B,EAAU3B,GACzB,OACE,uBAEE/F,IAAK0H,EAAS1H,IACdwB,SAAU,CAAC,EAAG,GAAI0F,EAAYnB,GAAOJ,KAAI,SAACzC,GAAD,OACvCzB,YAAUC,SAASwB,MAJvB,SAOE,cAAC,KAAD,CAAKrC,KAAM,CAAC,IAAM,IAAM,KAAOG,SAAU,CAAC,EAAG,EAAG,KAAhD,SACE,sCACEX,MAAOqH,EAASrH,MAChByH,UAAW,GACXnH,QAAS,GACToH,UAAW,GACXnH,aAAa,OAZZmF,MAmBX,wBAAO/E,SAAU,CAAC,EAAG,EAAG,KAAxB,UACE,uBAAOhB,IAAKqH,EAAZ,SACE,uBACE7F,SAAU,CAAC,EAAG,GAAI,IAAImE,KAAI,SAACzC,GAAD,OAAazB,YAAUC,SAASwB,MAD5D,SAGE,cAAC,KAAD,CAAMrC,KAAM,CAAC,IAAM,EAAG,GAAIuF,YAAY,EAAMpF,SAAU,CAAC,EAAG,GAAK,GAA/D,SACE,sCACEX,MAAM,SACNyH,UAAW,GACXC,UAAW,WAKnB,cAAC,KAAD,CACElH,KAAM,CAAC,GAAK,IAAM,GAAK,IACvBuF,YAAY,EACZ5E,SAAU,EAAE,GAAI,EAAG,GAAGmE,KAAI,SAACzC,GAAD,OAAazB,YAAUC,SAASwB,MAH5D,SAKE,mD,SChGK,OAA0B,uCCkB1B8E,GAbD,WACZ,IAAMC,EAAUC,aAAWC,IAAQ,GAInC,OAHAF,EAAQG,OAAS,IAAIC,UAAQ,EAAG,GAChCJ,EAAQK,OAAS,IAAID,UAAQ,EAAG,GAG9B,iCACE,+BAAexH,KAAM,CAAC,EAAG,EAAG,KAC5B,sCAAsB0H,QAAM,EAAC5C,IAAKsC,EAAS/B,KAAMC,mBCbxC,OAA0B,qDCA1B,OAA0B,qCCoB1BqC,GAZE,SAACtH,GAChB,IAAMS,EAAQ,MAEd,OACE,qCACE,cAAC,GAAD,CAAWX,SAAU,CAAC,EAAG,EAAG,GAAIW,MAAOA,EAAO8G,OAPlD,qEAME,IAEE,cAAC,GAAD,CAAWzH,SAAU,CAAC,EAAG,GAAI,GAAIW,MAAOA,EAAO8G,OAAQC,KAFzD,IAGE,cAAC,GAAD,CAAW1H,SAAU,CAAC,EAAG,GAAI,GAAIW,MAAOA,EAAO8G,OAAQE,KAHzD,QCmBWC,GA7BE,WACf,OACE,qCACE,8BAAcvI,MAAO,SAAUwI,UAAW,KAC1C,kCACEzC,YAAY,EACZ/F,MAAO,SACPwI,UAAW,EACX7H,SAAU,CAAC,EAAG,EAAG,KAEnB,oCACA,4BACEoF,YAAY,EACZ/F,MAAO,SACPwI,UAAW,GACX7H,SAAU,EAAE,EAAG,GAAI,KAErB,2BACEmC,MAAO1B,YAAUC,SAAS,IAC1B0E,YAAY,EACZ/F,MAAO,SACPwI,UAAW,EACXC,SAAU,GACV9H,SAAU,CAAC,EAAG,EAAG,S,UCsFV+H,GAnGK,WAClB,MAAqDC,YACnD,2BACA,CACEC,kBAAmB,CAAEhC,MAAO,QAASrB,MAAO,WAC5CsD,sBAAuB,CAAEjC,MAAO,YAAakC,IAAK,EAAGC,IAAK,EAAGxD,MAAO,MAJhEqD,EAAR,EAAQA,kBAAmBC,EAA3B,EAA2BA,sBAO3B,EAA6DF,YAC3D,+BACA,CACEK,sBAAuB,CAAEpC,MAAO,QAASrB,MAAO,WAChD0D,0BAA2B,CACzBrC,MAAO,YACPkC,IAAK,EACLC,IAAK,EACLxD,MAAO,KARLyD,EAAR,EAAQA,sBAAuBC,EAA/B,EAA+BA,0BAY/B,EAIIN,YAAY,yBAA0B,CACxCO,gBAAiB,CAAEtC,MAAO,QAASrB,MAAO,WAC1C4D,oBAAqB,CAAEvC,MAAO,YAAakC,IAAK,GAAIC,IAAK,EAAGxD,MAAO,IACnE6D,mBAAoB,CAAExC,MAAO,cAAerB,MAAO,CAAExC,GAAI,EAAGmC,GAAI,MANhEgE,EADF,EACEA,gBACAC,EAFF,EAEEA,oBACAC,EAHF,EAGEA,mBAMF,EAKIT,YAAY,wBAAyB,CACvCU,eAAgB,CAAEzC,MAAO,QAASrB,MAAO,WACzC+D,mBAAoB,CAAE1C,MAAO,YAAakC,IAAK,GAAIC,IAAK,EAAGxD,MAAO,GAClEgE,kBAAmB,CAAE3C,MAAO,cAAerB,MAAO,CAAExC,EAAG,EAAGmC,EAAG,IAC7DsE,gBAAiB,CAAE5C,MAAO,YAAarB,MAAO,CAAExC,EAAG,EAAGmC,EAAG,MARzDmE,EADF,EACEA,eACAC,EAFF,EAEEA,mBACAC,EAHF,EAGEA,kBACAC,EAJF,EAIEA,gBAQM5K,EAAU6K,cAAV7K,MACF8K,EAAS,IAAIC,WACnB/K,EAAMgL,IAAIF,GAEV,IAAMG,EAAsB/K,mBAEtBgL,EAAgBhL,mBAChBiL,EAAejL,mBAgBrB,OAdAkL,aACEH,EACAI,yBAHiB,GAKjBjB,GAEFgB,aAAUF,EAAeI,mBAPN,GAOoChB,GACvDc,aAAUD,EAAcI,kBAAiBd,GAEzC/J,aAAS,WACPoK,EAAOU,WAAWZ,EAAgBzG,GAClC2G,EAAOW,WAAWb,EAAgBtE,MAIlC,qCACE,8BACElF,MAAO4I,EACPJ,UAAWK,IAEb,kCACE9C,YAAY,EACZ/F,MAAOgJ,EACPR,UAAWS,EACXtI,SAAU,CAAC,EAAG,EAAG,GACjBhB,IAAKkK,IAGP,4BACE9D,YAAY,EACZ/F,MAAOkJ,EACPV,UAAWW,EACXxI,SAAU,CAACyI,EAAmBrG,EAAG,EAAGqG,EAAmBlE,GACvDvF,IAAKmK,IAEP,2BACEhH,MAAO1B,YAAUC,SAAS,IAC1B0E,YAAY,EACZ/F,MAAOqJ,EACPb,UAAWc,EACXb,SAAU,GACV9H,SAAU,CAAC4I,EAAkBxG,EAAG,EAAGwG,EAAkBrE,GACrDvF,IAAKoK,EACLL,OAAQA,QCjFDY,GAxBQ,WACrB,OACE,qCACE,8BAAc9B,UAAW,KACzB,kCACEzC,YAAY,EACZ/F,MAAM,kBACNwI,UAAW,GACX7H,SAAU,CAAC,EAAG,EAAG,KAEnB,kCACEoF,YAAY,EACZ/F,MAAM,sBACNW,SAAU,EAAE,EAAG,EAAG,KAEpB,kCACEoF,YAAY,EACZ/F,MAAM,qBACNW,SAAU,CAAC,EAAG,EAAG,SCwDV2J,GArEQ,WACrB,MAAqD3B,YACnD,2BACA,CACEC,kBAAmB,CAAEhC,MAAO,QAASrB,MAAO,oBAC5CsD,sBAAuB,CAAEjC,MAAO,YAAakC,IAAK,EAAGC,IAAK,EAAGxD,MAAO,MAJhEqD,EAAR,EAAQA,kBAAmBC,EAA3B,EAA2BA,sBAO3B,EAAiDF,YAC/C,yBACA,CACE4B,gBAAiB,CAAE3D,MAAO,QAASrB,MAAO,mBAC1CiF,oBAAqB,CAAE5D,MAAO,YAAakC,IAAK,EAAGC,IAAK,EAAGxD,MAAO,MAJ9DgF,EAAR,EAAQA,gBAAiBC,EAAzB,EAAyBA,oBAOzB,EAA+C7B,YAC7C,wBACA,CACE8B,eAAgB,CAAE7D,MAAO,QAASrB,MAAO,uBACzCmF,mBAAoB,CAAE9D,MAAO,YAAakC,IAAK,EAAGC,IAAK,EAAGxD,MAAO,KAJ7DkF,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,mBAOxB,EAAiD/B,YAC/C,yBACA,CACEgC,gBAAiB,CAAE/D,MAAO,QAASrB,MAAO,sBAC1CqF,oBAAqB,CAAEhE,MAAO,YAAakC,IAAK,EAAGC,IAAK,EAAGxD,MAAO,KAJ9DoF,EAAR,EAAQA,gBAAiBC,EAAzB,EAAyBA,oBAQnBC,EAAgB/L,mBAChBgM,EAAehM,mBACfiM,EAAgBjM,mBAMtB,OAJAkL,aAAUa,EAAeZ,yBADN,GAC0CM,GAC7DP,aAAUc,EAAcb,yBAFL,GAEyCQ,GAC5DT,aAAUe,EAAed,yBAHN,GAG0CU,GAG3D,qCACE,8BACE3K,MAAO4I,EACPJ,UAAWK,IAEb,kCACE9C,YAAY,EACZ/F,MAAOuK,EACP/B,UAAWgC,EACX7J,SAAU,CAAC,EAAG,EAAG,GACjBhB,IAAKkL,IAEP,kCACE9E,YAAY,EACZ/F,MAAOyK,EACPjC,UAAWkC,EACX/J,SAAU,EAAE,EAAG,EAAG,GAClBhB,IAAKmL,IAEP,kCACE/E,YAAY,EACZ/F,MAAO2K,EACPnC,UAAWoC,EACXjK,SAAU,CAAC,EAAG,EAAG,GACjBhB,IAAKoL,QC1CEC,GA1BY,WACzB,OACE,qCACE,8BAAcxC,UAAW,KACzB,2BACEzC,YAAY,EACZ/F,MAAM,kBACNwI,UAAW,IACX7H,SAAU,CAAC,EAAG,GAAI,KAEpB,2BACEoF,YAAY,EACZ/F,MAAM,sBACNwI,UAAW,IACX7H,SAAU,EAAE,EAAG,EAAG,KAEpB,2BACEoF,YAAY,EACZ/F,MAAM,qBACNwI,UAAW,IACX7H,SAAU,CAAC,EAAG,EAAG,SCqDVsK,GApEe,WAC5B,MAAqDtC,YACnD,2BACA,CACEC,kBAAmB,CAAEhC,MAAO,QAASrB,MAAO,oBAC5CsD,sBAAuB,CAAEjC,MAAO,YAAakC,IAAK,EAAGC,IAAK,EAAGxD,MAAO,MAJhEqD,EAAR,EAAQA,kBAAmBC,EAA3B,EAA2BA,sBAO3B,EAA+CF,YAC7C,wBACA,CACEuC,eAAgB,CAAEtE,MAAO,QAASrB,MAAO,mBACzC4F,mBAAoB,CAAEvE,MAAO,YAAakC,IAAK,EAAGC,IAAK,EAAGxD,MAAO,OAJ7D2F,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,mBAOxB,EAA+CxC,YAC7C,wBACA,CACEyC,eAAgB,CAAExE,MAAO,QAASrB,MAAO,uBACzC8F,mBAAoB,CAAEzE,MAAO,YAAakC,IAAK,EAAGC,IAAK,EAAGxD,MAAO,OAJ7D6F,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,mBAOxB,EAA6C1C,YAC3C,uBACA,CACE2C,cAAe,CAAE1E,MAAO,QAASrB,MAAO,sBACxCgG,kBAAmB,CAAE3E,MAAO,YAAakC,IAAK,EAAGC,IAAK,EAAGxD,MAAO,OAJ5D+F,EAAR,EAAQA,cAAeC,EAAvB,EAAuBA,kBAQjBC,EAAe1M,mBACf2M,EAAe3M,mBACf4M,EAAc5M,mBAKpB,OAJAkL,aAAUwB,EAAcrB,kBAAiBe,GACzClB,aAAUyB,EAActB,kBAAiBiB,GACzCpB,aAAU0B,EAAavB,kBAAiBmB,GAGtC,qCACE,8BACEtL,MAAO4I,EACPJ,UAAWK,IAEb,2BACE9C,YAAY,EACZ/F,MAAOkL,EACP1C,UAAW2C,EACXxK,SAAU,CAAC,EAAG,GAAI,GAClBhB,IAAK6L,IAEP,2BACEzF,YAAY,EACZ/F,MAAOoL,EACP5C,UAAW6C,EACX1K,SAAU,EAAE,EAAG,EAAG,GAClBhB,IAAK8L,IAEP,2BACE1F,YAAY,EACZ/F,MAAOsL,EACP9C,UAAW+C,EACX5K,SAAU,CAAC,EAAG,EAAG,GACjBhB,IAAK+L,QCnEE,OAA0B,sCC2B1BC,GArBF,WACX,MAAkC9L,oBAAS,GAA3C,mBAAO+L,EAAP,KAAkBC,EAAlB,KAEMC,EAAWrN,YAAQsN,IAAa,GAChCC,EAAUlN,mBAOhB,OAJAQ,aAAS,WACP0M,EAAQ7M,QAAQgC,SAAS+B,GAHb,MAG2B0I,EAAY,GAAK,MAIxD,2BACElM,OAAQoM,EAASlN,MACjBsB,QAAS,kBAAM2L,GAAcD,IAC7BjL,SAAU,CAAC,EAAG,EAAG,GACjBhB,IAAKqM,KCeIC,GA/BI,WACjB,MAAkCpM,oBAAS,GAA3C,mBAAO+L,EAAP,KAAkBC,EAAlB,KAEMC,EAAWrN,YAAQsN,IAAa,GAChCG,EAAWpN,mBACXqN,EAAWrN,mBAUjB,OAPAQ,aAAS,WACH4M,EAAS/M,UACX+M,EAAS/M,QAAQgC,SAAS4B,GAJhB,MAI8B6I,EAAY,GAAK,IACvDO,EAAShN,UACXgN,EAAShN,QAAQgC,SAAS+B,GANhB,MAM8B0I,EAAY,GAAK,OAI3D,wBAAO1L,QAAS,kBAAM2L,GAAcD,IAApC,UACE,2BACElM,OAAQoM,EAASlN,MACjB+B,SAAU,EAAE,GAAI,EAAG,GACnBhB,IAAKuM,IAEP,2BACExM,OAAQoM,EAASlN,MAAMwN,OAAM,GAC7BzL,SAAU,CAAC,EAAG,EAAG,GACjBhB,IAAKwM,Q,UCtBEE,GATI,CACjBC,oBACE,8FACFC,eACE,gFACFC,YACE,8FCkBWC,GAnBA,CAEbC,GAAI,CACFC,cAAe,8BACfC,QAAS,8BACTC,SAAU,8BACVC,UAAW,+BAIbC,KAAM,CACJC,GAAI,GACJC,GAAI,IACJC,GAAI,IACJC,GAAI,IACJC,GAAI,OC4BOC,GA7CI,WACjB,MAA6BC,aAC3Bb,GAAOC,GAAGC,cACVF,GAAOM,KAAKK,IAFPG,EAAP,oBAIA,EAAwBD,aAAiBb,GAAOC,GAAGE,QAASH,GAAOM,KAAKK,IAAjEI,EAAP,oBACA,EAAyBF,aACvBb,GAAOC,GAAGI,UACVL,GAAOM,KAAKK,IAFPK,EAAP,oBAKA,OACE,qCACE,eAAChN,EAAA,EAAD,CAAMC,SAAU,EAAGC,SAAU,CAAC,EAAG,GAAI,IAArC,wBAEE,2CAEF,eAACF,EAAA,EAAD,CAAMiN,KAAMrB,GAAWG,YAAa9L,SAAU,EAAGC,SAAU,CAAC,EAAG,EAAG,GAAlE,wBAEE,oCAAoBgN,OAAQF,OAE9B,cAAChN,EAAA,EAAD,CACEiN,KAAMrB,GAAWC,oBACjB5L,SAAU,EACVJ,QAAS,GACTK,SAAU,CAAC,GAAI,EAAG,IAClBuF,KAAK,cALP,SAOE,oCAAoByH,OAAQJ,MAE9B,cAAC9M,EAAA,EAAD,CACET,MAAO,EACP0N,KAAMrB,GAAWE,eACjB7L,SAAU,EACVkN,aAAc,MACdC,aAAc,IACdlN,SAAU,CAAC,GAAI,EAAG,IAClBuF,KAAK,cAPP,SASE,oCAAoByH,OAAQH,EAAelN,QAAS,WC1C7C,OAA0B,oCCmB1BwN,GAbC,WACd,IAAMC,EAAUtP,YAAQuP,IAAY,GAC9BC,EAAanP,mBAQnB,OANAQ,aAAS,WACH2O,EAAW9O,UACb8O,EAAW9O,QAAQgC,SAAS4B,GAAK,QAI9B,2BAAWrD,OAAQqO,EAAQnP,MAAOe,IAAKsO,K,kBC2CjCC,GArDA,WACb,IAAMC,EAAcrP,mBACdsP,EAAWtP,mBAIXuP,EADU,IAAIC,KAAJ,2BADH,OAEUD,OAAO,KAmB9B,OAjBAA,EAAOE,GAAG,WAAW,WACnBrM,QAAQC,IAAI,qBAAsBkM,EAAOG,cAG3CH,EAAOE,GAAG,cAAc,WACtBrM,QAAQC,IAAI,0BAGdjD,qBAAU,WACRmP,EAAOE,GAAG,aAAa,SAACE,GACtB,IAAMC,EAAW,IAAItL,EAASqL,EAAQC,SAAU,EAAG,OAC7CC,EAAQ,IAAIvL,EAASqL,EAAQE,MAAO,EAAG,SACzCR,EAAYhP,UAASgP,EAAYhP,QAAQ+G,KAAOwI,GAChDN,EAASjP,UAASiP,EAASjP,QAAQ+G,KAAOyI,QAE/C,CAACN,IAGF,eAAC,KAAD,CACEO,cAAc,MACdC,SAAS,OACTC,eAAe,gBACfnO,SAAU,EAAE,EAAG,EAAG,GAClBoM,KAAM,CAAC,EAAG,EAAG,GALf,UAOE,cAAC,KAAD,UACE,cAACtM,EAAA,EAAD,CACET,MAAM,sBACNU,SAAU,EACVf,IAAKwO,EACLjI,KAAK,gBAGT,cAAC,KAAD,UACE,cAACzF,EAAA,EAAD,CACET,MAAM,qBACNU,SAAU,EACVf,IAAKyO,EACLlI,KAAK,oB,UCaAtF,GA3DA,SAACC,GACd,MAA4BhB,oBAAS,GAArC,mBAAOiB,EAAP,KAAeC,EAAf,KACA,EAAiBuM,aACf,8BACA,MAFKK,EAAP,oBAIA,EAA8BzM,oBAAU,CACtC6N,OAAQ,CACNC,SAAU,IACVC,OAAQC,MAEVC,MAAO,IACPC,KAAM,CACJ9O,QAASQ,EAAS,GAAM,EACxBH,SAAUG,EAAS,CAAC,EAAG,EAAG,GAAK,CAAC,EAAG,GAAI,IAEzCuO,GAAI,CACF,CAAE/O,QAASQ,EAAS,EAAI,IACxB,CAAER,QAASQ,EAAS,GAAM,GAC1B,CAAER,QAASQ,EAAS,EAAI,GAAKH,SAAUG,EAAS,CAAC,EAAG,GAAI,GAAK,CAAC,EAAG,EAAG,OAbhER,EAAR,EAAQA,QAASK,EAAjB,EAAiBA,SAiBjB,OACE,kDAAWE,GAAX,cACE,uBAAMX,QAAS,kBAAMa,GAAWD,IAAhC,UACE,8BACEN,KAAM,CACJ,IACA,IACA,GACA,EACAY,YAAUC,SAAS,IACnBD,YAAUC,SAAS,QAGvB,cAAC,WAASkF,mBAAV,CACEoH,OAAQA,EACRrN,QAASA,EACTuF,KAAMC,aACNvF,aAAa,OAGjB,eAAC,WAASiB,KAAV,CAAeb,SAAUA,EAAzB,UACE,+BACEH,KAAM,CACJ,IACA,GACA,GACA,GACAY,YAAUC,SAAS,QAGvB,oCAAoBsM,OAAQA,EAAQrN,QAAS,IAAMC,aAAa,YC3DzD,OAA0B,oCCmC1B+O,GA7BC,WACd,MAAkCzP,oBAAS,GAA3C,mBAAO+L,EAAP,KAAkBC,EAAlB,KACA,EAA4BhM,oBAAS,GAArC,mBAAO0P,EAAP,KAAeC,EAAf,KACA,EAA6B/Q,YAAQgR,IAAY,GAAzCC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,UACTC,EAAY9Q,mBACZ6P,EAAQ,KAad,OAXArP,aAAS,WACHsQ,EAAUzQ,UACZyQ,EAAUzQ,QAAQgC,SAAS4B,GACzB4L,GAASY,EAAS,EAAI,IAAM3D,EAAY,GAAK,GAC/CgE,EAAUzQ,QAAQgC,SAAS+B,GACzByL,GAASY,EAAS,EAAI,IAAM3D,EAAY,GAAK,GAC/CgE,EAAUzQ,QAAQgC,SAAS+D,GACzByJ,GAASY,EAAS,EAAI,IAAM3D,EAAY,GAAK,OAKjD,uBACEjM,IAAKiQ,EACL1P,QAAS,kBAAM2L,GAAcD,IAC7BzL,cAAe,kBAAMqP,GAAWD,IAHlC,SAKE,sBAAMM,SAAUH,EAAMJ,QAAQO,SAAUtI,SAAUoI,EAAS,WCblDG,GAZc,WAC3B,IAAQJ,EAAUjR,YAAQgR,IAAY,GAA9BC,MAER,EAAiBpC,aAAiBb,GAAOC,GAAGI,UAAWL,GAAOM,KAAKK,IAA5DO,EAAP,oBAEA,OACE,sBAAMkC,SAAUH,EAAMJ,QAAQO,SAA9B,SACE,oCAAoBlC,OAAQA,O,UCWnBoC,GAnBc,WAC3B,IAAQL,EAAUjR,YAAQgR,IAAY,GAA9BC,MACR,EAAoBM,aAClB,EAEA,CACEC,WAAY,EACZlI,OAAQ,CAAC,EAAG,GACZE,OAAQ,CAAC,GAAI,MANViI,EAAP,oBAUA,OACE,sBAAML,SAAUH,EAAMJ,QAAQO,SAA9B,SACE,sCAAsBK,UAAWA,OCoGxBC,GAhHiB,WAC9B,IAAQT,EAAUjR,YAAQgR,IAAY,GAA9BC,MAER,EAA4C/G,YAAY,WAAY,CAClEyH,UAAW,CAAExJ,MAAO,YAAarB,OAAO,GACxCjF,QAAS,CAAEsG,MAAO,cAAekC,IAAK,EAAGC,IAAK,EAAGxD,MAAO,GACxDhF,YAAa,CAAEqG,MAAO,cAAerB,OAAO,KAHtC6K,EAAR,EAAQA,UAAW9P,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,YAM5B,EAQIoI,YAAY,oBAAqB,CACnC3I,MAAO,CAAE4G,MAAO,QAASrB,MAAO,WAChC8K,SAAU,CAAEzJ,MAAO,WAAYrB,MAAO,WACtC+K,kBAAmB,CACjB1J,MAAO,qBACPkC,IAAK,EACLC,IAAK,EACLxD,MAAO,GAETkC,UAAW,CAAEb,MAAO,YAAakC,IAAK,EAAGC,IAAK,EAAGxD,MAAO,GACxDgL,gBAAiB,CACf3J,MAAO,mBACPkC,IAAK,EACLC,IAAK,EACLxD,MAAO,KAETmC,UAAW,CAAEd,MAAO,YAAakC,IAAK,EAAGC,IAAK,EAAGxD,MAAO,GACxDiL,UAAW,CAAE5J,MAAO,YAAarB,OAAO,KAxBxCvF,EADF,EACEA,MACAqQ,EAFF,EAEEA,SACAC,EAHF,EAGEA,kBACA7I,EAJF,EAIEA,UACAC,EALF,EAKEA,UACA6I,EANF,EAMEA,gBACAC,EAPF,EAOEA,UAqBF,EAWI7H,YAAY,oBAAqB,CACnC8H,UAAW,CAAE7J,MAAO,YAAakC,IAAK,EAAGC,IAAK,EAAGxD,MAAO,GACxDmL,mBAAoB,CAClB9J,MAAO,sBACPkC,IAAK,EACLC,IAAK,EACLxD,MAAO,GAEToL,IAAK,CACH/J,MAAO,sBACPkC,IAAK,MACLC,IAAK,EACLxD,MAAO,KAETqL,aAAc,CAAEhK,MAAO,eAAgBkC,IAAK,EAAGC,IAAK,EAAGxD,MAAO,IAC9DsL,MAAO,CAAEjK,MAAO,QAASkC,IAAK,EAAGC,IAAK,EAAGxD,MAAO,GAChDuL,eAAgB,CAAElK,MAAO,kBAAmBkC,IAAK,EAAGC,IAAK,EAAGxD,MAAO,GACnEwL,UAAW,CAAEnK,MAAO,aAAcrB,MAAO,WACzCyL,kBAAmB,CACjBpK,MAAO,qBACPkC,IAAK,EACLC,IAAK,EACLxD,MAAO,GAET0L,aAAc,CAAErK,MAAO,gBAAiBrB,MAAO,WAC/C2L,UAAW,CAAEtK,MAAO,YAAakC,IAAK,GAAIC,IAAK,EAAGxD,MAAO,KACzD4L,aAAc,CAAEvK,MAAO,eAAgBkC,IAAK,EAAGC,IAAK,EAAGxD,MAAO,KApC9DkL,EADF,EACEA,UACAC,EAFF,EAEEA,mBACAC,EAHF,EAGEA,IACAE,EAJF,EAIEA,MACAC,EALF,EAKEA,eACAC,EANF,EAMEA,UACAC,EAPF,EAOEA,kBACAC,EARF,EAQEA,aACAC,EATF,EASEA,UACAC,EAVF,EAUEA,aA8BF,OACE,qCACE,sBAAMtB,SAAUH,EAAMJ,QAAQO,SAA9B,SACE,sCACEY,UAAWA,EACXC,mBAAoBA,EACpB1Q,MAAOA,EACPoQ,UAAWA,EACXC,SAAUA,EACVC,kBAAmBA,EACnBK,IAAKA,EACLlJ,UAAWA,EACXnH,QAASA,EACTiQ,gBAAiBA,EACjB7I,UAAWA,EACXmJ,MAAOA,EACPC,eAAgBA,EAChBC,UAAWA,EACXC,kBAAmBA,EACnBC,aAAcA,EACdC,UAAWA,EACXC,aAAcA,EACd5Q,YAAaA,EACbiQ,UAAWA,MAGf,cAAC,KAAD,CACEhQ,KAAM,CAAC,EAAG,GACVG,SAAU,CAAC,EAAG,GAAI,GAClBQ,SAAU,CAAC,EAAG,EAAG,IAAImE,KAAI,SAAC8L,GAAD,OAAOhQ,YAAUC,SAAS+P,YC5C5CC,GA9DiB,WAC9B,IAAQ3B,EAAUjR,YAAQgR,IAAY,GAA9BC,MAER,EAA4C/G,YAAY,WAAY,CAClEyH,UAAW,CAAExJ,MAAO,YAAarB,OAAO,GACxCjF,QAAS,CAAEsG,MAAO,cAAekC,IAAK,EAAGC,IAAK,EAAGxD,MAAO,GACxDhF,YAAa,CAAEqG,MAAO,cAAerB,OAAO,KAHtC6K,EAAR,EAAQA,UAAW9P,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,YAM5B,EAQIoI,YAAY,oBAAqB,CACnC3I,MAAO,CAAE4G,MAAO,QAASrB,MAAO,WAChC8K,SAAU,CAAEzJ,MAAO,WAAYrB,MAAO,WACtC+K,kBAAmB,CACjB1J,MAAO,qBACPkC,IAAK,EACLC,IAAK,EACLxD,MAAO,GAETkC,UAAW,CAAEb,MAAO,YAAakC,IAAK,EAAGC,IAAK,EAAGxD,MAAO,GACxDgL,gBAAiB,CACf3J,MAAO,mBACPkC,IAAK,EACLC,IAAK,EACLxD,MAAO,KAETmC,UAAW,CAAEd,MAAO,YAAakC,IAAK,EAAGC,IAAK,EAAGxD,MAAO,GACxDiL,UAAW,CAAE5J,MAAO,YAAarB,OAAO,KAxBxCvF,EADF,EACEA,MACAqQ,EAFF,EAEEA,SACAC,EAHF,EAGEA,kBACA7I,EAJF,EAIEA,UACA8I,EALF,EAKEA,gBACA7I,EANF,EAMEA,UACA8I,EAPF,EAOEA,UAqBF,OACE,qCACE,sBAAMX,SAAUH,EAAMJ,QAAQO,SAA9B,SACE,sCACE7P,MAAOA,EACPoQ,UAAWA,EACXC,SAAUA,EACVC,kBAAmBA,EACnB7I,UAAWA,EACXnH,QAASA,EACTiQ,gBAAiBA,EACjB7I,UAAWA,EACXnH,YAAaA,EACbiQ,UAAWA,MAGf,cAAC,KAAD,CACEhQ,KAAM,CAAC,EAAG,GACVG,SAAU,CAAC,EAAG,GAAI,GAClBQ,SAAU,CAAC,EAAG,EAAG,IAAImE,KAAI,SAAC8L,GAAD,OAAOhQ,YAAUC,SAAS+P,YChD5CE,GAVa,WAC1B,IAAQ5B,EAAUjR,YAAQgR,IAAY,GAA9BC,MAER,OACE,sBAAMG,SAAUH,EAAMJ,QAAQO,SAA9B,SACE,wC,UCGS0B,GAVQ,SAAC,GAA6B,IAA3BvR,EAA0B,EAA1BA,MAAO0F,EAAmB,EAAnBA,MAAO8L,EAAY,EAAZA,MAEtC,OACE,uBAAM7Q,SAAU,CAAC,EAAG,GAAI,IAAO+E,GAA/B,UACE,+BAAelF,KAAM,CAACgR,KACtB,mCAAmBxR,MAAOA,EAAO6F,KAAMC,mBCuB9B2L,GA3BQ,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,MAAO/Q,EAAsB,EAAtBA,SAAUW,EAAY,EAAZA,MAEzC,OACE,uBACEX,SAAUA,EACVQ,SAAU,CAAC,IAAK,EAAG,GAAGmE,KAAI,SAACzC,GAAD,OAAazB,YAAUC,SAASwB,MAC1DvB,MAAOA,EAHT,SAKGoQ,EAAMpM,KAAI,SAACqM,EAAMjM,GAEhB,IAAMkM,EAASD,EAAKE,WACdC,EAAYpM,EAClB,OAAOkM,EAAOtM,KAAI,SAACkM,EAAO9L,GACxB,OACE,cAACqM,GAAD,CACE/R,MAAO2R,EAAK3R,MACZ0F,MAAOA,EAAQoM,EAEfN,MAAOA,GADF9L,YCDJsM,GAfG,SAACnR,GACjB,MAA0BhB,mBAAS,IAAnC,mBAAO6R,EAAP,KAAcO,EAAd,KACMtR,EAAWE,EAAMF,SACjBW,EAAQ,CAACT,EAAMS,MAAOT,EAAMS,MAAOT,EAAMS,OAS/C,OAPApC,qBAAU,WACY,IAAIgT,SAAQ,SAACC,GAAD,OAC9B,IAAIC,MAAYC,KAAKxR,EAAMuH,QAAQ,SAACkK,GAAD,OAAUH,EAAQG,EAAKZ,aAEhDa,KAAKN,KAChB,CAACpR,IAEG,cAAC2R,GAAD,CAAOd,MAAOA,EAAO/Q,SAAUA,EAAUW,MAAOA,KChB1C,OAA0B,yCC6B1BmR,GAzBC,WACd,MAA6BhU,YAAQiU,IAAS,GAAtChD,EAAR,EAAQA,MAAOC,EAAf,EAAeA,UACf,OACE,qCACE,wBAAOhP,SAAU,EAAE,IAAK,EAAG,GAA3B,UACE,sBACEkP,SAAUH,EAAMiD,OAAO9C,SACvBtI,SAAUoI,EAAS,kBAErB,sBAAME,SAAUH,EAAMkD,OAAO/C,SAAUtI,SAAUoI,EAAS,UAE3DD,EAAMtJ,KAAKkB,SAAShC,KAAI,SAACuN,EAAOnN,GAC/B,OACE,sBAEEmK,SAAUgD,EAAMhD,SAChBtI,SAAUsL,EAAMtL,SAChB5G,SAAU,CAAC,IAAK,EAAG,IAHd+E,UClBF,OAA0B,yCCgB1BoN,GAXa,WAC1B,MAA6BrU,YAAQiU,IAAS,GAAtChD,EAAR,EAAQA,MAAOC,EAAf,EAAeA,UACf,OACE,sBACEE,SAAUH,EAAMqD,MAAMlD,SACtBtI,SAAUoI,EAAS,SACnBxO,SAAU,CAAC,GAAI,EAAG,GAAGmE,KAAI,SAAC0N,GAAD,OAAY5R,YAAUC,SAAS2R,SCmC/CC,GA9CA,SAACpS,GACd,IAGMqQ,EAAYtN,IAElB,OACE,kDAAW/C,GAAX,cACE,iCACE,6BAAaL,KAAM,CAAC,EAAG,EAAG,GAAG8E,KAAI,SAACC,GAAD,OAAmB,IAARA,EAAc2L,OAC1D,oCAAoBlR,MAAO,cAG5BwF,MAAM,GACJC,OACAH,KAAI,SAACC,EAAOG,GACX,OACE,wBAEE/E,SAAU,CAAC,EAAG,EAAG,GAAG2E,KAAI,SAAC8L,EAAG8B,GAAJ,OACtBxN,IAAUwN,EAAItP,IAA6BwN,KAH/C,UAME,iCACE,6BACE5Q,KAAM,CAAC,EAAG,EAAG,GAAG8E,KACd,SAAC8L,EAAG8B,GAAJ,OAAU9B,GAAK1L,IAAUwN,EAzB5B,EAyByChC,QAG1C,oCAAoBlR,MAAO,UAAa,EAAI0F,OAE9C,uBACE/E,SAAU,CAAC,EAAG,EAAG,GAAG2E,KAAI,SAAC8L,EAAG8B,GAAJ,OACtBxN,IAAUwN,EAAItP,IAA6BwN,KAF/C,UAKE,gCAAgB5Q,KAAM,CAlCpBoD,IACC,SAkCH,oCAAoB5D,MAAO,gBAnBxB0F,W,UCVbyN,GACK,GADLA,GAEG,IAFHA,GAGA,GAqDSC,GAlDD,SAACvS,GACb,IAAQwS,EAA8B1K,YAAY,WAAY,CAC5D0K,0BAA2B,CAAEzM,MAAO,cAAerB,OAAO,KADpD8N,0BAIFC,EAAaxU,mBAyBnB,OAvBAI,qBAAU,WAOR,OANA6C,EAAiBwR,oBAEbD,EAAWnU,UACbmU,EAAWnU,QAAQqU,YAAY7S,SAASuC,EAAI,MAGvCnB,EAAiB0R,uBACvB,CAACJ,IAEJ/T,aAAS,WACHgU,EAAWnU,UACbmU,EAAWnU,QAAQuU,YACjBP,GAAqBpR,EAAiB4R,kBAExCL,EAAWnU,QAAQyU,UACjBT,GAAmBpR,EAAiB8R,gBAEtCP,EAAWnU,QAAQqU,YAAY7S,SAASuC,GACtCiQ,GAAgBpR,EAAiB+R,gBAKrC,qCACGT,GAA6B,cAACU,GAAA,EAAD,CAAqBpU,IAAK2T,IACxD,cAAC,KAAD,yBACE9S,KAAM,CAAC,GAAI,IACXW,SAAU,CAACC,YAAUC,UAAU,IAAK,EAAG,IACnCR,GAHN,aAKE,mCAAmBb,MAAO,QAAU6F,KAAMC,kBAE5C,cAAC,KAAD,CACEtF,KAAM,CAhDG,OAiDTG,SAAU,CAAC,EAAGqT,GAAc,GAF9B,SAIE,mCAAmBhU,MAAO,SAAUM,QAAS,IAAMC,aAAa,U,oBC1DzD,OAA0B,4CCA1B,OAA0B,+CCiBzC0T,YAAO,CAAEC,6BAET,IAAMf,GACK,GADLA,GAEG,IAFHA,GAGA,GAwESgB,GArEI,SAACtT,GAClB,IAAQwS,EAA8B1K,YAAY,WAAY,CAC5D0K,0BAA2B,CAAEzM,MAAO,cAAerB,OAAO,KADpD8N,0BAIFC,EAAaxU,mBACbsV,EAAWtV,mBACXuV,EAAgB,IAAIC,gBACpBC,EAAcC,YAAUC,cAAaC,IAErCC,EAAqB7V,mBAmC3B,OAlCAkL,aAAU2K,EAAoBT,MAE9BhV,qBAAU,WAOR,OANA6C,EAAiBwR,oBAEbD,EAAWnU,UACbmU,EAAWnU,QAAQqU,YAAY7S,SAASuC,EAAI,MAGvCnB,EAAiB0R,uBACvB,CAACJ,IAEJnU,qBAAU,WACJkV,EAASjV,UACXiV,EAASjV,QAAQyV,UAAUL,GAC3BH,EAASjV,QAAQ0V,SAAQ,GACzBT,EAASjV,QAAQ2V,UAAU,KAC3BV,EAASjV,QAAQE,UAElB,CAACkV,IAEJjV,aAAS,WACHgU,EAAWnU,UACbmU,EAAWnU,QAAQuU,YACjBP,GAAqBpR,EAAiB4R,kBAExCL,EAAWnU,QAAQyU,UACjBT,GAAmBpR,EAAiB8R,gBAEtCP,EAAWnU,QAAQqU,YAAY7S,SAASuC,GACtCiQ,GAAgBpR,EAAiB+R,gBAKrC,qCACGT,GAA6B,cAACU,GAAA,EAAD,CAAqBpU,IAAK2T,IACxD,cAAC,KAAD,yBACE9S,KAAM,CAAC,GAAI,IACXW,SAAU,CAACC,YAAUC,UAAU,IAAK,EAAG,IACnCR,GAHN,aAKE,mCAAmBb,MAAO,QAAU6F,KAAMC,kBAE5C,uBAAOtF,KAAM,CAAC6T,GAAgB1U,IAAKyU,IACnC,uBAAMzT,SAAU,CAAC,EAAG,EAAG,GAAvB,UACE,cAACF,EAAA,EAAD,CAAME,SAAU,CAAC,EAAG,EAAG,GAAvB,6CACA,cAACoU,GAAA,EAAD,CACErG,SAAU,GACVsG,MAAM,EACNrV,IAAKgV,EACLM,IAAKC,YCnEAC,GAjBA,WACb,MAAwBC,cAAfC,EAAT,oBAEA,OACE,cAAC5U,EAAA,EAAD,CACET,MAAM,sBACNU,SAAU,EACVR,QAAS,WACP,IAAMoV,EAAQ,UACdpT,QAAQC,IAAI,UAAWmT,GACvBD,EAAYC,IAEdpP,KAAK,YCMIqP,GAlBU,WACvB,MAAwBH,cAAfC,EAAT,oBAEA,OACE,cAAC5U,EAAA,EAAD,CACET,MAAM,sBACNU,SAAU,EACVR,QAAS,WACP,IAAMoV,EAAQ,UACdpT,QAAQC,IAAI,UAAWmT,GACvBD,EAAYC,IAEd3U,SAAU,CAAC,EAAG,EAAG,GACjBuF,KAAK,iBCKIsP,GAlBU,WACvB,MAAwBJ,cAAfC,EAAT,oBAEA,OACE,cAAC5U,EAAA,EAAD,CACET,MAAM,qBACNU,SAAU,EACVR,QAAS,WACP,IAAMoV,EAAQ,UACdpT,QAAQC,IAAI,UAAWmT,GACvBD,EAAYC,IAEd3U,SAAU,CAAC,GAAI,EAAG,GAClBuF,KAAK,iBCkCLuP,GAAkB,kBAAMnT,OAAOoT,SAASC,KAAKC,QAAQ,IAAK,KAAO,KACjEC,GAAkB,WACtB,MAAgChW,mBAAS4V,MAAzC,mBAAOC,EAAP,KAAiBL,EAAjB,KASA,OAPAnW,qBAAU,WACR,IAAM4W,EAAU,kBAAMT,EAAYI,OAElC,OADAnT,OAAOC,iBAAiB,aAAcuT,GAC/B,kBAAMxT,OAAOI,oBAAoB,aAAcoT,MACrD,IAGI,CAACJ,EADSK,uBAAY,SAAC1G,GAAD,OAAS/M,OAAOoT,SAASC,KAAOtG,IAAK,MAwKrD2G,GApKC,WACd,IA2CQC,EAAwBtN,YAAY,WAAY,CACtDsN,oBAAqB,CAAErP,MAAO,iBAAkBrB,OAAO,KADjD0Q,oBAGR,EAA8DtN,YAC5D,UACA,CACEuN,YAAa,CAAEtP,MAAO,UAAWrB,OAAO,GACxC4Q,UAAW,CAAEvP,MAAO,QAASrB,OAAO,GACpC6Q,aAAc,CACZxP,MAAO,YACPyP,QArDa,CACjB,OACA,YACA,SACA,wBACA,mBACA,kBACA,oBACA,OACA,OACA,QACA,QACA,cACA,OACA,gBACA,cACA,UACA,yBACA,SACA,oBACA,2BACA,2BACA,8BACA,8BACA,0BACA,UACA,0BACA,SACA,QACA,gBACA,mBAwBI9Q,MAAO,qBAET+Q,YAAa,CACX1P,MAAO,WACPyP,QAzBY,CAChB,OACA,OACA,aACA,kBACA,wBACA,uBACA,8BAmBI9Q,MAAO,qBAbL2Q,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,UAAWC,EAAhC,EAAgCA,aAAcE,EAA9C,EAA8CA,YAiB9C,EAA4D3N,YAC1D,UACA,CACE4N,eAAgB,CAAE3P,MAAO,cAAerB,OAAO,GAC/CiR,gBAAiB,CAAE5P,MAAO,eAAgBrB,OAAO,GACjDkR,eAAgB,CAAE7P,MAAO,cAAerB,OAAO,KAL3CgR,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,gBAAiBC,EAAzC,EAAyCA,eASzC,SAASC,EAAaC,GACpB,OAAOL,IAAgBK,EAGzB,SAASC,EAAcD,GACrB,OAAOP,IAAiBO,EAG1B,OACE,eAAC,IAAD,CAAQE,KAAMC,aAAwBC,KAAMlB,GAA5C,UACGI,GACC,cAACe,EAAA,EAAD,CAAeC,WAAW,EAAMC,cAAc,EAAMC,YAAY,IAEjEZ,GAAkB,+BAClBC,GACC,cAACY,EAAA,EAAD,CAAaC,UAAU,eAAeC,OAAQ,CAAC,GAAI,IAAnD,SACE,cAACC,EAAA,EAAD,CACEC,WAAY,CACV,oBACA,sBACA,uBAEFC,WAAW,YAIhBhB,GAAkB,4BAAYjW,KAAM,CAAC,GAAI,GAAI,SAAU,WACvD2V,GAAa,cAACuB,EAAA,EAAD,IACbxB,GACC,cAAC,IAAD,UACE,cAAC,IAAD,CAAOyB,OAAQ,IAAKC,mBAAoB,EAAGC,mBAAoB,OAGlEnB,EAAa,SAAW,cAAC,GAAD,IACxBA,EAAa,eAAiB,cAAC,GAAD,IAC9BA,EAAa,oBAAsB,cAAC,GAAD,IACnCA,EAAa,0BAA4B,cAAC,GAAD,IACzCA,EAAa,yBAA2B,cAAC,GAAD,IACxCA,EAAa,+BAAiC,cAAC,GAAD,IAC9CE,EAAc,WAAa,cAAC,EAAD,IAC3BA,EAAc,0BAA4B,cAAC,EAAD,IAC1CA,EAAc,qBAAuB,cAAC,GAAD,IACrCA,EAAc,oBAAsB,cAAC,GAAD,IACpCA,EAAc,SAAW,cAAC,GAAD,IACzBA,EAAc,sBACb,cAAC,GAAD,CACEjW,SAAU,CAAC,EAAG,EAAG,GACjBQ,SAAU,CAAC,GAAI,GAAI,IAAImE,KAAI,SAACzC,GAAD,OAAazB,YAAUC,SAASwB,QAG9D+T,EAAc,SAAW,cAAC,GAAD,IACzBA,EAAc,UAAY,cAAC,GAAD,IAC1BA,EAAc,2BAA6B,cAAC,GAAD,IAE1C,eAAC,WAAD,CAAUkB,SAAU,KAApB,UACGlB,EAAc,cAAgB,cAAC,EAAD,IAC9BA,EAAc,SAAW,cAAC,GAAD,IACzBA,EAAc,kBAAoB,cAAC,GAAD,IAClCA,EAAc,gBAAkB,cAAC,GAAD,IAChCA,EAAc,YAAc,cAAC,GAAD,IAC5BA,EAAc,UAAY,cAAC,GAAD,IAC1BA,EAAc,gBAAkB,cAAC,GAAD,IAChCA,EAAc,WAAa,cAAC,GAAD,IAC3BA,EAAc,sBAAwB,cAAC,GAAD,IACtCA,EAAc,6BACb,cAAC,GAAD,IAEDA,EAAc,6BACb,cAAC,GAAD,IAEDA,EAAc,gCACb,cAAC,GAAD,IAEDA,EAAc,gCACb,cAAC,GAAD,IAEDA,EAAc,4BAA8B,cAAC,GAAD,IAC5CA,EAAc,YAAc,cAAC,GAAD,IAC5BA,EAAc,4BAA8B,cAAC,GAAD,IAC5CA,EAAc,kBAAoB,cAAC,GAAD,OAGtCA,EAAc,WAAa,cAAC,GAAD,IAC3BA,EAAc,UAAY,cAAC,GAAD,IAC1BA,EAAc,oBAAsB,cAAC,GAAD,IACrC,cAAC,IAAD,CAAOmB,UAAWxC,GAAkB5D,KAAK,YACzC,cAAC,IAAD,CAAOoG,UAAWvC,GAAkB7D,KAAK,gBClNhCqG,I,OARH,WACV,OACE,cAAC,IAAD,CAAQC,QAAQ,EAAOC,SAAS,EAAhC,SACE,cAAC,GAAD,QCISC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB9F,MAAK,YAAkD,IAA/C+F,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,iBACE,cAAC,aAAD,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BV,O","file":"static/js/main.c73da511.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/animation.07175b80.glb\";","import { useEffect, useMemo, useRef } from \"react\";\r\nimport { AnimationMixer } from \"three\";\r\nimport { useFrame } from \"@react-three/fiber\";\r\nimport { useGLTF } from \"@react-three/drei\";\r\n\r\nimport animationGlb from \"./animation.glb\";\r\n\r\nconst Animation = () => {\r\n  const { animations, scene } = useGLTF(animationGlb, true);\r\n  const animationRef = useRef();\r\n  const mixer = useMemo(() => new AnimationMixer(), []);\r\n\r\n  useEffect(() => {\r\n    if (animationRef.current) {\r\n      mixer.clipAction(animations[0], animationRef.current).play();\r\n    }\r\n  }, [animations, mixer]);\r\n\r\n  useFrame((state, delta) => {\r\n    mixer.update(delta);\r\n  });\r\n\r\n  return <primitive object={scene} ref={animationRef} />;\r\n};\r\n\r\nexport default Animation;\r\n","import { useState } from \"react\";\r\nimport { Text } from \"@react-three/drei\";\r\n\r\nconst Button = () => {\r\n  const [hover, setHover] = useState(false);\r\n  const [color, setColor] = useState(0x00ff00);\r\n\r\n  return (\r\n    <group\r\n      onClick={() => setColor(0xff0000)}\r\n      onDoubleClick={() => setColor(0x0000ff)}\r\n      onPointerOut={() => setHover(false)}\r\n      onPointerOver={() => setHover(true)}\r\n    >\r\n      <mesh>\r\n        <meshMatcapMaterial\r\n          color={color}\r\n          opacity={hover ? 0.75 : 1}\r\n          transparent={true}\r\n        />\r\n        <planeGeometry args={[1, 0.5]} />\r\n      </mesh>\r\n      <Text color=\"white\" fontSize={0.2} position={[0, 0, 0.01]}>\r\n        Click Me!\r\n      </Text>\r\n    </group>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import { useState } from \"react\";\r\nimport { MathUtils } from \"three\";\r\nimport { Text } from \"@react-three/drei\";\r\nimport { animated, useSpring } from \"@react-spring/three\";\r\n\r\nconst Spring = (props) => {\r\n  const [hover, setHover] = useState(false);\r\n  const [toggle, setToggle] = useState(false);\r\n  const [colorCurrent, setColorCurrent] = useState(0xff0000);\r\n  const { opacity, rotation, scale } = useSpring({\r\n    opacity: toggle ? 0.5 : 0.2,\r\n    rotation: toggle ? [MathUtils.degToRad(-45), 0, 0] : [0, 0, 0],\r\n    scale: hover ? [1.5, 1.25, 1] : [1, 1, 1],\r\n  });\r\n\r\n  return (\r\n    <animated.group\r\n      {...props}\r\n      onClick={() => setToggle(!toggle)}\r\n      onDoubleClick={() => setColorCurrent(colorCurrent >> 8)}\r\n      onPointerOut={() => setHover(false)}\r\n      onPointerOver={() => setHover(true)}\r\n      rotation={rotation}\r\n    >\r\n      <animated.mesh scale={scale}>\r\n        <planeGeometry args={[1, 0.5]} />\r\n        <animated.meshBasicMaterial\r\n          color={0xff0000}\r\n          opacity={opacity}\r\n          transparent={true}\r\n        />\r\n      </animated.mesh>\r\n      <Text color=\"white\" fontSize={0.2} position={[0, 0, 0.01]}>\r\n        Click Me!\r\n      </Text>\r\n    </animated.group>\r\n  );\r\n};\r\n\r\nexport default Spring;\r\n","const AZERTY = {\r\n  LEFT: \"KeyQ\",\r\n  UP: \"KeyZ\",\r\n};\r\nconst DIRECTION = {\r\n  BACK: -1,\r\n  DOWN: -1,\r\n  FORWARD: 1,\r\n  LEFT: -1,\r\n  NONE: 0,\r\n  RIGHT: 1,\r\n  UP: 1,\r\n};\r\nconst QWERTY = {\r\n  LEFT: \"KeyA\",\r\n  UP: \"KeyW\",\r\n};\r\n\r\nclass KeyboardControls {\r\n  static #forwardDirection = DIRECTION.NONE;\r\n  static #keyboard = QWERTY;\r\n  static #rightDirection = DIRECTION.NONE;\r\n  static #upDirection = DIRECTION.NONE;\r\n\r\n  static get forwardDirection() {\r\n    return this.#forwardDirection;\r\n  }\r\n\r\n  static get rightDirection() {\r\n    return this.#rightDirection;\r\n  }\r\n\r\n  static get upDirection() {\r\n    return this.#upDirection;\r\n  }\r\n\r\n  static keyDownHandler(event) {\r\n    console.log(\"KeyboardControls: keyDownHandler\", `'${event.code}'`);\r\n    switch (event.code) {\r\n      case \"ArrowDown\":\r\n      case \"KeyS\":\r\n        KeyboardControls.#forwardDirection = DIRECTION.BACK;\r\n        break;\r\n      case \"ArrowLeft\":\r\n      case KeyboardControls.#keyboard.LEFT:\r\n        KeyboardControls.#rightDirection = DIRECTION.LEFT;\r\n        break;\r\n      case \"ArrowRight\":\r\n      case \"KeyD\":\r\n        KeyboardControls.#rightDirection = DIRECTION.RIGHT;\r\n        break;\r\n      case \"ArrowUp\":\r\n      case KeyboardControls.#keyboard.UP:\r\n        KeyboardControls.#forwardDirection = DIRECTION.FORWARD;\r\n        break;\r\n      case \"KeyF\":\r\n        KeyboardControls.#upDirection = DIRECTION.DOWN;\r\n        break;\r\n      case \"KeyR\":\r\n        KeyboardControls.#upDirection = DIRECTION.UP;\r\n        break;\r\n      default:\r\n    }\r\n  }\r\n\r\n  static keyUpHandler(event) {\r\n    console.log(\"KeyboardControls: keyUpHandler\", `'${event.code}'`);\r\n    switch (event.code) {\r\n      case \"ArrowDown\":\r\n      case \"ArrowUp\":\r\n      case \"KeyS\":\r\n      case KeyboardControls.#keyboard.UP:\r\n        KeyboardControls.#forwardDirection = DIRECTION.NONE;\r\n        break;\r\n      case \"ArrowLeft\":\r\n      case \"ArrowRight\":\r\n      case \"KeyD\":\r\n      case KeyboardControls.#keyboard.LEFT:\r\n        KeyboardControls.#rightDirection = DIRECTION.NONE;\r\n        break;\r\n      case \"KeyF\":\r\n      case \"KeyR\":\r\n        KeyboardControls.#upDirection = DIRECTION.NONE;\r\n        break;\r\n      default:\r\n    }\r\n  }\r\n\r\n  static addEventListeners() {\r\n    console.info(\"KeyboardControls: addEventListeners\");\r\n    window.addEventListener(\"keydown\", KeyboardControls.keyDownHandler);\r\n    window.addEventListener(\"keyup\", KeyboardControls.keyUpHandler);\r\n  }\r\n\r\n  static removeEventListeners() {\r\n    console.info(\"KeyboardControls: removeEventListeners\");\r\n    window.removeEventListener(\"keydown\", KeyboardControls.keyDownHandler);\r\n    window.removeEventListener(\"keyup\", KeyboardControls.keyUpHandler);\r\n  }\r\n\r\n  static setKeyboardAzerty() {\r\n    console.log(this.#keyboard);\r\n    this.#keyboard = AZERTY;\r\n    console.log(this.#keyboard);\r\n  }\r\n\r\n  static setKeyboardQwerty() {\r\n    this.#keyboard = QWERTY;\r\n  }\r\n}\r\n\r\nexport default KeyboardControls;\r\n","import { MathUtils } from \"three\";\r\n\r\nclass MathCircle {\r\n  #radius = 1;\r\n  #angle = 0;\r\n\r\n  constructor(radius = 1) {\r\n    this.#radius = radius;\r\n  }\r\n\r\n  get angle() {\r\n    return this.#angle;\r\n  }\r\n\r\n  set angle(degrees) {\r\n    this.#angle = MathUtils.degToRad(degrees);\r\n  }\r\n\r\n  getCoordinates(degrees) {\r\n    this.angle = degrees;\r\n    const x = Math.cos(this.angle) * this.#radius;\r\n    const y = Math.sin(this.angle) * this.#radius;\r\n\r\n    return { x, y };\r\n  }\r\n}\r\n\r\nexport default MathCircle;\r\n","class ZeroFill {\r\n  #number;\r\n  #postfix;\r\n  #zeros;\r\n\r\n  constructor(number = 0, zeros = 0, postfix = \"\") {\r\n    this.number = number;\r\n    this.#postfix = postfix;\r\n    this.#zeros = zeros;\r\n  }\r\n\r\n  get number() {\r\n    return this.zeroFill(this.#number);\r\n  }\r\n\r\n  set number(number) {\r\n    this.#number = Math.floor(number).toString();\r\n  }\r\n\r\n  toString() {\r\n    return this.number + this.#postfix;\r\n  }\r\n\r\n  zeroFill(string) {\r\n    while (string.length < this.#zeros) {\r\n      string = `0${string}`;\r\n    }\r\n    return string;\r\n  }\r\n}\r\n\r\nexport default ZeroFill;\r\n","import { useRef } from \"react\";\r\nimport { DoubleSide, MathUtils } from \"three\";\r\nimport { useFrame } from \"@react-three/fiber\";\r\nimport { Text } from \"@react-three/drei\";\r\nimport { MathCircle } from \"App/utils\";\r\n\r\nfunction isHour(tick) {\r\n  return !(tick % 5);\r\n}\r\n\r\nconst HH = 12;\r\nconst MM = 60;\r\nconst SS = 60;\r\n\r\nconst CLOCK_SIZE = 2;\r\n\r\nconst CLOCK = {\r\n  HAND: {\r\n    HH: {\r\n      LENGTH: 0.6 * CLOCK_SIZE,\r\n      WIDTH: 0.02 * CLOCK_SIZE,\r\n    },\r\n    MM: { LENGTH: 0.7 * CLOCK_SIZE },\r\n    SS: { COLOR: 0xffcc66, LENGTH: 0.8 * CLOCK_SIZE },\r\n    THICKNESS: 0.02 * CLOCK_SIZE,\r\n  },\r\n  MARK: {\r\n    HH: {\r\n      COLOR: 0xff0000,\r\n      LENGTH: 0.1 * CLOCK_SIZE,\r\n      WIDTH: 0.02 * CLOCK_SIZE,\r\n    },\r\n    MM: {\r\n      COLOR: 0xffffff,\r\n      LENGTH: 0.08 * CLOCK_SIZE,\r\n      WIDTH: 0.01 * CLOCK_SIZE,\r\n    },\r\n    OFFSET: 0.05 * CLOCK_SIZE,\r\n  },\r\n};\r\n\r\n/**\r\n * Clock using standard React Three Fiber JSX\r\n */\r\nconst ClockAnalogue = (props) => {\r\n  const clockRef = useRef();\r\n  const handHoursRef = useRef();\r\n  const handMinutesRef = useRef();\r\n  const handSecondsRef = useRef();\r\n\r\n  const angleStart = MathUtils.degToRad(90);\r\n\r\n  useFrame(() => {\r\n    const d = new Date();\r\n    if (handHoursRef.current) {\r\n      handHoursRef.current.rotation.z = MathUtils.degToRad(\r\n        (d.getHours() + d.getMinutes() / MM) * -(360 / HH)\r\n      );\r\n    }\r\n    if (handMinutesRef.current) {\r\n      handMinutesRef.current.rotation.z = MathUtils.degToRad(\r\n        d.getMinutes() * -(360 / MM)\r\n      );\r\n    }\r\n    if (handSecondsRef.current) {\r\n      handSecondsRef.current.rotation.z = MathUtils.degToRad(\r\n        d.getSeconds() * -(360 / SS)\r\n      );\r\n    }\r\n  });\r\n\r\n  return (\r\n    <group ref={clockRef} {...props}>\r\n      <group>\r\n        <Text\r\n          color=\"black\"\r\n          fontSize={0.1 * CLOCK_SIZE}\r\n          position={[0, -0.25, 0.01].map((value) => value * CLOCK_SIZE)}\r\n        >\r\n          Arteveldehogeschool\r\n        </Text>\r\n        {Array(HH)\r\n          .fill(null)\r\n          .map((value, index) => {\r\n            const c = new MathCircle(CLOCK.MARK.HH.LENGTH * 4);\r\n            const angle = (index * 360) / HH + 90;\r\n            const { x, y } = c.getCoordinates(angle);\r\n            return (\r\n              <Text\r\n                color={CLOCK.HAND.SS.COLOR}\r\n                fontSize={0.1 * CLOCK_SIZE}\r\n                key={index}\r\n                position={[x, y, 0.01]}\r\n                scale={Array(3).fill(1)}\r\n              >\r\n                {(12 - index).toString()}\r\n              </Text>\r\n            );\r\n          })}\r\n      </group>\r\n      <group rotation={[0, 0, angleStart]}>\r\n        <mesh receiveShadow={true}>\r\n          <circleGeometry args={[CLOCK_SIZE, MM]} />\r\n          <meshStandardMaterial\r\n            opacity={0.25}\r\n            side={DoubleSide}\r\n            transparent={true}\r\n          />\r\n        </mesh>\r\n        <group position={[0, 0, CLOCK.HAND.THICKNESS / 2]}>\r\n          <group position={[0, 0, CLOCK.HAND.THICKNESS / 2]} ref={handHoursRef}>\r\n            <mesh castShadow={true} position={[CLOCK.HAND.HH.LENGTH / 2, 0, 0]}>\r\n              <boxGeometry\r\n                args={[\r\n                  CLOCK.HAND.HH.LENGTH,\r\n                  0.06 * CLOCK_SIZE,\r\n                  CLOCK.HAND.THICKNESS,\r\n                ]}\r\n              />\r\n              <meshStandardMaterial />\r\n            </mesh>\r\n          </group>\r\n          <group\r\n            position={[0, 0, CLOCK.HAND.THICKNESS * 2]}\r\n            ref={handMinutesRef}\r\n          >\r\n            <mesh castShadow={true} position={[CLOCK.HAND.MM.LENGTH / 2, 0, 0]}>\r\n              <boxGeometry\r\n                args={[CLOCK.HAND.MM.LENGTH, 0.04, CLOCK.HAND.THICKNESS]}\r\n              />\r\n              <meshStandardMaterial />\r\n            </mesh>\r\n          </group>\r\n          <group\r\n            position={[\r\n              0,\r\n              0,\r\n              CLOCK.HAND.THICKNESS * 3 + CLOCK.HAND.THICKNESS / 2,\r\n            ]}\r\n            ref={handSecondsRef}\r\n          >\r\n            <mesh castShadow={true} position={[CLOCK.HAND.SS.LENGTH / 2, 0, 0]}>\r\n              <boxGeometry\r\n                args={[CLOCK.HAND.SS.LENGTH, 0.02, CLOCK.HAND.THICKNESS]}\r\n              />\r\n              <meshStandardMaterial color={CLOCK.HAND.SS.COLOR} />\r\n            </mesh>\r\n          </group>\r\n        </group>\r\n        {Array(MM)\r\n          .fill(null)\r\n          .map((value, index) => {\r\n            const radians = MathUtils.degToRad((360 / MM) * index);\r\n\r\n            return (\r\n              <group\r\n                key={index}\r\n                rotation={[0, 0, radians]}\r\n                position={[0, 0, 0.005]}\r\n              >\r\n                <mesh\r\n                  position={[\r\n                    CLOCK_SIZE -\r\n                      CLOCK.MARK.OFFSET -\r\n                      (isHour(index)\r\n                        ? CLOCK.MARK.HH.LENGTH - 0.01\r\n                        : CLOCK.MARK.HH.LENGTH) /\r\n                        2,\r\n                    0,\r\n                    0,\r\n                  ]}\r\n                >\r\n                  <boxGeometry\r\n                    args={[\r\n                      isHour(index)\r\n                        ? CLOCK.MARK.HH.LENGTH\r\n                        : CLOCK.MARK.MM.LENGTH,\r\n                      isHour(index) ? CLOCK.MARK.HH.WIDTH : CLOCK.MARK.MM.WIDTH,\r\n                      0.01,\r\n                    ]}\r\n                  />\r\n                  <meshStandardMaterial\r\n                    color={\r\n                      index === 0\r\n                        ? 0x0000ff\r\n                        : isHour(index)\r\n                        ? CLOCK.MARK.HH.COLOR\r\n                        : CLOCK.MARK.MM.COLOR\r\n                    }\r\n                  />\r\n                </mesh>\r\n              </group>\r\n            );\r\n          })}\r\n        <mesh\r\n          castShadow={true}\r\n          position={[0, 0, 0.05]}\r\n          rotation={[-90, 0, 0].map((degrees) => MathUtils.degToRad(degrees))}\r\n        >\r\n          <cylinderGeometry args={[0.1, 0.05, CLOCK.HAND.THICKNESS * 5, 36]} />\r\n          <meshStandardMaterial />\r\n        </mesh>\r\n      </group>\r\n    </group>\r\n  );\r\n};\r\n\r\nexport default ClockAnalogue;\r\n","import { useEffect, useRef } from \"react\";\r\nimport { MathUtils } from \"three\";\r\nimport { useFrame } from \"@react-three/fiber\";\r\nimport { Text } from \"@react-three/drei\";\r\n\r\nconst ClockDigital = (props) => {\r\n  const clockRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (clockRef.current) {\r\n      clockRef.current.rotation.x = MathUtils.degToRad(-30);\r\n    }\r\n  }, []);\r\n\r\n  useFrame(() => {\r\n    if (clockRef.current) {\r\n      clockRef.current.text = new Date().toLocaleTimeString();\r\n    }\r\n  });\r\n\r\n  return <Text fontSize={2} ref={clockRef} {...props} />;\r\n};\r\n\r\nexport default ClockDigital;\r\n","import { useState } from \"react\";\r\nimport { animated, useSpring } from \"@react-spring/three\";\r\n\r\nconst Cube = (props) => {\r\n  const colors = [\"#f00\", \"#ff0\", \"#0f0\", \"#0ff\", \"#00f\", \"#f0f\"];\r\n  const color = colors[Math.floor(Math.random() * colors.length)];\r\n  const [toggle, setToggle] = useState(true);\r\n  const { opacity, position } = useSpring({\r\n    opacity: toggle ? 1 : 0.5,\r\n    position: toggle ? [0, 0, 0] : getPosition(),\r\n  });\r\n\r\n  function getPosition() {\r\n    return [4, 4, 0].map((value) => (Math.random() * 2 - 1) * value);\r\n  }\r\n\r\n  return (\r\n    <animated.mesh\r\n      {...props}\r\n      onClick={() => setToggle(!toggle)}\r\n      position={position}\r\n    >\r\n      <boxGeometry args={[1, 1, 1]} />\r\n      <animated.meshMatcapMaterial\r\n        color={color}\r\n        opacity={opacity}\r\n        transparent={true}\r\n      />\r\n    </animated.mesh>\r\n  );\r\n};\r\n\r\nexport default Cube;\r\n","import { MathUtils } from \"three\";\r\nimport { Plane } from \"@react-three/drei\";\r\n\r\nconst Face = (props) => {\r\n  return (\r\n    <Plane\r\n      args={[10, 10]}\r\n      rotation={[MathUtils.degToRad(-90), 0, 0]}\r\n      {...props}\r\n    >\r\n      <meshStandardMaterial />\r\n    </Plane>\r\n  );\r\n};\r\n\r\nexport default Face;\r\n","// @todo Rotate gauge based on range, in stead of compensating rotation in calculation.\r\nimport { useRef } from \"react\";\r\nimport { MathUtils } from \"three\";\r\nimport { useFrame } from \"@react-three/fiber\";\r\nimport { Box, Circle, Cone, Cylinder } from \"@react-three/drei\";\r\n\r\nconst ANGLE_RANGE = 270;\r\nconst NEEDLE_STEP = {\r\n  DOWN: -250,\r\n  UP: 60,\r\n};\r\n\r\nconst Gauge = (props) => {\r\n  const TICK_MARKS = [\r\n    { color: \"green\", label: \"0\", ref: useRef(), value: 0 },\r\n    { color: \"white\", label: \"10\", ref: useRef(), value: 1000 },\r\n    { color: \"white\", label: \"20\", ref: useRef(), value: 2000 },\r\n    { color: \"white\", label: \"30\", ref: useRef(), value: 3000 },\r\n    { color: \"white\", label: \"40\", ref: useRef(), value: 4000 },\r\n    { color: \"white\", label: \"50\", ref: useRef(), value: 5000 },\r\n    { color: \"orange\", label: \"60\", ref: useRef(), value: 6000 },\r\n    { color: \"red\", label: \"70\", ref: useRef(), value: 7000 },\r\n    { color: \"red\", label: \"80\", ref: useRef(), value: 8000 },\r\n  ];\r\n  const angleStep = ANGLE_RANGE / (TICK_MARKS.length - 1);\r\n  const angleStart = MathUtils.degToRad(-(90 + (360 - ANGLE_RANGE) / 2));\r\n  const valueRange = (TICK_MARKS.length - 1) * 1000;\r\n  const valueStep = ANGLE_RANGE / valueRange;\r\n  const needleRef = useRef();\r\n  let needleAngle = 0;\r\n  let needleValue = 0;\r\n  let needleStep = NEEDLE_STEP.UP;\r\n\r\n  useFrame(() => {\r\n    if (needleValue <= 0) {\r\n      needleStep = NEEDLE_STEP.UP;\r\n    } else if (valueRange <= needleValue) {\r\n      needleStep = NEEDLE_STEP.DOWN;\r\n    }\r\n    needleValue += needleStep;\r\n    needleAngle = MathUtils.degToRad(-(valueStep * needleValue));\r\n    needleRef.current.rotation.z = needleAngle;\r\n\r\n    TICK_MARKS.forEach((tickMark) => {\r\n      tickMark.ref.current.children[0].material.color.setColorName(\r\n        tickMark.value <= needleValue ? \"blue\" : tickMark.color\r\n      );\r\n    });\r\n  });\r\n\r\n  return (\r\n    <group {...props} rotation={[0, 0, angleStart]}>\r\n      <Circle args={[1.2, 62]} position={[0, 0, 0]} receiveShadow={true}>\r\n        <meshStandardMaterial opacity={0.25} transparent={true} />\r\n      </Circle>\r\n      {TICK_MARKS.map((tickMark, index) => {\r\n        return (\r\n          <group\r\n            key={index}\r\n            ref={tickMark.ref}\r\n            rotation={[0, 0, -angleStep * index].map((degrees) =>\r\n              MathUtils.degToRad(degrees)\r\n            )}\r\n          >\r\n            <Box args={[0.25, 0.05, 0.02]} position={[1, 0, 0.01]}>\r\n              <meshStandardMaterial\r\n                color={tickMark.color}\r\n                metalness={0.1}\r\n                opacity={0.5}\r\n                roughness={0.6}\r\n                transparent={true}\r\n              />\r\n            </Box>\r\n          </group>\r\n        );\r\n      })}\r\n\r\n      <group position={[0, 0, 0.05]}>\r\n        <group ref={needleRef}>\r\n          <group\r\n            rotation={[0, 0, -90].map((degrees) => MathUtils.degToRad(degrees))}\r\n          >\r\n            <Cone args={[0.03, 1, 4]} castShadow={true} position={[0, 0.5, 0]}>\r\n              <meshStandardMaterial\r\n                color=\"orange\"\r\n                metalness={0.1}\r\n                roughness={0.6}\r\n              />\r\n            </Cone>\r\n          </group>\r\n        </group>\r\n        <Cylinder\r\n          args={[0.1, 0.05, 0.1, 36]}\r\n          castShadow={true}\r\n          rotation={[-90, 0, 0].map((degrees) => MathUtils.degToRad(degrees))}\r\n        >\r\n          <meshStandardMaterial />\r\n        </Cylinder>\r\n      </group>\r\n    </group>\r\n  );\r\n};\r\n\r\nexport default Gauge;\r\n","export default __webpack_public_path__ + \"static/media/UV_Grid_Sm.8ab40f71.jpg\";","import { DoubleSide, Vector2 } from \"three\";\r\nimport { useTexture } from \"@react-three/drei\";\r\n\r\nimport uvGrid from \"./UV_Grid_Sm.jpg\";\r\n\r\nconst Image = () => {\r\n  const texture = useTexture(uvGrid, true);\r\n  texture.offset = new Vector2(0, 0);\r\n  texture.repeat = new Vector2(1, 1);\r\n\r\n  return (\r\n    <mesh>\r\n      <planeGeometry args={[1, 1, 1]} />\r\n      <meshStandardMaterial center map={texture} side={DoubleSide} />\r\n    </mesh>\r\n  );\r\n};\r\n\r\nexport default Image;\r\n","export default __webpack_public_path__ + \"static/media/arteveldehogeschool_logo.6220cd57.svg\";","export default __webpack_public_path__ + \"static/media/SVG_logo.e87754b4.svg\";","import { SvgLoader } from \"App/components\";\r\n\r\nimport logoNl from \"./arteveldehogeschool_logo.svg\";\r\nimport svgLogo from \"./SVG_logo.svg\";\r\n\r\nconst svgLogoUrl =\r\n  \"https://upload.wikimedia.org/wikipedia/commons/0/02/SVG_logo.svg\";\r\n\r\nconst ImageSvg = (props) => {\r\n  const scale = 0.0075;\r\n\r\n  return (\r\n    <>\r\n      <SvgLoader position={[0, 0, 0]} scale={scale} source={svgLogoUrl} />;\r\n      <SvgLoader position={[0, 0, -1]} scale={scale} source={logoNl} />;\r\n      <SvgLoader position={[0, 0, -2]} scale={scale} source={svgLogo} />;\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImageSvg;\r\n","import { MathUtils } from \"three\";\r\n\r\nconst Lighting = () => {\r\n  return (\r\n    <>\r\n      <ambientLight color={0xffffff} intensity={0.1} />\r\n      <directionalLight\r\n        castShadow={true}\r\n        color={0xffffff}\r\n        intensity={1}\r\n        position={[4, 4, 1]}\r\n      />\r\n      <hemisphereLight />\r\n      <pointLight\r\n        castShadow={true}\r\n        color={0xffcc77}\r\n        intensity={0.5}\r\n        position={[-4, 1, -4]}\r\n      />\r\n      <spotLight\r\n        angle={MathUtils.degToRad(30)}\r\n        castShadow={true}\r\n        color={0xffcc77}\r\n        intensity={1}\r\n        penumbra={0.5}\r\n        position={[0, 4, 0]}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Lighting;\r\n","import { useRef } from \"react\";\r\nimport {\r\n  DirectionalLightHelper,\r\n  MathUtils,\r\n  Object3D,\r\n  PointLightHelper,\r\n  SpotLightHelper,\r\n} from \"three\";\r\nimport { useControls } from \"leva\";\r\nimport { useFrame, useThree } from \"@react-three/fiber\";\r\nimport { useHelper } from \"@react-three/drei\";\r\n\r\nconst LightingGui = () => {\r\n  const { ambientLightColor, ambientLightIntensity } = useControls(\r\n    \"Lighting - Ambient Light\",\r\n    {\r\n      ambientLightColor: { label: \"Color\", value: \"#ffffff\" },\r\n      ambientLightIntensity: { label: \"Intensity\", max: 1, min: 0, value: 0.1 },\r\n    }\r\n  );\r\n  const { directionalLightColor, directionalLightIntensity } = useControls(\r\n    \"Lighting - Directional Light\",\r\n    {\r\n      directionalLightColor: { label: \"Color\", value: \"#ffffff\" },\r\n      directionalLightIntensity: {\r\n        label: \"Intensity\",\r\n        max: 1,\r\n        min: 0,\r\n        value: 1,\r\n      },\r\n    }\r\n  );\r\n  const {\r\n    pointLightColor,\r\n    pointLightIntensity,\r\n    pointLightPosition,\r\n  } = useControls(\"Lighting - Point Light\", {\r\n    pointLightColor: { label: \"Color\", value: \"#ffcc77\" },\r\n    pointLightIntensity: { label: \"Intensity\", max: 20, min: 0, value: 0.5 },\r\n    pointLightPosition: { label: \"Position XZ\", value: { x: -4, z: -4 } },\r\n  });\r\n  const {\r\n    spotLightColor,\r\n    spotLightIntensity,\r\n    spotLightPosition,\r\n    spotLightTarget,\r\n  } = useControls(\"Lighting - Spot Light\", {\r\n    spotLightColor: { label: \"Color\", value: \"#ffcc77\" },\r\n    spotLightIntensity: { label: \"Intensity\", max: 20, min: 0, value: 1 },\r\n    spotLightPosition: { label: \"Position XZ\", value: { x: 0, z: 0 } },\r\n    spotLightTarget: { label: \"Target XZ\", value: { x: 0, z: 0 } },\r\n  });\r\n\r\n  const { scene } = useThree();\r\n  const target = new Object3D();\r\n  scene.add(target);\r\n\r\n  const directionalLightRef = useRef();\r\n  // const hemisphereLightRef = useRef();\r\n  const pointLightRef = useRef();\r\n  const spotLightRef = useRef();\r\n  const helperSize = 0.5;\r\n  useHelper(\r\n    directionalLightRef,\r\n    DirectionalLightHelper,\r\n    helperSize,\r\n    directionalLightColor\r\n  );\r\n  useHelper(pointLightRef, PointLightHelper, helperSize, pointLightColor);\r\n  useHelper(spotLightRef, SpotLightHelper, spotLightColor);\r\n\r\n  useFrame(() => {\r\n    target.translateX(spotLightTarget.x);\r\n    target.translateZ(spotLightTarget.z);\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <ambientLight\r\n        color={ambientLightColor}\r\n        intensity={ambientLightIntensity}\r\n      />\r\n      <directionalLight\r\n        castShadow={true}\r\n        color={directionalLightColor}\r\n        intensity={directionalLightIntensity}\r\n        position={[4, 4, 1]}\r\n        ref={directionalLightRef}\r\n      />\r\n      {/* <hemisphereLight ref={hemisphereLightRef} /> */}\r\n      <pointLight\r\n        castShadow={true}\r\n        color={pointLightColor}\r\n        intensity={pointLightIntensity}\r\n        position={[pointLightPosition.x, 1, pointLightPosition.z]}\r\n        ref={pointLightRef}\r\n      />\r\n      <spotLight\r\n        angle={MathUtils.degToRad(30)}\r\n        castShadow={true}\r\n        color={spotLightColor}\r\n        intensity={spotLightIntensity}\r\n        penumbra={0.5}\r\n        position={[spotLightPosition.x, 4, spotLightPosition.z]}\r\n        ref={spotLightRef}\r\n        target={target}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LightingGui;\r\n","const LightingStudio = () => {\r\n  return (\r\n    <>\r\n      <ambientLight intensity={0.1} />\r\n      <directionalLight\r\n        castShadow={true}\r\n        color=\"hsl(0, 0%, 70%)\"\r\n        intensity={0.4}\r\n        position={[0, 2, 4]}\r\n      />\r\n      <directionalLight\r\n        castShadow={true}\r\n        color=\"hsl(210, 100%, 70%)\"\r\n        position={[-4, 0, 0]}\r\n      />\r\n      <directionalLight\r\n        castShadow={true}\r\n        color=\"hsl(30, 100%, 70%)\"\r\n        position={[4, 0, 0]}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LightingStudio;\r\n","import { useRef } from \"react\";\r\nimport { DirectionalLightHelper } from \"three\";\r\nimport { useControls } from \"leva\";\r\nimport { useHelper } from \"@react-three/drei\";\r\n\r\nconst LightingStudio = () => {\r\n  const { ambientLightColor, ambientLightIntensity } = useControls(\r\n    \"Lighting - Ambient Light\",\r\n    {\r\n      ambientLightColor: { label: \"Color\", value: \"hsl(0, 0%, 100%)\" },\r\n      ambientLightIntensity: { label: \"Intensity\", max: 1, min: 0, value: 0.1 },\r\n    }\r\n  );\r\n  const { frontLightColor, frontLightIntensity } = useControls(\r\n    \"Lighting - Front Light\",\r\n    {\r\n      frontLightColor: { label: \"Color\", value: \"hsl(0, 0%, 70%)\" },\r\n      frontLightIntensity: { label: \"Intensity\", max: 2, min: 0, value: 0.4 },\r\n    }\r\n  );\r\n  const { leftLightColor, leftLightIntensity } = useControls(\r\n    \"Lighting - Left Light\",\r\n    {\r\n      leftLightColor: { label: \"Color\", value: \"hsl(210, 100%, 70%)\" },\r\n      leftLightIntensity: { label: \"Intensity\", max: 2, min: 0, value: 1 },\r\n    }\r\n  );\r\n  const { rightLightColor, rightLightIntensity } = useControls(\r\n    \"Lighting - Right Light\",\r\n    {\r\n      rightLightColor: { label: \"Color\", value: \"hsl(30, 100%, 70%)\" },\r\n      rightLightIntensity: { label: \"Intensity\", max: 2, min: 0, value: 1 },\r\n    }\r\n  );\r\n\r\n  const frontLightRef = useRef();\r\n  const leftLightRef = useRef();\r\n  const rightLightRef = useRef();\r\n  const helperSize = 0.5;\r\n  useHelper(frontLightRef, DirectionalLightHelper, helperSize, frontLightColor);\r\n  useHelper(leftLightRef, DirectionalLightHelper, helperSize, leftLightColor);\r\n  useHelper(rightLightRef, DirectionalLightHelper, helperSize, rightLightColor);\r\n\r\n  return (\r\n    <>\r\n      <ambientLight\r\n        color={ambientLightColor}\r\n        intensity={ambientLightIntensity}\r\n      />\r\n      <directionalLight\r\n        castShadow={true}\r\n        color={frontLightColor}\r\n        intensity={frontLightIntensity}\r\n        position={[0, 2, 4]}\r\n        ref={frontLightRef}\r\n      />\r\n      <directionalLight\r\n        castShadow={true}\r\n        color={leftLightColor}\r\n        intensity={leftLightIntensity}\r\n        position={[-4, 0, 0]}\r\n        ref={leftLightRef}\r\n      />\r\n      <directionalLight\r\n        castShadow={true}\r\n        color={rightLightColor}\r\n        intensity={rightLightIntensity}\r\n        position={[4, 0, 0]}\r\n        ref={rightLightRef}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LightingStudio;\r\n","const LightingThreePoint = () => {\r\n  return (\r\n    <>\r\n      <ambientLight intensity={0.1} />\r\n      <spotLight\r\n        castShadow={true}\r\n        color=\"hsl(0, 0%, 70%)\"\r\n        intensity={0.75}\r\n        position={[4, 2, -4]}\r\n      />\r\n      <spotLight\r\n        castShadow={true}\r\n        color=\"hsl(210, 100%, 70%)\"\r\n        intensity={0.75}\r\n        position={[-4, 2, 4]}\r\n      />\r\n      <spotLight\r\n        castShadow={true}\r\n        color=\"hsl(30, 100%, 70%)\"\r\n        intensity={0.75}\r\n        position={[4, 2, 4]}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LightingThreePoint;\r\n","import { useRef } from \"react\";\r\nimport { SpotLightHelper } from \"three\";\r\nimport { useControls } from \"leva\";\r\nimport { useHelper } from \"@react-three/drei\";\r\n\r\nconst LightingThreePointGui = () => {\r\n  const { ambientLightColor, ambientLightIntensity } = useControls(\r\n    \"Lighting - Ambient Light\",\r\n    {\r\n      ambientLightColor: { label: \"Color\", value: \"hsl(0, 0%, 100%)\" },\r\n      ambientLightIntensity: { label: \"Intensity\", max: 1, min: 0, value: 0.1 },\r\n    }\r\n  );\r\n  const { backLightColor, backLightIntensity } = useControls(\r\n    \"Lighting - Back Light\",\r\n    {\r\n      backLightColor: { label: \"Color\", value: \"hsl(0, 0%, 70%)\" },\r\n      backLightIntensity: { label: \"Intensity\", max: 2, min: 0, value: 0.75 },\r\n    }\r\n  );\r\n  const { fillLightColor, fillLightIntensity } = useControls(\r\n    \"Lighting - Fill Light\",\r\n    {\r\n      fillLightColor: { label: \"Color\", value: \"hsl(210, 100%, 70%)\" },\r\n      fillLightIntensity: { label: \"Intensity\", max: 2, min: 0, value: 0.75 },\r\n    }\r\n  );\r\n  const { keyLightColor, keyLightIntensity } = useControls(\r\n    \"Lighting - Key Light\",\r\n    {\r\n      keyLightColor: { label: \"Color\", value: \"hsl(30, 100%, 70%)\" },\r\n      keyLightIntensity: { label: \"Intensity\", max: 2, min: 0, value: 0.75 },\r\n    }\r\n  );\r\n\r\n  const backLightRef = useRef();\r\n  const fillLightRef = useRef();\r\n  const keyLightRef = useRef();\r\n  useHelper(backLightRef, SpotLightHelper, backLightColor);\r\n  useHelper(fillLightRef, SpotLightHelper, fillLightColor);\r\n  useHelper(keyLightRef, SpotLightHelper, keyLightColor);\r\n\r\n  return (\r\n    <>\r\n      <ambientLight\r\n        color={ambientLightColor}\r\n        intensity={ambientLightIntensity}\r\n      />\r\n      <spotLight\r\n        castShadow={true}\r\n        color={backLightColor}\r\n        intensity={backLightIntensity}\r\n        position={[4, 2, -4]}\r\n        ref={backLightRef}\r\n      />\r\n      <spotLight\r\n        castShadow={true}\r\n        color={fillLightColor}\r\n        intensity={fillLightIntensity}\r\n        position={[-4, 2, 4]}\r\n        ref={fillLightRef}\r\n      />\r\n      <spotLight\r\n        castShadow={true}\r\n        color={keyLightColor}\r\n        intensity={keyLightIntensity}\r\n        position={[4, 2, 4]}\r\n        ref={keyLightRef}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LightingThreePointGui;\r\n","export default __webpack_public_path__ + \"static/media/gltf-logo.d3501fc2.glb\";","import { useRef, useState } from \"react\";\r\nimport { useFrame } from \"@react-three/fiber\";\r\nimport { useGLTF } from \"@react-three/drei\";\r\n\r\nimport gltfLogoGlb from \"./gltf-logo.glb\";\r\n\r\nconst Logo = () => {\r\n  const [clockwise, setClockwise] = useState(false);\r\n\r\n  const gltfLogo = useGLTF(gltfLogoGlb, true);\r\n  const logoRef = useRef();\r\n  const speed = 0.025;\r\n\r\n  useFrame(() => {\r\n    logoRef.current.rotation.y += speed * (clockwise ? 1 : -1);\r\n  });\r\n\r\n  return (\r\n    <primitive\r\n      object={gltfLogo.scene}\r\n      onClick={() => setClockwise(!clockwise)}\r\n      position={[0, 0, 0]}\r\n      ref={logoRef}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import { useRef, useState } from \"react\";\r\nimport { useFrame } from \"@react-three/fiber\";\r\nimport { useGLTF } from \"@react-three/drei\";\r\n\r\nimport gltfLogoGlb from \"./gltf-logo.glb\";\r\n\r\nconst LogoDouble = () => {\r\n  const [clockwise, setClockwise] = useState(false);\r\n\r\n  const gltfLogo = useGLTF(gltfLogoGlb, true);\r\n  const logo1Ref = useRef();\r\n  const logo2Ref = useRef();\r\n  const speed = 0.025;\r\n\r\n  useFrame(() => {\r\n    if (logo1Ref.current)\r\n      logo1Ref.current.rotation.x += speed * (clockwise ? 1 : -1);\r\n    if (logo2Ref.current)\r\n      logo2Ref.current.rotation.y += speed * (clockwise ? 1 : -1);\r\n  });\r\n\r\n  return (\r\n    <group onClick={() => setClockwise(!clockwise)}>\r\n      <primitive\r\n        object={gltfLogo.scene}\r\n        position={[-1, -1, 0]}\r\n        ref={logo1Ref}\r\n      />\r\n      <primitive\r\n        object={gltfLogo.scene.clone(true)}\r\n        position={[1, 1, 0]}\r\n        ref={logo2Ref}\r\n      />\r\n    </group>\r\n  );\r\n};\r\n\r\nexport default LogoDouble;\r\n","const FontFamily = {\r\n  Architects_Daughter:\r\n    \"https://fonts.gstatic.com/s/architectsdaughter/v11/KtkxAKiDZI_td1Lkx62xHZHDtgO_Y-bvfY0.woff\",\r\n  Press_Start_2P:\r\n    \"https://fonts.gstatic.com/s/pressstart2p/v9/e3t4euO8T-267oIAQAu6jDQyK0nR.woff\",\r\n  Roboto_Slab:\r\n    \"https://fonts.gstatic.com/s/robotoslab/v12/BngbUXZYTXPIvIBgJJSb6s3BzlRRfKOFbvjovoSWaw.woff\",\r\n};\r\n\r\nexport default FontFamily;\r\n","/**\r\n * https://pixologic.com/zbrush/downloadcenter/library/\r\n * https://www.badking.com.au/site/product-category/materials/\r\n * https://www.zbrushcentral.com/t/matcap-repository/205029\r\n */\r\nconst MatCap = {\r\n  // Index or ID string, see: https://github.com/emmelleppi/matcaps/\r\n  id: {\r\n    GREEN_CRYSTAL: \"2E763A_78A0B7_B3D1CF_14F209\", // https://github.com/emmelleppi/matcaps/blob/master/PAGE-3.md#2e763a_78a0b7_b3d1cf_14f209 https://pixologic.com/zbrush/downloadcenter/img/matcaps/images/erklaerbar/ok_green_crystal.jpg\r\n    SILVERY: \"4C4C4C_D2D2D2_8F8F8F_ACACAC\", // https://github.com/emmelleppi/matcaps/blob/master/PAGE-8.md#4c4c4c_d2d2d2_8f8f8f_acacac https://pixologic.com/zbrush/downloadcenter/img/matcaps/images/slosh/bgs_silvery.jpg\r\n    TITANIUM: \"C7C7D7_4C4E5A_818393_6C6C74\", // https://github.com/emmelleppi/matcaps/blob/master/PAGE-28.md#c7c7d7_4c4e5a_818393_6c6c74 https://pixologic.com/zbrush/downloadcenter/img/matcaps/images/arranlewis/al_titanium.jpg\r\n    WORN_GOLD: \"6E5137_E8CA90_271912_B99C74\", // https://github.com/emmelleppi/matcaps/blob/master/PAGE-15.md#6e5137_e8ca90_271912_b99c74 https://pixologic.com/zbrush/downloadcenter/img/matcaps/thumbs/sathe/gw_worn_gold.jpg\r\n  },\r\n\r\n  // Texture size\r\n  size: {\r\n    XS: 64,\r\n    SM: 128,\r\n    MD: 256,\r\n    LG: 512,\r\n    XL: 1024,\r\n  },\r\n};\r\n\r\nexport default MatCap;\r\n","import { Text, useMatcapTexture } from \"@react-three/drei\";\r\nimport { FontFamily, MatCap } from \"App/lib\";\r\n\r\nconst LoremIpsum = () => {\r\n  const [matcapGreenCrystal] = useMatcapTexture(\r\n    MatCap.id.GREEN_CRYSTAL,\r\n    MatCap.size.XL\r\n  );\r\n  const [matcapSilvery] = useMatcapTexture(MatCap.id.SILVERY, MatCap.size.XL);\r\n  const [matcapWornGold] = useMatcapTexture(\r\n    MatCap.id.WORN_GOLD,\r\n    MatCap.size.XL\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Text fontSize={1} position={[0, 1, -0.2]}>\r\n        Lorem Ipsum\r\n        <meshLambertMaterial />\r\n      </Text>\r\n      <Text font={FontFamily.Roboto_Slab} fontSize={1} position={[0, 0, 0]}>\r\n        Lorem Ipsum\r\n        <meshMatcapMaterial matcap={matcapWornGold} />\r\n      </Text>\r\n      <Text\r\n        font={FontFamily.Architects_Daughter}\r\n        fontSize={1}\r\n        opacity={0.5}\r\n        position={[0, -1, 0.1]}\r\n        text=\"Lorem Ipsum\"\r\n      >\r\n        <meshMatcapMaterial matcap={matcapGreenCrystal} />\r\n      </Text>\r\n      <Text\r\n        color={0x000000}\r\n        font={FontFamily.Press_Start_2P}\r\n        fontSize={1}\r\n        outlineColor={0x00ff00}\r\n        outlineWidth={0.04}\r\n        position={[0, -2, 0.2]}\r\n        text=\"Lorem Ipsum\"\r\n      >\r\n        <meshMatcapMaterial matcap={matcapSilvery} opacity={0.9} />\r\n      </Text>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoremIpsum;\r\n","export default __webpack_public_path__ + \"static/media/normals.c5aed970.glb\";","import { useRef } from \"react\";\r\nimport { useGLTF } from \"@react-three/drei\";\r\nimport { useFrame } from \"@react-three/fiber\";\r\n\r\nimport normalsGlb from \"./normals.glb\";\r\n\r\nconst Normals = () => {\r\n  const normals = useGLTF(normalsGlb, true);\r\n  const normalsRef = useRef();\r\n\r\n  useFrame(() => {\r\n    if (normalsRef.current) {\r\n      normalsRef.current.rotation.x += 0.02;\r\n    }\r\n  });\r\n\r\n  return <primitive object={normals.scene} ref={normalsRef} />;\r\n};\r\n\r\nexport default Normals;\r\n","import { useEffect, useRef } from \"react\";\r\nimport { Text } from \"@react-three/drei\";\r\nimport { Box, Flex } from \"@react-three/flex\";\r\nimport { Manager } from \"socket.io-client\";\r\nimport { ZeroFill } from \"App/utils\";\r\n\r\nconst Socket = () => {\r\n  const distanceRef = useRef();\r\n  const speedRef = useRef();\r\n\r\n  const PORT = 3001;\r\n  const manager = new Manager(`http://localhost:${PORT}`);\r\n  const socket = manager.socket(\"/\");\r\n\r\n  socket.on(\"connect\", () => {\r\n    console.log(\"Socket connected: \", socket.connected);\r\n  });\r\n\r\n  socket.on(\"disconnect\", () => {\r\n    console.log(\"Socket disconnected\");\r\n  });\r\n\r\n  useEffect(() => {\r\n    socket.on(\"telemetry\", (message) => {\r\n      const distance = new ZeroFill(message.distance, 6, \" km\");\r\n      const speed = new ZeroFill(message.speed, 3, \" km/u\");\r\n      if (distanceRef.current) distanceRef.current.text = distance;\r\n      if (speedRef.current) speedRef.current.text = speed;\r\n    });\r\n  }, [socket]);\r\n\r\n  return (\r\n    <Flex\r\n      flexDirection=\"row\"\r\n      flexWrap=\"wrap\"\r\n      justifyContent=\"space-between\"\r\n      position={[-3, 0, 0]}\r\n      size={[6, 0, 0]}\r\n    >\r\n      <Box>\r\n        <Text\r\n          color=\"hsl(210, 100%, 70%)\"\r\n          fontSize={1}\r\n          ref={distanceRef}\r\n          text=\"Socket.IO\"\r\n        />\r\n      </Box>\r\n      <Box>\r\n        <Text\r\n          color=\"hsl(30, 100%, 70%)\"\r\n          fontSize={1}\r\n          ref={speedRef}\r\n          text=\"Socket.IO\"\r\n        />\r\n      </Box>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default Socket;\r\n","import { useState } from \"react\";\r\nimport { DoubleSide, MathUtils } from \"three\";\r\nimport { useMatcapTexture } from \"@react-three/drei\";\r\nimport { animated, useSpring } from \"@react-spring/three\";\r\nimport * as easings from \"d3-ease\";\r\n\r\nconst Spring = (props) => {\r\n  const [toggle, setToggle] = useState(true);\r\n  const [matcap] = useMatcapTexture(\r\n    \"80CA23_B7EE37_D5FA4C_A3E434\", // Index or ID string, see: https://github.com/emmelleppi/matcaps/\r\n    1024 // Texture size (64, 128, 256, 512, 1024)\r\n  );\r\n  const { opacity, position } = useSpring({\r\n    config: {\r\n      duration: 200,\r\n      easing: easings.easeCubic,\r\n    },\r\n    delay: 100,\r\n    from: {\r\n      opacity: toggle ? 0.5 : 1,\r\n      position: toggle ? [0, 0, 0] : [0, 0, -2],\r\n    },\r\n    to: [\r\n      { opacity: toggle ? 1 : 0.5 },\r\n      { opacity: toggle ? 0.5 : 1 },\r\n      { opacity: toggle ? 1 : 0.5, position: toggle ? [0, 0, -2] : [0, 0, 0] },\r\n    ],\r\n  });\r\n\r\n  return (\r\n    <group {...props}>\r\n      <mesh onClick={() => setToggle(!toggle)}>\r\n        <ringGeometry\r\n          args={[\r\n            1.1, // innerRadius\r\n            1.9, // outerRadius\r\n            72, // thetaSegments\r\n            1, // phiSegments\r\n            MathUtils.degToRad(90), // thetaStart\r\n            MathUtils.degToRad(350), // thetaLength\r\n          ]}\r\n        />\r\n        <animated.meshMatcapMaterial\r\n          matcap={matcap}\r\n          opacity={opacity}\r\n          side={DoubleSide}\r\n          transparent={true}\r\n        />\r\n      </mesh>\r\n      <animated.mesh position={position}>\r\n        <torusGeometry\r\n          args={[\r\n            1.5, // radius\r\n            0.5, // tube\r\n            72, // radialSegments\r\n            32, // tubularSegments\r\n            MathUtils.degToRad(360), // arc\r\n          ]}\r\n        />\r\n        <meshMatcapMaterial matcap={matcap} opacity={0.25} transparent={true} />\r\n      </animated.mesh>\r\n    </group>\r\n  );\r\n};\r\n\r\nexport default Spring;\r\n","export default __webpack_public_path__ + \"static/media/suzanne.a6e83718.glb\";","import { useRef, useState } from \"react\";\r\nimport { useFrame } from \"@react-three/fiber\";\r\nimport { useGLTF } from \"@react-three/drei\";\r\n\r\nimport suzanneGlb from \"./suzanne.glb\";\r\n\r\nconst Suzanne = () => {\r\n  const [clockwise, setClockwise] = useState(false);\r\n  const [rotate, setRotate] = useState(false);\r\n  const { nodes, materials } = useGLTF(suzanneGlb, true);\r\n  const objectRef = useRef();\r\n  const speed = 0.025;\r\n\r\n  useFrame(() => {\r\n    if (objectRef.current) {\r\n      objectRef.current.rotation.x +=\r\n        speed * (rotate ? 1 : 0) * (clockwise ? 1 : -1);\r\n      objectRef.current.rotation.y +=\r\n        speed * (rotate ? 1 : 0) * (clockwise ? 1 : -1);\r\n      objectRef.current.rotation.z +=\r\n        speed * (rotate ? 1 : 0) * (clockwise ? 1 : -1);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <group\r\n      ref={objectRef}\r\n      onClick={() => setClockwise(!clockwise)}\r\n      onDoubleClick={() => setRotate(!rotate)}\r\n    >\r\n      <mesh geometry={nodes.Suzanne.geometry} material={materials[\"Paars\"]} />\r\n    </group>\r\n  );\r\n};\r\n\r\nexport default Suzanne;\r\n","import { useGLTF, useMatcapTexture } from \"@react-three/drei\";\r\nimport { MatCap } from \"App/lib\";\r\n\r\nimport suzanneGlb from \"./suzanne.glb\";\r\n\r\nconst SuzanneMatcapTexture = () => {\r\n  const { nodes } = useGLTF(suzanneGlb, true);\r\n\r\n  const [matcap] = useMatcapTexture(MatCap.id.WORN_GOLD, MatCap.size.XL);\r\n\r\n  return (\r\n    <mesh geometry={nodes.Suzanne.geometry}>\r\n      <meshMatcapMaterial matcap={matcap} />\r\n    </mesh>\r\n  );\r\n};\r\n\r\nexport default SuzanneMatcapTexture;\r\n","import { useGLTF, useNormalTexture } from \"@react-three/drei\";\r\n\r\nimport suzanneGlb from \"./suzanne.glb\";\r\n\r\nconst SuzanneNormalTexture = () => {\r\n  const { nodes } = useGLTF(suzanneGlb, true);\r\n  const [normalMap] = useNormalTexture(\r\n    8, // Index or file name, see: https://github.com/emmelleppi/normal-maps/\r\n    //0 index of the normal texture - https://github.com/emmelleppi/normal-maps/blob/master/normals.json\r\n    {\r\n      anisotropy: 8,\r\n      offset: [0, 0],\r\n      repeat: [10, 10],\r\n    }\r\n  );\r\n\r\n  return (\r\n    <mesh geometry={nodes.Suzanne.geometry}>\r\n      <meshStandardMaterial normalMap={normalMap} />\r\n    </mesh>\r\n  );\r\n};\r\n\r\nexport default SuzanneNormalTexture;\r\n","import { MathUtils } from \"three\";\r\nimport { Plane, useGLTF } from \"@react-three/drei\";\r\nimport { useControls } from \"leva\";\r\n\r\nimport suzanneGlb from \"./suzanne.glb\";\r\n\r\nconst SuzannePhysicalMaterial = () => {\r\n  const { nodes } = useGLTF(suzanneGlb, true);\r\n\r\n  const { dithering, opacity, transparent } = useControls(\"Material\", {\r\n    dithering: { label: \"Dithering\", value: false },\r\n    opacity: { label: \"Transparent\", max: 1, min: 0, value: 1 },\r\n    transparent: { label: \"Transparent\", value: true },\r\n  });\r\n\r\n  const {\r\n    color,\r\n    emissive,\r\n    emissiveIntensity,\r\n    metalness,\r\n    roughness,\r\n    refractionRatio,\r\n    wireframe,\r\n  } = useControls(\"Standard Material\", {\r\n    color: { label: \"Color\", value: \"#ffffff\" },\r\n    emissive: { label: \"Emissive\", value: \"#000000\" },\r\n    emissiveIntensity: {\r\n      label: \"Emissive Intensity\",\r\n      max: 5,\r\n      min: 0,\r\n      value: 1,\r\n    },\r\n    metalness: { label: \"Metalness\", max: 1, min: 0, value: 0 },\r\n    refractionRatio: {\r\n      label: \"Refraction Ratio\",\r\n      max: 2,\r\n      min: 0,\r\n      value: 0.98,\r\n    },\r\n    roughness: { label: \"Roughness\", max: 1, min: 0, value: 1 },\r\n    wireframe: { label: \"Wireframe\", value: false },\r\n  });\r\n\r\n  const {\r\n    clearcoat,\r\n    clearcoatRoughness,\r\n    ior,\r\n    sheen,\r\n    sheenRoughness,\r\n    sheenTint,\r\n    specularIntensity,\r\n    specularTint,\r\n    thickness,\r\n    transmission,\r\n  } = useControls(\"Physical Material\", {\r\n    clearcoat: { label: \"Clearcoat\", max: 1, min: 0, value: 0 },\r\n    clearcoatRoughness: {\r\n      label: \"Clearcoat Roughness\",\r\n      max: 1,\r\n      min: 0,\r\n      value: 0,\r\n    },\r\n    ior: {\r\n      label: \"Index of Refraction\",\r\n      max: 2.333,\r\n      min: 1,\r\n      value: 1.5,\r\n    },\r\n    reflectivity: { label: \"Reflectivity\", max: 1, min: 0, value: 0.5 },\r\n    sheen: { label: \"Sheen\", max: 1, min: 0, value: 0 },\r\n    sheenRoughness: { label: \"Sheen Roughness\", max: 1, min: 0, value: 1 },\r\n    sheenTint: { label: \"Sheen Tint\", value: \"#ffffff\" },\r\n    specularIntensity: {\r\n      label: \"Specular Intensity\",\r\n      max: 1,\r\n      min: 0,\r\n      value: 1,\r\n    },\r\n    specularTint: { label: \"Specular Tint\", value: \"#ffffff\" },\r\n    thickness: { label: \"Thickness\", max: 10, min: 0, value: 0.01 },\r\n    transmission: { label: \"Transmission\", max: 1, min: 0, value: 0 },\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <mesh geometry={nodes.Suzanne.geometry}>\r\n        <meshPhysicalMaterial\r\n          clearcoat={clearcoat}\r\n          clearcoatRoughness={clearcoatRoughness}\r\n          color={color}\r\n          dithering={dithering}\r\n          emissive={emissive}\r\n          emissiveIntensity={emissiveIntensity}\r\n          ior={ior}\r\n          metalness={metalness}\r\n          opacity={opacity}\r\n          refractionRatio={refractionRatio}\r\n          roughness={roughness}\r\n          sheen={sheen}\r\n          sheenRoughness={sheenRoughness}\r\n          sheenTint={sheenTint}\r\n          specularIntensity={specularIntensity}\r\n          specularTint={specularTint}\r\n          thickness={thickness}\r\n          transmission={transmission}\r\n          transparent={transparent}\r\n          wireframe={wireframe}\r\n        />\r\n      </mesh>\r\n      <Plane\r\n        args={[2, 2]}\r\n        position={[0, 0, -1]}\r\n        rotation={[0, 0, 45].map((v) => MathUtils.degToRad(v))}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SuzannePhysicalMaterial;\r\n","import { MathUtils } from \"three\";\r\nimport { Plane, useGLTF } from \"@react-three/drei\";\r\nimport { useControls } from \"leva\";\r\n\r\nimport suzanneGlb from \"./suzanne.glb\";\r\n\r\nconst SuzanneStandardMaterial = () => {\r\n  const { nodes } = useGLTF(suzanneGlb, true);\r\n\r\n  const { dithering, opacity, transparent } = useControls(\"Material\", {\r\n    dithering: { label: \"Dithering\", value: false },\r\n    opacity: { label: \"Transparent\", max: 1, min: 0, value: 1 },\r\n    transparent: { label: \"Transparent\", value: true },\r\n  });\r\n\r\n  const {\r\n    color,\r\n    emissive,\r\n    emissiveIntensity,\r\n    metalness,\r\n    refractionRatio,\r\n    roughness,\r\n    wireframe,\r\n  } = useControls(\"Standard Material\", {\r\n    color: { label: \"Color\", value: \"#ffffff\" },\r\n    emissive: { label: \"Emissive\", value: \"#000000\" },\r\n    emissiveIntensity: {\r\n      label: \"Emissive Intensity\",\r\n      max: 5,\r\n      min: 0,\r\n      value: 1,\r\n    },\r\n    metalness: { label: \"Metalness\", max: 1, min: 0, value: 0 },\r\n    refractionRatio: {\r\n      label: \"Refraction Ratio\",\r\n      max: 2,\r\n      min: 0,\r\n      value: 0.98,\r\n    },\r\n    roughness: { label: \"Roughness\", max: 1, min: 0, value: 1 },\r\n    wireframe: { label: \"Wireframe\", value: false },\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <mesh geometry={nodes.Suzanne.geometry}>\r\n        <meshStandardMaterial\r\n          color={color}\r\n          dithering={dithering}\r\n          emissive={emissive}\r\n          emissiveIntensity={emissiveIntensity}\r\n          metalness={metalness}\r\n          opacity={opacity}\r\n          refractionRatio={refractionRatio}\r\n          roughness={roughness}\r\n          transparent={transparent}\r\n          wireframe={wireframe}\r\n        />\r\n      </mesh>\r\n      <Plane\r\n        args={[2, 2]}\r\n        position={[0, 0, -1]}\r\n        rotation={[0, 0, 45].map((v) => MathUtils.degToRad(v))}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SuzanneStandardMaterial;\r\n","import { useGLTF } from \"@react-three/drei\";\r\n\r\nimport suzanneGlb from \"./suzanne.glb\";\r\n\r\nconst SuzanneToonMaterial = () => {\r\n  const { nodes } = useGLTF(suzanneGlb, true);\r\n\r\n  return (\r\n    <mesh geometry={nodes.Suzanne.geometry}>\r\n      <meshToonMaterial />\r\n    </mesh>\r\n  );\r\n};\r\n\r\nexport default SuzanneToonMaterial;\r\n","import { DoubleSide } from \"three\";\r\n\r\nconst SvgLoaderShape = ({ color, index, shape }) => {\r\n  // console.log(\"Shape\", color, index);\r\n  return (\r\n    <mesh position={[0, 0, -0.05 * index]}>\r\n      <shapeGeometry args={[shape]} />\r\n      <meshBasicMaterial color={color} side={DoubleSide} />\r\n    </mesh>\r\n  );\r\n};\r\n\r\nexport default SvgLoaderShape;\r\n","import { MathUtils } from \"three\";\r\nimport Shape from \"./Shape\";\r\n\r\nconst SvgLoaderGroup = ({ paths, position, scale }) => {\r\n  // console.log(\"Group\", paths, scale);\r\n  return (\r\n    <group\r\n      position={position}\r\n      rotation={[180, 0, 0].map((degrees) => MathUtils.degToRad(degrees))}\r\n      scale={scale}\r\n    >\r\n      {paths.map((path, index) => {\r\n        // console.log(\"Path\", index, path, path.color, path.toShapes());\r\n        const shapes = path.toShapes();\r\n        const pathIndex = index;\r\n        return shapes.map((shape, index) => {\r\n          return (\r\n            <Shape\r\n              color={path.color}\r\n              index={index + pathIndex}\r\n              key={index}\r\n              shape={shape}\r\n            />\r\n          );\r\n        });\r\n      })}\r\n    </group>\r\n  );\r\n};\r\n\r\nexport default SvgLoaderGroup;\r\n","import { useEffect, useState } from \"react\";\r\nimport { SVGLoader } from \"three-stdlib\";\r\nimport Group from \"./Group\";\r\n\r\nconst SvgLoader = (props) => {\r\n  const [paths, setPaths] = useState([]);\r\n  const position = props.position;\r\n  const scale = [props.scale, props.scale, props.scale];\r\n\r\n  useEffect(() => {\r\n    const svgResource = new Promise((resolve) =>\r\n      new SVGLoader().load(props.source, (data) => resolve(data.paths))\r\n    );\r\n    svgResource.then(setPaths);\r\n  }, [props]);\r\n\r\n  return <Group paths={paths} position={position} scale={scale} />;\r\n};\r\n\r\nexport default SvgLoader;\r\n","export default __webpack_public_path__ + \"static/media/TexturedCube.2b78eebc.glb\";","import { useGLTF } from \"@react-three/drei\";\r\n\r\nimport cubeGlb from \"./TexturedCube.glb\";\r\n\r\nconst Texture = () => {\r\n  const { nodes, materials } = useGLTF(cubeGlb, true);\r\n  return (\r\n    <>\r\n      <group position={[-1.5, 0, 0]}>\r\n        <mesh\r\n          geometry={nodes.Cube_1.geometry}\r\n          material={materials[\"MaterialTexture\"]}\r\n        />\r\n        <mesh geometry={nodes.Cube_2.geometry} material={materials[\"Blue\"]} />\r\n      </group>\r\n      {nodes.Cube.children.map((child, index) => {\r\n        return (\r\n          <mesh\r\n            key={index}\r\n            geometry={child.geometry}\r\n            material={child.material}\r\n            position={[1.5, 0, 0]}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Texture;\r\n","export default __webpack_public_path__ + \"static/media/BakedNormals.03580610.glb\";","import { MathUtils } from \"three\";\r\nimport { useGLTF } from \"@react-three/drei\";\r\n\r\nimport cubeGlb from \"./BakedNormals.glb\";\r\n\r\nconst TextureBakedNormals = () => {\r\n  const { nodes, materials } = useGLTF(cubeGlb, true);\r\n  return (\r\n    <mesh\r\n      geometry={nodes.Plane.geometry}\r\n      material={materials[\"Material\"]}\r\n      rotation={[90, 0, 0].map((degree) => MathUtils.degToRad(degree))}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TextureBakedNormals;\r\n","const Tripod = (props) => {\r\n  const length = 1;\r\n  const radius = (length / 100) * 2;\r\n  const segments = 32;\r\n  const thickness = length / 100;\r\n\r\n  return (\r\n    <group {...props}>\r\n      <mesh>\r\n        <boxGeometry args={[1, 1, 1].map((value) => value * 1.5 * thickness)} />\r\n        <meshMatcapMaterial color={0xffffff} />\r\n      </mesh>\r\n\r\n      {Array(3)\r\n        .fill()\r\n        .map((value, index) => {\r\n          return (\r\n            <group\r\n              key={index}\r\n              position={[0, 0, 0].map((v, i) =>\r\n                index === i ? length / 2 + thickness * 2 : v\r\n              )}\r\n            >\r\n              <mesh>\r\n                <boxGeometry\r\n                  args={[1, 1, 1].map(\r\n                    (v, i) => v * (index === i ? length : thickness)\r\n                  )}\r\n                />\r\n                <meshMatcapMaterial color={0xff0000 >> (8 * index)} />\r\n              </mesh>\r\n              <mesh\r\n                position={[0, 0, 0].map((v, i) =>\r\n                  index === i ? length / 2 + thickness * 3 : v\r\n                )}\r\n              >\r\n                <sphereGeometry args={[radius, segments, segments]} />\r\n                <meshMatcapMaterial color={0xffffff} />\r\n              </mesh>\r\n            </group>\r\n          );\r\n        })}\r\n    </group>\r\n  );\r\n};\r\n\r\nexport default Tripod;\r\n","import { useEffect, useRef } from \"react\";\r\nimport { DoubleSide, MathUtils } from \"three\";\r\nimport { useControls } from \"leva\";\r\nimport { useFrame } from \"@react-three/fiber\";\r\nimport { Box, Plane, PointerLockControls } from \"@react-three/drei\";\r\nimport { KeyboardControls } from \"App/utils\";\r\n\r\nconst BOX_SIZE = 1;\r\nconst MOVE_SPEED = {\r\n  FORWARD: 0.1,\r\n  RIGHT: 0.05,\r\n  UP: 0.5,\r\n};\r\n\r\nconst World = (props) => {\r\n  const { enablePointerLockControls } = useControls(\"Controls\", {\r\n    enablePointerLockControls: { label: \"PointerLock\", value: true },\r\n  });\r\n\r\n  const pointerRef = useRef();\r\n\r\n  useEffect(() => {\r\n    KeyboardControls.addEventListeners();\r\n\r\n    if (pointerRef.current) {\r\n      pointerRef.current.getObject().position.y = 1.75; // m\r\n    }\r\n\r\n    return KeyboardControls.removeEventListeners;\r\n  }, [enablePointerLockControls]);\r\n\r\n  useFrame(() => {\r\n    if (pointerRef.current) {\r\n      pointerRef.current.moveForward(\r\n        MOVE_SPEED.FORWARD * KeyboardControls.forwardDirection\r\n      );\r\n      pointerRef.current.moveRight(\r\n        MOVE_SPEED.RIGHT * KeyboardControls.rightDirection\r\n      );\r\n      pointerRef.current.getObject().position.y +=\r\n        MOVE_SPEED.UP * KeyboardControls.upDirection; // m\r\n    }\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {enablePointerLockControls && <PointerLockControls ref={pointerRef} />}\r\n      <Plane\r\n        args={[10, 10]}\r\n        rotation={[MathUtils.degToRad(-90), 0, 0]}\r\n        {...props}\r\n      >\r\n        <meshBasicMaterial color={0x666666} side={DoubleSide} />\r\n      </Plane>\r\n      <Box\r\n        args={[BOX_SIZE, BOX_SIZE, BOX_SIZE]}\r\n        position={[0, BOX_SIZE / 2, 0]}\r\n      >\r\n        <meshBasicMaterial color={0xff0000} opacity={0.75} transparent={true} />\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default World;\r\n","export default __webpack_public_path__ + \"static/media/bensound-badass.8ef4f40c.mp3\";","export default __webpack_public_path__ + \"static/media/bensound-evolution.4375aef0.mp3\";","import { useEffect, useRef } from \"react\";\r\nimport { AudioListener, AudioLoader, DoubleSide, MathUtils } from \"three\";\r\nimport { PositionalAudioHelper } from \"three-stdlib\";\r\nimport { useControls } from \"leva\";\r\nimport { extend, useFrame, useLoader } from \"@react-three/fiber\";\r\nimport {\r\n  Plane,\r\n  PointerLockControls,\r\n  PositionalAudio,\r\n  Text,\r\n  useHelper,\r\n} from \"@react-three/drei\";\r\nimport { KeyboardControls } from \"App/utils\";\r\n\r\nimport badassAudioFile from \"./audio/bensound-badass.mp3\";\r\nimport evolutionAudioFile from \"./audio/bensound-evolution.mp3\";\r\n\r\nextend({ PositionalAudioHelper });\r\n\r\nconst MOVE_SPEED = {\r\n  FORWARD: 0.1,\r\n  RIGHT: 0.05,\r\n  UP: 0.5,\r\n};\r\n\r\nconst WorldSound = (props) => {\r\n  const { enablePointerLockControls } = useControls(\"Controls\", {\r\n    enablePointerLockControls: { label: \"PointerLock\", value: true },\r\n  });\r\n\r\n  const pointerRef = useRef();\r\n  const audioRef = useRef();\r\n  const audioListener = new AudioListener();\r\n  const audioBuffer = useLoader(AudioLoader, evolutionAudioFile);\r\n\r\n  const positionalAudioRef = useRef();\r\n  useHelper(positionalAudioRef, PositionalAudioHelper);\r\n\r\n  useEffect(() => {\r\n    KeyboardControls.addEventListeners();\r\n\r\n    if (pointerRef.current) {\r\n      pointerRef.current.getObject().position.y = 1.75; // m\r\n    }\r\n\r\n    return KeyboardControls.removeEventListeners;\r\n  }, [enablePointerLockControls]);\r\n\r\n  useEffect(() => {\r\n    if (audioRef.current) {\r\n      audioRef.current.setBuffer(audioBuffer);\r\n      audioRef.current.setLoop(true);\r\n      audioRef.current.setVolume(0.01);\r\n      audioRef.current.play();\r\n    }\r\n  }, [audioBuffer]);\r\n\r\n  useFrame(() => {\r\n    if (pointerRef.current) {\r\n      pointerRef.current.moveForward(\r\n        MOVE_SPEED.FORWARD * KeyboardControls.forwardDirection\r\n      );\r\n      pointerRef.current.moveRight(\r\n        MOVE_SPEED.RIGHT * KeyboardControls.rightDirection\r\n      );\r\n      pointerRef.current.getObject().position.y +=\r\n        MOVE_SPEED.UP * KeyboardControls.upDirection; // m\r\n    }\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {enablePointerLockControls && <PointerLockControls ref={pointerRef} />}\r\n      <Plane\r\n        args={[10, 10]}\r\n        rotation={[MathUtils.degToRad(-90), 0, 0]}\r\n        {...props}\r\n      >\r\n        <meshBasicMaterial color={0x666666} side={DoubleSide} />\r\n      </Plane>\r\n      <audio args={[audioListener]} ref={audioRef} />\r\n      <mesh position={[0, 0, 0]}>\r\n        <Text position={[0, 1, 0]}>Music: https://www.bensound.com</Text>\r\n        <PositionalAudio\r\n          distance={0.1}\r\n          loop={true}\r\n          ref={positionalAudioRef}\r\n          url={badassAudioFile}\r\n        />\r\n      </mesh>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WorldSound;\r\n","import { useLocation } from \"wouter\";\r\nimport { Text } from \"@react-three/drei\";\r\n\r\nconst Wouter = () => {\r\n  const [, setLocation] = useLocation();\r\n\r\n  return (\r\n    <Text\r\n      color=\"hsl(120, 100%, 70%)\"\r\n      fontSize={1}\r\n      onClick={() => {\r\n        const route = \"/router\";\r\n        console.log(\"Route: \", route);\r\n        setLocation(route);\r\n      }}\r\n      text=\"Wouter\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default Wouter;\r\n","import { useLocation } from \"wouter\";\r\nimport { Text } from \"@react-three/drei\";\r\n\r\nconst WouterPathRouter = () => {\r\n  const [, setLocation] = useLocation();\r\n\r\n  return (\r\n    <Text\r\n      color=\"hsl(210, 100%, 70%)\"\r\n      fontSize={1}\r\n      onClick={() => {\r\n        const route = \"/wouter\";\r\n        console.log(\"Route: \", route);\r\n        setLocation(route);\r\n      }}\r\n      position={[0, 2, 0]}\r\n      text=\"Path Router\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default WouterPathRouter;\r\n","import { useLocation } from \"wouter\";\r\nimport { Text } from \"@react-three/drei\";\r\n\r\nconst WouterPathWouter = () => {\r\n  const [, setLocation] = useLocation();\r\n\r\n  return (\r\n    <Text\r\n      color=\"hsl(30, 100%, 70%)\"\r\n      fontSize={1}\r\n      onClick={() => {\r\n        const route = \"/router\";\r\n        console.log(\"Route: \", route);\r\n        setLocation(route);\r\n      }}\r\n      position={[0, -2, 0]}\r\n      text=\"Path Wouter\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default WouterPathWouter;\r\n","import { Suspense, useCallback, useEffect, useState } from \"react\";\r\nimport { Route, Router } from \"wouter\";\r\nimport { MathUtils } from \"three\";\r\nimport {\r\n  GizmoHelper,\r\n  GizmoViewport,\r\n  OrbitControls,\r\n  Stats,\r\n} from \"@react-three/drei\";\r\nimport { Bloom, EffectComposer } from \"@react-three/postprocessing\";\r\nimport { useControls } from \"leva\";\r\nimport {\r\n  Animation,\r\n  Button,\r\n  ButtonSpring,\r\n  ClockAnalogue,\r\n  ClockDigital,\r\n  Cube,\r\n  Face,\r\n  Gauge,\r\n  Image,\r\n  ImageSvg,\r\n  Lighting,\r\n  LightingGui,\r\n  LightingStudio,\r\n  LightingStudioGui,\r\n  LightingThreePoint,\r\n  LightingThreePointGui,\r\n  Logo,\r\n  LogoDouble,\r\n  LoremIpsum,\r\n  Normals,\r\n  Socket,\r\n  Spring,\r\n  Suzanne,\r\n  SuzanneMatcapTexture,\r\n  SuzanneNormalTexture,\r\n  SuzannePhysicalMaterial,\r\n  SuzanneStandardMaterial,\r\n  SuzanneToonMaterial,\r\n  Texture,\r\n  TextureBakedNormals,\r\n  Tripod,\r\n  World,\r\n  WorldSound,\r\n  Wouter,\r\n  WouterPathRouter,\r\n  WouterPathWouter,\r\n} from \"./components\";\r\n\r\nconst currentLocation = () => window.location.hash.replace(\"#\", \"\") || \"/\";\r\nconst useHashLocation = () => {\r\n  const [location, setLocation] = useState(currentLocation());\r\n\r\n  useEffect(() => {\r\n    const handler = () => setLocation(currentLocation());\r\n    window.addEventListener(\"hashchange\", handler);\r\n    return () => window.removeEventListener(\"hashchange\", handler);\r\n  }, []);\r\n\r\n  const navigate = useCallback((to) => (window.location.hash = to), []);\r\n  return [location, navigate];\r\n};\r\n\r\nconst Content = () => {\r\n  const components = [\r\n    \"None\",\r\n    \"Animation\",\r\n    \"Button\",\r\n    \"Button (React Spring)\",\r\n    \"Clock (analogue)\",\r\n    \"Clock (digital)\",\r\n    \"Cube (positioned)\",\r\n    \"Cube\",\r\n    \"Face\",\r\n    \"Gauge\",\r\n    \"Image\",\r\n    \"Image (SVG)\",\r\n    \"Logo\",\r\n    \"Logo (double)\",\r\n    \"Lorem Ipsum\",\r\n    \"Normals\",\r\n    \"Socket (Socket.IO 4.0)\",\r\n    \"Spring\",\r\n    \"Suzanne (default)\",\r\n    \"Suzanne (MatCap Texture)\",\r\n    \"Suzanne (Normal Texture)\",\r\n    \"Suzanne (Physical Material)\",\r\n    \"Suzanne (Standard Material)\",\r\n    \"Suzanne (Toon Material)\",\r\n    \"Texture\",\r\n    \"Texture (Baked Normals)\",\r\n    \"Tripod\",\r\n    \"World\",\r\n    \"World (Sound)\",\r\n    \"Wouter (router)\",\r\n  ];\r\n\r\n  const lightings = [\r\n    \"None\",\r\n    \"Demo\",\r\n    \"Demo + GUI\",\r\n    \"Studio Lighting\",\r\n    \"Studio Lighting + GUI\",\r\n    \"Three Point Lighting\",\r\n    \"Three Point Lighting + GUI\",\r\n  ];\r\n\r\n  const { enableOrbitControls } = useControls(\"Controls\", {\r\n    enableOrbitControls: { label: \"Orbit Controls\", value: true },\r\n  });\r\n  const { showEffects, showStats, useComponent, useLighting } = useControls(\r\n    \"General\",\r\n    {\r\n      showEffects: { label: \"Effects\", value: false },\r\n      showStats: { label: \"Stats\", value: false },\r\n      useComponent: {\r\n        label: \"Component\",\r\n        options: components,\r\n        value: \"Suzanne (default)\",\r\n      },\r\n      useLighting: {\r\n        label: \"Lighting\",\r\n        options: lightings,\r\n        value: \"Studio Lighting\",\r\n      },\r\n    }\r\n  );\r\n  const { showAxesHelper, showGizmoHelper, showGridHelper } = useControls(\r\n    \"Helpers\",\r\n    {\r\n      showAxesHelper: { label: \"Axes Helper\", value: false },\r\n      showGizmoHelper: { label: \"Gizmo Helper\", value: true },\r\n      showGridHelper: { label: \"Grid Helper\", value: false },\r\n    }\r\n  );\r\n\r\n  function showLighting(name) {\r\n    return useLighting === name;\r\n  }\r\n\r\n  function showComponent(name) {\r\n    return useComponent === name;\r\n  }\r\n\r\n  return (\r\n    <Router base={process.env.PUBLIC_URL} hook={useHashLocation}>\r\n      {enableOrbitControls && (\r\n        <OrbitControls enablePan={true} enableRotate={true} enableZoom={true} />\r\n      )}\r\n      {showAxesHelper && <axesHelper />}\r\n      {showGizmoHelper && (\r\n        <GizmoHelper alignment=\"bottom-right\" margin={[80, 80]}>\r\n          <GizmoViewport\r\n            axisColors={[\r\n              \"hsl(0, 100%, 50%)\",\r\n              \"hsl(120, 100%, 50%)\",\r\n              \"hsl(240, 100%, 50%)\",\r\n            ]}\r\n            labelColor=\"black\"\r\n          />\r\n        </GizmoHelper>\r\n      )}\r\n      {showGridHelper && <gridHelper args={[10, 10, 0xffffff, 0x333333]} />}\r\n      {showStats && <Stats />}\r\n      {showEffects && (\r\n        <EffectComposer>\r\n          <Bloom height={500} luminanceThreshold={0} luminanceSmoothing={0.9} />\r\n        </EffectComposer>\r\n      )}\r\n      {showLighting(\"Demo\") && <Lighting />}\r\n      {showLighting(\"Demo + GUI\") && <LightingGui />}\r\n      {showLighting(\"Studio Lighting\") && <LightingStudio />}\r\n      {showLighting(\"Studio Lighting + GUI\") && <LightingStudioGui />}\r\n      {showLighting(\"Three Point Lighting\") && <LightingThreePoint />}\r\n      {showLighting(\"Three Point Lighting + GUI\") && <LightingThreePointGui />}\r\n      {showComponent(\"Button\") && <Button />}\r\n      {showComponent(\"Button (React Spring)\") && <ButtonSpring />}\r\n      {showComponent(\"Clock (analogue)\") && <ClockAnalogue />}\r\n      {showComponent(\"Clock (digital)\") && <ClockDigital />}\r\n      {showComponent(\"Cube\") && <Cube />}\r\n      {showComponent(\"Cube (positioned)\") && (\r\n        <Cube\r\n          position={[1, 1, 1]}\r\n          rotation={[45, 45, 45].map((degrees) => MathUtils.degToRad(degrees))}\r\n        />\r\n      )}\r\n      {showComponent(\"Face\") && <Face />}\r\n      {showComponent(\"Gauge\") && <Gauge />}\r\n      {showComponent(\"Socket (Socket.IO 4.0)\") && <Socket />}\r\n      {true && (\r\n        <Suspense fallback={null}>\r\n          {showComponent(\"Animation\") && <Animation />}\r\n          {showComponent(\"Logo\") && <Logo />}\r\n          {showComponent(\"Logo (double)\") && <LogoDouble />}\r\n          {showComponent(\"Lorem Ipsum\") && <LoremIpsum />}\r\n          {showComponent(\"Normals\") && <Normals />}\r\n          {showComponent(\"Image\") && <Image />}\r\n          {showComponent(\"Image (SVG)\") && <ImageSvg />}\r\n          {showComponent(\"Spring\") && <Spring />}\r\n          {showComponent(\"Suzanne (default)\") && <Suzanne />}\r\n          {showComponent(\"Suzanne (MatCap Texture)\") && (\r\n            <SuzanneMatcapTexture />\r\n          )}\r\n          {showComponent(\"Suzanne (Normal Texture)\") && (\r\n            <SuzanneNormalTexture />\r\n          )}\r\n          {showComponent(\"Suzanne (Physical Material)\") && (\r\n            <SuzannePhysicalMaterial />\r\n          )}\r\n          {showComponent(\"Suzanne (Standard Material)\") && (\r\n            <SuzanneStandardMaterial />\r\n          )}\r\n          {showComponent(\"Suzanne (Toon Material)\") && <SuzanneToonMaterial />}\r\n          {showComponent(\"Texture\") && <Texture />}\r\n          {showComponent(\"Texture (Baked Normals)\") && <TextureBakedNormals />}\r\n          {showComponent(\"World (Sound)\") && <WorldSound />}\r\n        </Suspense>\r\n      )}\r\n      {showComponent(\"Tripod\") && <Tripod />}\r\n      {showComponent(\"World\") && <World />}\r\n      {showComponent(\"Wouter (router)\") && <Wouter />}\r\n      <Route component={WouterPathRouter} path=\"/router\" />\r\n      <Route component={WouterPathWouter} path=\"/wouter\" />\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default Content;\r\n","import { Canvas } from \"@react-three/fiber\";\r\nimport Content from \"./Content\";\r\n\r\nimport \"./index.css\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <Canvas linear={false} shadows={true}>\r\n      <Content />\r\n    </Canvas>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { StrictMode } from \"react\";\nimport { render } from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nrender(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}