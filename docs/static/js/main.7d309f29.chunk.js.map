{"version":3,"sources":["App/components/ReactRouter/ROUTES.js","App/components/Animation/assets/animation.glb","App/components/Animation/index.jsx","App/components/Button/Default.jsx","App/components/Button/Spring.jsx","App/components/Button/index.jsx","App/utils/KeyboardControls/index.js","App/utils/MathCircle/index.js","App/utils/ZeroFill/index.js","App/components/Clock/Analogue.jsx","App/components/Clock/Digital.jsx","App/components/Clock/index.jsx","App/components/Material/PhysicalFrostedGlass.jsx","App/components/Composition/Painting.jsx","App/components/Material/Basic.jsx","App/components/Material/Lambert.jsx","App/libs/FontFamily/index.js","App/libs/MatCap/index.js","App/components/Material/MatCap.jsx","App/components/Material/Normal.jsx","App/components/Material/Phong.jsx","App/components/Material/Physical.jsx","App/components/Material/Standard.jsx","App/components/Material/StandardNormalMap.jsx","App/components/Material/Toon.jsx","App/components/Material/index.jsx","App/components/Suzanne/assets/suzanne.glb","App/components/Suzanne/CustomMaterial.jsx","App/components/Composition/index.jsx","App/components/Cube/index.jsx","App/components/Effects/Bloom.jsx","App/components/Effects/BrightnessContrast.jsx","App/components/Effects/ColorAverage.jsx","App/components/Effects/ColorDepth.jsx","App/components/Effects/Glitch.jsx","App/components/Effects/Grid.jsx","App/components/Effects/HueSaturation.jsx","App/components/Effects/Scanline.jsx","App/components/Effects/index.jsx","App/components/Face/index.jsx","App/components/Gauge/index.jsx","App/components/Geometry2D/Circle.jsx","App/components/Geometry2D/Plane.jsx","App/components/Geometry2D/Ring.jsx","App/components/Geometry2D/index.jsx","App/components/Geometry3D/Box.jsx","App/components/Geometry3D/Cone.jsx","App/components/Geometry3D/Cylinder.jsx","App/components/Geometry3D/Tetrahedron.jsx","App/components/Geometry3D/Dodecahedron.jsx","App/components/Geometry3D/Icosahedron.jsx","App/components/Geometry3D/Octahedron.jsx","App/components/Geometry3D/Sphere.jsx","App/components/Geometry3D/Torus.jsx","App/components/Geometry3D/TorusKnot.jsx","App/components/Geometry3D/index.jsx","App/components/Helpers/index.jsx","App/components/Image/assets/UV_Grid_Sm.jpg","App/components/Image/Default.jsx","App/components/Image/assets/arteveldehogeschool_logo.svg","App/components/Image/assets/SVG_logo.svg","App/components/Image/Svg.jsx","App/components/Image/index.jsx","App/components/InputControls/index.jsx","App/components/Lighting/Demo.jsx","App/components/Lighting/Studio.jsx","App/components/Lighting/ThreePoint.jsx","App/components/Lighting/index.jsx","App/components/Logo/assets/gltf-logo.glb","App/components/Logo/Default.jsx","App/components/Logo/Double.jsx","App/components/Logo/index.jsx","App/components/LoremIpsum/Default.jsx","App/components/LoremIpsum/Fonts.jsx","App/components/LoremIpsum/index.jsx","App/components/Normals/assets/normals.glb","App/components/Normals/index.jsx","App/components/Particles/Default.jsx","App/components/Particles/assets/Arteveldehogeschool_favicon.png","App/components/Particles/Sprites.jsx","App/components/Particles/index.jsx","App/components/Planes/Text.jsx","App/components/Planes/Plane.jsx","App/components/Suzanne/Default.jsx","App/components/Planes/index.js","App/components/ReactRouter/index.jsx","App/components/ReactRouter/PathAlpha.jsx","App/components/ReactRouter/PathOmega.jsx","App/components/Socket/index.jsx","App/components/Spring/index.jsx","App/components/Suzanne/Rotating.jsx","App/components/Suzanne/index.jsx","App/components/SvgLoader/Shape.jsx","App/components/SvgLoader/Group.jsx","App/components/SvgLoader/index.jsx","App/components/Texture/assets/TexturedCube.glb","App/components/Texture/Default.jsx","App/components/Texture/assets/BakedNormals.glb","App/components/Texture/BakedNormals.jsx","App/components/Texture/index.jsx","App/components/Tripod/index.jsx","App/components/World/Default.jsx","App/components/World/audio/bensound-evolution.mp3","App/components/World/Sound.jsx","App/components/World/index.jsx","App/Content.jsx","App/index.jsx","reportWebVitals.js","index.jsx"],"names":["ROUTES","Object","freeze","All","Alpha","Omega","Root","Animation","useGLTF","animationGlb","animations","scene","animationRef","useRef","mixer","useMemo","AnimationMixer","useEffect","current","clipAction","play","useFrame","state","delta","update","object","ref","ButtonDefault","useState","color","setColor","hover","setHover","onClick","onDoubleClick","onPointerOut","onPointerOver","opacity","transparent","args","Text","fontSize","position","ButtonSpring","props","colorCurrent","setColorCurrent","toggle","setToggle","useSpring","rotation","MathUtils","degToRad","scale","group","mesh","meshBasicMaterial","BUTTON","Default","Spring","Button","useButton","useControls","label","options","value","enableButton","name","element","AZERTY","LEFT","UP","DIRECTION","QWERTY","KeyboardControls","this","event","console","log","code","info","window","addEventListener","keyDownHandler","keyUpHandler","removeEventListener","MathCircle","radius","degrees","angle","x","Math","cos","y","sin","ZeroFill","number","zeros","postfix","zeroFill","floor","toString","string","length","isHour","tick","CLOCK","HAND","HH","LENGTH","WIDTH","MM","SS","COLOR","THICKNESS","MARK","OFFSET","ClockAnalogue","clockRef","handHoursRef","handMinutesRef","handSecondsRef","angleStart","d","Date","z","getHours","getMinutes","getSeconds","map","Array","fill","index","getCoordinates","receiveShadow","side","DoubleSide","castShadow","radians","ClockDigital","text","toLocaleTimeString","Analogue","Digital","Clock","useClock","enableClock","MaterialPhysicalFrostedGlass","folder","roughness","max","min","step","thickness","transmission","CompositionPainting","texture","useTexture","aspectRatio","image","width","height","MaterialBasic","Materials","Material","hint","wireframe","MaterialLambert","FontFamily","ARCHITECTS_DAUGHTER","url","PRESS_START_2P","REDACTED_SCRIPT","ROBOTO","ROBOTO_SLAB","TANGERINE","MatCap","id","GREEN_CRYSTAL","SILVERY","TITANIUM","WORN_GOLD","size","XS","SM","MD","LG","XL","MaterialMatCap","useMatcapTexture","matcap","MaterialNormal","MaterialPhong","MaterialPhysical","dithering","emissive","emissiveIntensity","metalness","refractionRatio","clearcoat","clearcoatRoughness","ior","reflectivity","sheen","sheenColor","sheenRoughness","specularColor","specularIntensity","MaterialStandard","MaterialStandardNormalMap","Textures","normalAnisotropy","normalOffset","normalRepeat","normalScale","normalTextureId","useNormalTexture","anisotropy","offset","repeat","normalMap","Vector2","MaterialToon","MATERIAL","Basic","Lambert","Normal","Phong","Physical","PhysicalFrostedGlass","Standard","StandardNormalMap","Toon","enableMaterial","materialName","SuzanneMaterial","children","nodes","suzanneGlb","geometry","Suzanne","Composition","Painting","Cube","colors","random","meshMatcapMaterial","EffectsBloom","Effects","Bloom","blendFunction","BlendFunction","SCREEN","intensity","luminanceSmoothing","luminanceThreshold","Resizer","AUTO_SIZE","kernelSize","KernelSize","LARGE","EffectsHueSaturation","Glitch","NORMAL","brightness","contrast","EffectsColorAverage","ColorAverage","EffectsColorDepth","ColorDepth","bits","EffectsGlitch","active","delay","duration","mode","GlitchMode","SPORADIC","ratio","strength","EffectsGrid","Grid","OVERLAY","lineWidth","HueSaturation","hue","PI","saturation","EffectsScanline","Scanline","density","EFFECT","None","BrightnessContrast","enableEffect","Face","NEEDLE_STEP","Gauge","TICK_MARKS","angleStep","valueRange","valueStep","needleRef","needleAngle","needleValue","needleStep","forEach","tickMark","material","setColorName","Geometry2DCircle","Geometry","Arguments","segments","Θ","θStart","θLength","Geometry2DPlane","widthSegments","heightSegments","Geometry2DRing","innerRadius","outerRadius","θSegments","Φ","φSegments","GEOMETRY_2D","Circle","Plane","Ring","Geometry2D","enableGeometry","geometry2DName","Geometry3DBox","depth","depthSegments","depthSegment","Geometry3DCone","radialSegments","openEnded","Geometry3DCylinder","radiusBottom","radiusTop","Geometry3DTetrahedron","detail","Geometry3DDodecahedron","Geometry3DIcosahedron","Geometry3DOctahedron","Geometry3DSphere","sphereWidthSegments","φStart","φLength","sphereHeightSegments","Geometry3DTorus","Torus","tube","tubularSegments","arc","Geometry3DTorusKnot","p","q","GEOMETRY_3D","Box","Cone","Cylinder","Dodecahedron","Icosahedron","Octahedron","Sphere","Tetrahedron","TorusKnot","Geometry3D","geometry3DName","Helpers","enableAxesHelper","enableGizmoHelper","enableGridHelper","GizmoHelper","alignment","margin","GizmoViewport","axisColors","labelColor","ImageDefault","uvGrid","center","ImageSvg","source","logoNl","svgLogo","IMAGE","Svg","Image","useImage","enableImage","CONTROLS","Orbit","Trackball","InputControls","useInputControls","enableStats","enableInputControls","OrbitControls","enablePan","enableRotate","enableZoom","TrackballControls","LightingDemo","helpers","helperSize","ambientLight","directionalLight","hemisphereLight","groundColor","pointLight","spotLight","Spotlight","penumbra","target","useThree","Object3D","add","nullRef","directionalLightRef","hemisphereLightRef","pointLightRef","spotLightRef","useHelper","DirectionalLightHelper","PointLightHelper","SpotLightHelper","HemisphereLightHelper","translateX","translateZ","LightingStudio","frontLight","leftLight","rightLight","frontLightRef","leftLightRef","rightLightRef","LightingThreePoint","backLight","fillLight","keyLight","backLightRef","fillLightRef","keyLightRef","LIGHTING","Demo","Studio","ThreePoint","Lighting","enableLighting","ligthingName","LogoDefault","clockwise","setClockwise","gltfLogo","gltfLogoGlb","logoRef","LogoDouble","logo1Ref","logo2Ref","clone","LOGO","Double","useLogo","enableLogo","LoremIpsumDefault","matcapGreenCrystal","matcapSilvery","matcapWornGold","font","outlineColor","outlineWidth","keys","LoremIpsumFonts","start","LOREM_IPSUM","Fonts","LoremIpsum","useLoremIpsum","enableLoremIpsum","Normals","normals","normalsGlb","normalsRef","ParticlesDefault","complexity","ParticlesSprites","sprite","particleImage","PARTICLES","Sprites","Particles","useParticles","enableParticles","PlanesPlane","anchorX","en","FrontSide","nl","SuzanneDefault","materials","suzanneRef","enableVertexNormalsHelper","normalColor","VertexNormalsHelper","PLANE","FRONTAL","SAGITTAL","TRANSVERSE","Planes","key","ReactRouter","navigate","useNavigate","hoverSubTitle","setHoverSubTitle","hoverTitle","setHoverTitle","route","onChange","WouterPathRouter","ReactRouterPathOmega","Socket","distanceRef","speedRef","socket","Manager","on","connected","message","distance","speed","flexDirection","flexWrap","justifyContent","config","easing","easings","from","to","SuzanneRotating","Rotation","rotate","SUZANNE","CustomMaterial","Rotating","useSuzanne","enableSuzanne","degree","SvgLoaderShape","shape","SvgLoaderGroup","paths","path","shapes","toShapes","pathIndex","Shape","SvgLoader","setPaths","Promise","resolve","SVGLoader","load","data","then","Group","TextureDefault","cubeGlb","Cube_1","Cube_2","child","TextureBakedNormals","TEXTURE","BakedNormals","Texture","enableTexture","Tripod","v","i","MOVE_SPEED","WorldDefault","enablePointerLockControls","pointerRef","addEventListeners","getObject","removeEventListeners","moveForward","forwardDirection","moveRight","rightDirection","upDirection","PointerLockControls","BOX_SIZE","WorldSound","audioRef","audioListener","AudioListener","audioBuffer","useLoader","AudioLoader","evolutionAudioFile","setBuffer","setLoop","setVolume","WORLD","Sound","World","useWorld","enableWorld","COMPONENT","Cube_Positioned","Logo","Content","useComponent","enableComponent","Stats","fallback","App","flat","oneLineLabels","linear","shadows","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","render","document","getElementById"],"mappings":"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","file":"static/js/main.7d309f29.chunk.js","sourcesContent":["export const ROUTES = Object.freeze({\r\n  All: \"*\",\r\n  Alpha: \"/alpha\",\r\n  Omega: \"/omega\",\r\n  Root: \"/\",\r\n});\r\n","export default __webpack_public_path__ + \"static/media/animation.07175b80.glb\";","import { useEffect, useMemo, useRef } from \"react\";\r\nimport { AnimationMixer } from \"three\";\r\nimport { useFrame } from \"@react-three/fiber\";\r\nimport { useGLTF } from \"@react-three/drei\";\r\n\r\nimport animationGlb from \"./assets/animation.glb\";\r\n\r\nconst Animation = () => {\r\n  const { animations, scene } = useGLTF(animationGlb, true);\r\n  const animationRef = useRef();\r\n  const mixer = useMemo(() => new AnimationMixer(), []);\r\n\r\n  useEffect(() => {\r\n    if (animationRef.current) {\r\n      mixer.clipAction(animations[0], animationRef.current).play();\r\n    }\r\n  }, [animations, mixer]);\r\n\r\n  useFrame((state, delta) => {\r\n    mixer.update(delta);\r\n  });\r\n\r\n  return <primitive object={scene} ref={animationRef} />;\r\n};\r\n\r\nexport default Animation;\r\n","import { useState } from \"react\";\r\nimport { Text } from \"@react-three/drei\";\r\n\r\nconst ButtonDefault = () => {\r\n  const [color, setColor] = useState(0x00ff00);\r\n  const [hover, setHover] = useState(false);\r\n\r\n  return (\r\n    <group\r\n      onClick={() => setColor(0xff0000)}\r\n      onDoubleClick={() => setColor(0x0000ff)}\r\n      onPointerOut={() => setHover(false)}\r\n      onPointerOver={() => setHover(true)}\r\n    >\r\n      <mesh>\r\n        <meshBasicMaterial\r\n          color={color}\r\n          opacity={hover ? 0.75 : 1}\r\n          transparent={true}\r\n        />\r\n        <planeGeometry args={[1, 0.5]} />\r\n      </mesh>\r\n      <Text fontSize={0.2} position={[0, 0, 0.01]}>\r\n        Click Me!\r\n      </Text>\r\n    </group>\r\n  );\r\n};\r\n\r\nexport default ButtonDefault;\r\n","import { useState } from \"react\";\r\nimport { MathUtils } from \"three\";\r\nimport { Text } from \"@react-three/drei\";\r\nimport { animated, useSpring } from \"@react-spring/three\";\r\n\r\nconst ButtonSpring = (props) => {\r\n  const [colorCurrent, setColorCurrent] = useState(0xff0000);\r\n  const [hover, setHover] = useState(false);\r\n  const [toggle, setToggle] = useState(false);\r\n  const { opacity, rotation, scale } = useSpring({\r\n    opacity: toggle ? 0.5 : 0.2,\r\n    rotation: toggle ? [MathUtils.degToRad(-45), 0, 0] : [0, 0, 0],\r\n    scale: hover ? [1.5, 1.25, 1] : [1, 1, 1],\r\n  });\r\n\r\n  return (\r\n    <animated.group\r\n      {...props}\r\n      onClick={() => setToggle(!toggle)}\r\n      onDoubleClick={() => setColorCurrent(colorCurrent >> 8)}\r\n      onPointerOut={() => setHover(false)}\r\n      onPointerOver={() => setHover(true)}\r\n      rotation={rotation}\r\n    >\r\n      <animated.mesh scale={scale}>\r\n        <planeGeometry args={[1, 0.5]} />\r\n        <animated.meshBasicMaterial\r\n          color={0xff0000}\r\n          opacity={opacity}\r\n          transparent={true}\r\n        />\r\n      </animated.mesh>\r\n      <Text color=\"white\" fontSize={0.2} position={[0, 0, 0.01]}>\r\n        Click Me!\r\n      </Text>\r\n    </animated.group>\r\n  );\r\n};\r\n\r\nexport default ButtonSpring;\r\n","import { useControls } from \"leva\";\r\n\r\nimport Default from \"./Default\";\r\nimport Spring from \"./Spring\";\r\n\r\nconst BUTTON = Object.freeze({\r\n  Default: \"Default\",\r\n  Spring: \"Spring\",\r\n});\r\n\r\nconst Button = () => {\r\n  const { useButton } = useControls(\"Components\", {\r\n    useButton: {\r\n      label: \"Button\",\r\n      options: BUTTON,\r\n      value: BUTTON.Default,\r\n    },\r\n  });\r\n\r\n  function enableButton(name, element) {\r\n    return useButton === name ? element : null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {enableButton(BUTTON.Default, <Default />)}\r\n      {enableButton(BUTTON.Spring, <Spring />)}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","const AZERTY = {\r\n  LEFT: \"KeyQ\",\r\n  UP: \"KeyZ\",\r\n};\r\nconst DIRECTION = {\r\n  BACK: -1,\r\n  DOWN: -1,\r\n  FORWARD: 1,\r\n  LEFT: -1,\r\n  NONE: 0,\r\n  RIGHT: 1,\r\n  UP: 1,\r\n};\r\nconst QWERTY = {\r\n  LEFT: \"KeyA\",\r\n  UP: \"KeyW\",\r\n};\r\n\r\nclass KeyboardControls {\r\n  static #forwardDirection = DIRECTION.NONE;\r\n  static #keyboard = QWERTY;\r\n  static #rightDirection = DIRECTION.NONE;\r\n  static #upDirection = DIRECTION.NONE;\r\n\r\n  static get forwardDirection() {\r\n    return this.#forwardDirection;\r\n  }\r\n\r\n  static get rightDirection() {\r\n    return this.#rightDirection;\r\n  }\r\n\r\n  static get upDirection() {\r\n    return this.#upDirection;\r\n  }\r\n\r\n  static keyDownHandler(event) {\r\n    console.log(\"KeyboardControls: keyDownHandler\", `'${event.code}'`);\r\n    switch (event.code) {\r\n      case \"ArrowDown\":\r\n      case \"KeyS\":\r\n        KeyboardControls.#forwardDirection = DIRECTION.BACK;\r\n        break;\r\n      case \"ArrowLeft\":\r\n      case KeyboardControls.#keyboard.LEFT:\r\n        KeyboardControls.#rightDirection = DIRECTION.LEFT;\r\n        break;\r\n      case \"ArrowRight\":\r\n      case \"KeyD\":\r\n        KeyboardControls.#rightDirection = DIRECTION.RIGHT;\r\n        break;\r\n      case \"ArrowUp\":\r\n      case KeyboardControls.#keyboard.UP:\r\n        KeyboardControls.#forwardDirection = DIRECTION.FORWARD;\r\n        break;\r\n      case \"KeyF\":\r\n        KeyboardControls.#upDirection = DIRECTION.DOWN;\r\n        break;\r\n      case \"KeyR\":\r\n        KeyboardControls.#upDirection = DIRECTION.UP;\r\n        break;\r\n      default:\r\n    }\r\n  }\r\n\r\n  static keyUpHandler(event) {\r\n    console.log(\"KeyboardControls: keyUpHandler\", `'${event.code}'`);\r\n    switch (event.code) {\r\n      case \"ArrowDown\":\r\n      case \"ArrowUp\":\r\n      case \"KeyS\":\r\n      case KeyboardControls.#keyboard.UP:\r\n        KeyboardControls.#forwardDirection = DIRECTION.NONE;\r\n        break;\r\n      case \"ArrowLeft\":\r\n      case \"ArrowRight\":\r\n      case \"KeyD\":\r\n      case KeyboardControls.#keyboard.LEFT:\r\n        KeyboardControls.#rightDirection = DIRECTION.NONE;\r\n        break;\r\n      case \"KeyF\":\r\n      case \"KeyR\":\r\n        KeyboardControls.#upDirection = DIRECTION.NONE;\r\n        break;\r\n      default:\r\n    }\r\n  }\r\n\r\n  static addEventListeners() {\r\n    console.info(\"KeyboardControls: addEventListeners\");\r\n    window.addEventListener(\"keydown\", KeyboardControls.keyDownHandler);\r\n    window.addEventListener(\"keyup\", KeyboardControls.keyUpHandler);\r\n  }\r\n\r\n  static removeEventListeners() {\r\n    console.info(\"KeyboardControls: removeEventListeners\");\r\n    window.removeEventListener(\"keydown\", KeyboardControls.keyDownHandler);\r\n    window.removeEventListener(\"keyup\", KeyboardControls.keyUpHandler);\r\n  }\r\n\r\n  static setKeyboardAzerty() {\r\n    console.log(this.#keyboard);\r\n    this.#keyboard = AZERTY;\r\n    console.log(this.#keyboard);\r\n  }\r\n\r\n  static setKeyboardQwerty() {\r\n    this.#keyboard = QWERTY;\r\n  }\r\n}\r\n\r\nexport default KeyboardControls;\r\n","import { MathUtils } from \"three\";\r\n\r\nclass MathCircle {\r\n  #radius = 1;\r\n  #angle = 0;\r\n\r\n  constructor(radius = 1) {\r\n    this.#radius = radius;\r\n  }\r\n\r\n  get angle() {\r\n    return this.#angle;\r\n  }\r\n\r\n  set angle(degrees) {\r\n    this.#angle = MathUtils.degToRad(degrees);\r\n  }\r\n\r\n  getCoordinates(degrees) {\r\n    this.angle = degrees;\r\n    const x = Math.cos(this.angle) * this.#radius;\r\n    const y = Math.sin(this.angle) * this.#radius;\r\n\r\n    return { x, y };\r\n  }\r\n}\r\n\r\nexport default MathCircle;\r\n","class ZeroFill {\r\n  #number;\r\n  #postfix;\r\n  #zeros;\r\n\r\n  constructor(number = 0, zeros = 0, postfix = \"\") {\r\n    this.number = number;\r\n    this.#postfix = postfix;\r\n    this.#zeros = zeros;\r\n  }\r\n\r\n  get number() {\r\n    return this.zeroFill(this.#number);\r\n  }\r\n\r\n  set number(number) {\r\n    this.#number = Math.floor(number).toString();\r\n  }\r\n\r\n  toString() {\r\n    return this.number + this.#postfix;\r\n  }\r\n\r\n  zeroFill(string) {\r\n    while (string.length < this.#zeros) {\r\n      string = `0${string}`;\r\n    }\r\n    return string;\r\n  }\r\n}\r\n\r\nexport default ZeroFill;\r\n","import { useRef } from \"react\";\r\nimport { DoubleSide, MathUtils } from \"three\";\r\nimport { useFrame } from \"@react-three/fiber\";\r\nimport { Text } from \"@react-three/drei\";\r\nimport { MathCircle } from \"App/utils\";\r\n\r\nfunction isHour(tick) {\r\n  return !(tick % 5);\r\n}\r\n\r\nconst HH = 12;\r\nconst MM = 60;\r\nconst SS = 60;\r\n\r\nconst CLOCK_SIZE = 2;\r\n\r\nconst CLOCK = Object.freeze({\r\n  HAND: {\r\n    HH: {\r\n      LENGTH: 0.6 * CLOCK_SIZE,\r\n      WIDTH: 0.02 * CLOCK_SIZE,\r\n    },\r\n    MM: { LENGTH: 0.7 * CLOCK_SIZE },\r\n    SS: { COLOR: 0xffcc66, LENGTH: 0.8 * CLOCK_SIZE },\r\n    THICKNESS: 0.02 * CLOCK_SIZE,\r\n  },\r\n  MARK: {\r\n    HH: {\r\n      COLOR: 0xff0000,\r\n      LENGTH: 0.1 * CLOCK_SIZE,\r\n      WIDTH: 0.02 * CLOCK_SIZE,\r\n    },\r\n    MM: {\r\n      COLOR: 0xffffff,\r\n      LENGTH: 0.08 * CLOCK_SIZE,\r\n      WIDTH: 0.01 * CLOCK_SIZE,\r\n    },\r\n    OFFSET: 0.05 * CLOCK_SIZE,\r\n  },\r\n});\r\n\r\n/**\r\n * Clock using standard React Three Fiber JSX\r\n */\r\nconst ClockAnalogue = (props) => {\r\n  const clockRef = useRef();\r\n  const handHoursRef = useRef();\r\n  const handMinutesRef = useRef();\r\n  const handSecondsRef = useRef();\r\n\r\n  const angleStart = MathUtils.degToRad(90);\r\n\r\n  useFrame(() => {\r\n    const d = new Date();\r\n    if (handHoursRef.current) {\r\n      handHoursRef.current.rotation.z = MathUtils.degToRad(\r\n        (d.getHours() + d.getMinutes() / MM) * -(360 / HH)\r\n      );\r\n    }\r\n    if (handMinutesRef.current) {\r\n      handMinutesRef.current.rotation.z = MathUtils.degToRad(\r\n        d.getMinutes() * -(360 / MM)\r\n      );\r\n    }\r\n    if (handSecondsRef.current) {\r\n      handSecondsRef.current.rotation.z = MathUtils.degToRad(\r\n        d.getSeconds() * -(360 / SS)\r\n      );\r\n    }\r\n  });\r\n\r\n  return (\r\n    <group ref={clockRef} {...props}>\r\n      <group>\r\n        <Text\r\n          color=\"black\"\r\n          fontSize={0.1 * CLOCK_SIZE}\r\n          position={[0, -0.25, 0.01].map((value) => value * CLOCK_SIZE)}\r\n        >\r\n          Arteveldehogeschool\r\n        </Text>\r\n        {Array(HH)\r\n          .fill(null)\r\n          .map((value, index) => {\r\n            const c = new MathCircle(CLOCK.MARK.HH.LENGTH * 7.5);\r\n            const angle = (index * 360) / HH + 90;\r\n            const { x, y } = c.getCoordinates(angle);\r\n            return (\r\n              <Text\r\n                color={CLOCK.HAND.SS.COLOR}\r\n                fontSize={0.1 * CLOCK_SIZE}\r\n                key={index}\r\n                position={[x, y, 0.01]}\r\n                scale={Array(3).fill(1)}\r\n              >\r\n                {(12 - index).toString()}\r\n              </Text>\r\n            );\r\n          })}\r\n      </group>\r\n      <group rotation={[0, 0, angleStart]}>\r\n        <mesh receiveShadow={true}>\r\n          <circleGeometry args={[CLOCK_SIZE, MM]} />\r\n          <meshStandardMaterial\r\n            opacity={0.25}\r\n            side={DoubleSide}\r\n            transparent={true}\r\n          />\r\n        </mesh>\r\n        <group position={[0, 0, CLOCK.HAND.THICKNESS / 2]}>\r\n          <group position={[0, 0, CLOCK.HAND.THICKNESS / 2]} ref={handHoursRef}>\r\n            <mesh castShadow={true} position={[CLOCK.HAND.HH.LENGTH / 2, 0, 0]}>\r\n              <boxGeometry\r\n                args={[\r\n                  CLOCK.HAND.HH.LENGTH,\r\n                  0.06 * CLOCK_SIZE,\r\n                  CLOCK.HAND.THICKNESS,\r\n                ]}\r\n              />\r\n              <meshStandardMaterial />\r\n            </mesh>\r\n          </group>\r\n          <group\r\n            position={[0, 0, CLOCK.HAND.THICKNESS * 2]}\r\n            ref={handMinutesRef}\r\n          >\r\n            <mesh castShadow={true} position={[CLOCK.HAND.MM.LENGTH / 2, 0, 0]}>\r\n              <boxGeometry\r\n                args={[CLOCK.HAND.MM.LENGTH, 0.04, CLOCK.HAND.THICKNESS]}\r\n              />\r\n              <meshStandardMaterial />\r\n            </mesh>\r\n          </group>\r\n          <group\r\n            position={[\r\n              0,\r\n              0,\r\n              CLOCK.HAND.THICKNESS * 3 + CLOCK.HAND.THICKNESS / 2,\r\n            ]}\r\n            ref={handSecondsRef}\r\n          >\r\n            <mesh castShadow={true} position={[CLOCK.HAND.SS.LENGTH / 2, 0, 0]}>\r\n              <boxGeometry\r\n                args={[CLOCK.HAND.SS.LENGTH, 0.02, CLOCK.HAND.THICKNESS]}\r\n              />\r\n              <meshStandardMaterial color={CLOCK.HAND.SS.COLOR} />\r\n            </mesh>\r\n          </group>\r\n        </group>\r\n        {Array(MM)\r\n          .fill(null)\r\n          .map((value, index) => {\r\n            const radians = MathUtils.degToRad((360 / MM) * index);\r\n            return (\r\n              <group\r\n                key={index}\r\n                rotation={[0, 0, radians]}\r\n                position={[0, 0, 0.005]}\r\n              >\r\n                <mesh\r\n                  position={[\r\n                    CLOCK_SIZE -\r\n                      CLOCK.MARK.OFFSET -\r\n                      (isHour(index)\r\n                        ? CLOCK.MARK.HH.LENGTH - 0.01\r\n                        : CLOCK.MARK.HH.LENGTH) /\r\n                        2,\r\n                    0,\r\n                    0,\r\n                  ]}\r\n                >\r\n                  <boxGeometry\r\n                    args={[\r\n                      isHour(index)\r\n                        ? CLOCK.MARK.HH.LENGTH\r\n                        : CLOCK.MARK.MM.LENGTH,\r\n                      isHour(index) ? CLOCK.MARK.HH.WIDTH : CLOCK.MARK.MM.WIDTH,\r\n                      0.01,\r\n                    ]}\r\n                  />\r\n                  <meshStandardMaterial\r\n                    color={\r\n                      index === 0\r\n                        ? 0x0000ff\r\n                        : isHour(index)\r\n                        ? CLOCK.MARK.HH.COLOR\r\n                        : CLOCK.MARK.MM.COLOR\r\n                    }\r\n                  />\r\n                </mesh>\r\n              </group>\r\n            );\r\n          })}\r\n        <mesh\r\n          castShadow={true}\r\n          position={[0, 0, 0.05]}\r\n          rotation={[-90, 0, 0].map((degrees) => MathUtils.degToRad(degrees))}\r\n        >\r\n          <cylinderGeometry args={[0.1, 0.05, CLOCK.HAND.THICKNESS * 7, 36]} />\r\n          <meshStandardMaterial />\r\n        </mesh>\r\n      </group>\r\n    </group>\r\n  );\r\n};\r\n\r\nexport default ClockAnalogue;\r\n","import { useEffect, useRef } from \"react\";\r\nimport { MathUtils } from \"three\";\r\nimport { useFrame } from \"@react-three/fiber\";\r\nimport { Text } from \"@react-three/drei\";\r\n\r\nconst ClockDigital = (props) => {\r\n  const clockRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (clockRef.current) {\r\n      clockRef.current.rotation.x = MathUtils.degToRad(-30);\r\n    }\r\n  }, []);\r\n\r\n  useFrame(() => {\r\n    if (clockRef.current) {\r\n      clockRef.current.text = new Date().toLocaleTimeString();\r\n    }\r\n  });\r\n\r\n  return <Text fontSize={2} ref={clockRef} {...props} />;\r\n};\r\n\r\nexport default ClockDigital;\r\n","import { useControls } from \"leva\";\r\n\r\nimport Analogue from \"./Analogue\";\r\nimport Digital from \"./Digital\";\r\n\r\nconst CLOCK = Object.freeze({\r\n  Analogue: \"Analogue\",\r\n  Digital: \"Digital\",\r\n});\r\n\r\nconst Clock = () => {\r\n  const { useClock } = useControls(\"Components\", {\r\n    useClock: {\r\n      label: \"Clock\",\r\n      options: CLOCK,\r\n      value: CLOCK.Analogue,\r\n    },\r\n  });\r\n\r\n  function enableClock(name, element) {\r\n    return useClock === name ? element : null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {enableClock(CLOCK.Analogue, <Analogue />)}\r\n      {enableClock(CLOCK.Digital, <Digital />)}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Clock;\r\n","import { folder, useControls } from \"leva\";\r\n\r\nconst MaterialPhysicalFrostedGlass = () => {\r\n  const { roughness, thickness, transmission } = useControls(\"Components\", {\r\n    \"Physical Material\": folder({\r\n      roughness: {\r\n        label: \"Roughness\",\r\n        max: 1,\r\n        min: 0,\r\n        step: 0.01,\r\n        value: 0.5,\r\n      },\r\n      thickness: {\r\n        label: \"Thickness\",\r\n        max: 1,\r\n        min: 0,\r\n        step: 0.01,\r\n        value: 0.7,\r\n      },\r\n      transmission: {\r\n        label: \"Transmission\",\r\n        max: 1,\r\n        min: 0,\r\n        step: 0.01,\r\n        value: 1,\r\n      },\r\n    }),\r\n  });\r\n\r\n  return (\r\n    <meshPhysicalMaterial\r\n      roughness={roughness}\r\n      thickness={thickness}\r\n      transmission={transmission}\r\n    />\r\n  );\r\n};\r\n\r\nexport default MaterialPhysicalFrostedGlass;\r\n","import { Plane, Text, useTexture } from \"@react-three/drei\";\r\n\r\nconst CompositionPainting = () => {\r\n  const texture = useTexture(\r\n    \"https://upload.wikimedia.org/wikipedia/commons/1/11/Vassily_Kandinsky%2C_1925_-In_Blue.jpg\"\r\n  );\r\n  const aspectRatio = texture.image.width / texture.image.height;\r\n  const size = 4;\r\n\r\n  return (\r\n    <group position={[0, 0, -2]}>\r\n      <Plane args={[size * aspectRatio, size]}>\r\n        <meshBasicMaterial map={texture} />\r\n      </Plane>\r\n      <Text position={[0, -(size / 2 + 0.1), 0]}>\r\n        Vassily Kandinsky (1925) &mdash; In Blue\r\n      </Text>\r\n    </group>\r\n  );\r\n};\r\n\r\nexport default CompositionPainting;\r\n","import { folder, useControls } from \"leva\";\r\n\r\nconst MaterialBasic = () => {\r\n  const { color, opacity, transparent, wireframe } = useControls(\"Components\", {\r\n    Materials: folder({\r\n      Material: folder({\r\n        opacity: {\r\n          label: \"Opacity\",\r\n          hint: \"`transparent` must be `true`\",\r\n          max: 1,\r\n          min: 0,\r\n          value: 1,\r\n        },\r\n        transparent: { label: \"Transparent\", value: true },\r\n      }),\r\n      \"Basic Material\": folder({\r\n        color: { label: \"Color\", value: \"#ffffff\" },\r\n        wireframe: { label: \"Wireframe\", value: false },\r\n      }),\r\n    }),\r\n  });\r\n\r\n  return (\r\n    <meshBasicMaterial\r\n      color={color}\r\n      opacity={opacity}\r\n      transparent={transparent}\r\n      wireframe={wireframe}\r\n    />\r\n  );\r\n};\r\n\r\nexport default MaterialBasic;\r\n","import { folder, useControls } from \"leva\";\r\n\r\nconst MaterialLambert = () => {\r\n  const { color, opacity, transparent, wireframe } = useControls(\"Components\", {\r\n    Materials: folder({\r\n      Material: folder({\r\n        opacity: {\r\n          label: \"Opacity\",\r\n          hint: \"`transparent` must be `true`\",\r\n          max: 1,\r\n          min: 0,\r\n          value: 1,\r\n        },\r\n        transparent: { label: \"Transparent\", value: true },\r\n      }),\r\n      \"Lambert Material\": folder({\r\n        color: { label: \"Color\", value: \"#ffffff\" },\r\n        wireframe: { label: \"Wireframe\", value: false },\r\n      }),\r\n    }),\r\n  });\r\n\r\n  return (\r\n    <meshLambertMaterial\r\n      color={color}\r\n      opacity={opacity}\r\n      transparent={transparent}\r\n      wireframe={wireframe}\r\n    />\r\n  );\r\n};\r\n\r\nexport default MaterialLambert;\r\n","/**\r\n * Only WOFF accepted, not WOFF2!\r\n *\r\n * https://fonts.google.com/\r\n * Make a request with header `User-Agent`: `Mozilla/5.0 (MSIE 11.0)` and turn off automatic URL encoding.\r\n */\r\nconst FontFamily = Object.freeze({\r\n  ARCHITECTS_DAUGHTER: {\r\n    name: \"Architects Daughter\",\r\n    url: \"https://fonts.gstatic.com/s/architectsdaughter/v11/KtkxAKiDZI_td1Lkx62xHZHDtgO_Y-bvfY0.woff\",\r\n  },\r\n  PRESS_START_2P: {\r\n    name: \"Press Start 2P\",\r\n    url: \"https://fonts.gstatic.com/s/pressstart2p/v9/e3t4euO8T-267oIAQAu6jDQyK0nR.woff\",\r\n  },\r\n  REDACTED_SCRIPT: {\r\n    name: \"Redacted Script\",\r\n    url: \"https://fonts.gstatic.com/s/redactedscript/v1/ypvBbXGRglhokR7dcC3d1-R6zmxitm72.woff\",\r\n  },\r\n  ROBOTO: {\r\n    name: \"Roboto\",\r\n    url: \"https://fonts.gstatic.com/s/roboto/v29/KFOmCnqEu92Fr1Mu4mxM.woff\",\r\n  },\r\n  ROBOTO_SLAB: {\r\n    name: \"Roboto Slab\",\r\n    url: \"https://fonts.gstatic.com/s/robotoslab/v12/BngbUXZYTXPIvIBgJJSb6s3BzlRRfKOFbvjovoSWaw.woff\",\r\n  },\r\n  TANGERINE: {\r\n    name: \"Tangerine\",\r\n    url: \"https://fonts.gstatic.com/s/tangerine/v12/IurY6Y5j_oScZZow4VOBDQ.woff\",\r\n  },\r\n});\r\n\r\nexport default FontFamily;\r\n","/**\r\n * https://pixologic.com/zbrush/downloadcenter/library/\r\n * https://www.badking.com.au/site/product-category/materials/\r\n * https://www.zbrushcentral.com/t/matcap-repository/205029\r\n */\r\nconst MatCap = Object.freeze({\r\n  // Index or ID string, see: https://github.com/emmelleppi/matcaps/\r\n  id: {\r\n    GREEN_CRYSTAL: \"2E763A_78A0B7_B3D1CF_14F209\", // https://github.com/emmelleppi/matcaps/blob/master/PAGE-3.md#2e763a_78a0b7_b3d1cf_14f209 https://pixologic.com/zbrush/downloadcenter/img/matcaps/images/erklaerbar/ok_green_crystal.jpg\r\n    SILVERY: \"4C4C4C_D2D2D2_8F8F8F_ACACAC\", // https://github.com/emmelleppi/matcaps/blob/master/PAGE-8.md#4c4c4c_d2d2d2_8f8f8f_acacac https://pixologic.com/zbrush/downloadcenter/img/matcaps/images/slosh/bgs_silvery.jpg\r\n    TITANIUM: \"C7C7D7_4C4E5A_818393_6C6C74\", // https://github.com/emmelleppi/matcaps/blob/master/PAGE-28.md#c7c7d7_4c4e5a_818393_6c6c74 https://pixologic.com/zbrush/downloadcenter/img/matcaps/images/arranlewis/al_titanium.jpg\r\n    WORN_GOLD: \"6E5137_E8CA90_271912_B99C74\", // https://github.com/emmelleppi/matcaps/blob/master/PAGE-15.md#6e5137_e8ca90_271912_b99c74 https://pixologic.com/zbrush/downloadcenter/img/matcaps/thumbs/sathe/gw_worn_gold.jpg\r\n  },\r\n\r\n  // Texture size\r\n  size: {\r\n    XS: 64,\r\n    SM: 128,\r\n    MD: 256,\r\n    LG: 512,\r\n    XL: 1024,\r\n  },\r\n});\r\n\r\nexport default MatCap;\r\n","import { useMatcapTexture } from \"@react-three/drei\";\r\nimport { MatCap } from \"App/libs\";\r\n\r\nconst MaterialMatCap = () => {\r\n  const [matcap] = useMatcapTexture(MatCap.id.WORN_GOLD, MatCap.size.XL);\r\n\r\n  return <meshMatcapMaterial matcap={matcap} />;\r\n};\r\n\r\nexport default MaterialMatCap;\r\n","import { folder, useControls } from \"leva\";\r\n\r\nconst MaterialNormal = () => {\r\n  const { opacity, transparent, wireframe } = useControls(\"Components\", {\r\n    Materials: folder({\r\n      Material: folder({\r\n        opacity: {\r\n          label: \"Opacity\",\r\n          hint: \"`transparent` must be `true`\",\r\n          max: 1,\r\n          min: 0,\r\n          value: 1,\r\n        },\r\n        transparent: { label: \"Transparent\", value: true },\r\n      }),\r\n      \"Normal Material\": folder({\r\n        wireframe: { label: \"Wireframe\", value: false },\r\n      }),\r\n    }),\r\n  });\r\n\r\n  return (\r\n    <meshNormalMaterial\r\n      opacity={opacity}\r\n      transparent={transparent}\r\n      wireframe={wireframe}\r\n    />\r\n  );\r\n};\r\n\r\nexport default MaterialNormal;\r\n","import { folder, useControls } from \"leva\";\r\n\r\nconst MaterialPhong = () => {\r\n  const { color, opacity, transparent, wireframe } = useControls(\"Components\", {\r\n    Materials: folder({\r\n      Material: folder({\r\n        opacity: {\r\n          label: \"Opacity\",\r\n          hint: \"`transparent` must be `true`\",\r\n          max: 1,\r\n          min: 0,\r\n          value: 1,\r\n        },\r\n        transparent: { label: \"Transparent\", value: true },\r\n      }),\r\n      \"Basic Material\": folder({\r\n        color: { label: \"Color\", value: \"#ffffff\" },\r\n        wireframe: { label: \"Wireframe\", value: false },\r\n      }),\r\n    }),\r\n  });\r\n\r\n  return (\r\n    <meshPhongMaterial\r\n      color={color}\r\n      opacity={opacity}\r\n      transparent={transparent}\r\n      wireframe={wireframe}\r\n    />\r\n  );\r\n};\r\n\r\nexport default MaterialPhong;\r\n","import { folder, useControls } from \"leva\";\r\n\r\nconst MaterialPhysical = () => {\r\n  const {\r\n    clearcoat,\r\n    clearcoatRoughness,\r\n    color,\r\n    dithering,\r\n    emissive,\r\n    emissiveIntensity,\r\n    ior,\r\n    metalness,\r\n    opacity,\r\n    refractionRatio,\r\n    roughness,\r\n    sheen,\r\n    sheenColor,\r\n    sheenRoughness,\r\n    specularColor,\r\n    specularIntensity,\r\n    thickness,\r\n    transmission,\r\n    transparent,\r\n    wireframe,\r\n  } = useControls(\"Components\", {\r\n    Materials: folder({\r\n      Material: folder({\r\n        dithering: { label: \"Dithering\", value: false },\r\n        opacity: {\r\n          label: \"Opacity\",\r\n          hint: \"`transparent` must be `true`\",\r\n          max: 1,\r\n          min: 0,\r\n          value: 1,\r\n        },\r\n        transparent: { label: \"Transparent\", value: true },\r\n      }),\r\n      \"Standard Material\": folder({\r\n        color: { label: \"Color\", value: \"#ffffff\" },\r\n        emissive: { label: \"Emissive\", value: \"#000000\" },\r\n        emissiveIntensity: {\r\n          label: \"Emissive Intensity\",\r\n          max: 5,\r\n          min: 0,\r\n          value: 1,\r\n        },\r\n        metalness: { label: \"Metalness\", max: 1, min: 0, value: 0 },\r\n        refractionRatio: {\r\n          label: \"Refraction Ratio\",\r\n          max: 2,\r\n          min: 0,\r\n          value: 0.98,\r\n        },\r\n        roughness: { label: \"Roughness\", max: 1, min: 0, value: 1 },\r\n        wireframe: { label: \"Wireframe\", value: false },\r\n      }),\r\n      \"Physical Material\": folder({\r\n        clearcoat: { label: \"Clearcoat\", max: 1, min: 0, value: 0 },\r\n        clearcoatRoughness: {\r\n          label: \"Clearcoat Roughness\",\r\n          max: 1,\r\n          min: 0,\r\n          value: 0,\r\n        },\r\n        ior: {\r\n          label: \"Index of Refraction\",\r\n          max: 2.333,\r\n          min: 1,\r\n          value: 1.5,\r\n        },\r\n        reflectivity: { label: \"Reflectivity\", max: 1, min: 0, value: 0.5 },\r\n        sheen: { label: \"Sheen\", max: 1, min: 0, value: 0 },\r\n        sheenColor: { label: \"Sheen Color\", value: \"#ffffff\" },\r\n        sheenRoughness: { label: \"Sheen Roughness\", max: 1, min: 0, value: 1 },\r\n        specularColor: { label: \"Specular Color\", value: \"#ffffff\" },\r\n        specularIntensity: {\r\n          label: \"Specular Intensity\",\r\n          max: 1,\r\n          min: 0,\r\n          value: 1,\r\n        },\r\n        thickness: { label: \"Thickness\", max: 10, min: 0, value: 0.01 },\r\n        transmission: { label: \"Transmission\", max: 1, min: 0, value: 0 },\r\n      }),\r\n    }),\r\n  });\r\n\r\n  return (\r\n    <meshPhysicalMaterial\r\n      clearcoat={clearcoat}\r\n      clearcoatRoughness={clearcoatRoughness}\r\n      color={color}\r\n      dithering={dithering}\r\n      emissive={emissive}\r\n      emissiveIntensity={emissiveIntensity}\r\n      ior={ior}\r\n      metalness={metalness}\r\n      opacity={opacity}\r\n      refractionRatio={refractionRatio}\r\n      roughness={roughness}\r\n      sheen={sheen}\r\n      sheenColor={sheenColor}\r\n      sheenRoughness={sheenRoughness}\r\n      specularColor={specularColor}\r\n      specularIntensity={specularIntensity}\r\n      thickness={thickness}\r\n      transmission={transmission}\r\n      transparent={transparent}\r\n      wireframe={wireframe}\r\n    />\r\n  );\r\n};\r\n\r\nexport default MaterialPhysical;\r\n","import { folder, useControls } from \"leva\";\r\n\r\nconst MaterialStandard = () => {\r\n  const {\r\n    color,\r\n    dithering,\r\n    emissive,\r\n    emissiveIntensity,\r\n    metalness,\r\n    opacity,\r\n    refractionRatio,\r\n    roughness,\r\n    transparent,\r\n    wireframe,\r\n  } = useControls(\"Components\", {\r\n    Materials: folder({\r\n      Material: folder({\r\n        dithering: { label: \"Dithering\", value: false },\r\n        opacity: { label: \"Transparent\", max: 1, min: 0, value: 1 },\r\n        transparent: { label: \"Transparent\", value: true },\r\n      }),\r\n      \"Standard Material\": folder({\r\n        color: { label: \"Color\", value: \"#ffffff\" },\r\n        emissive: { label: \"Emissive\", value: \"#000000\" },\r\n        emissiveIntensity: {\r\n          label: \"Emissive Intensity\",\r\n          max: 5,\r\n          min: 0,\r\n          value: 1,\r\n        },\r\n        metalness: { label: \"Metalness\", max: 1, min: 0, value: 0 },\r\n        refractionRatio: {\r\n          label: \"Refraction Ratio\",\r\n          max: 2,\r\n          min: 0,\r\n          value: 0.98,\r\n        },\r\n        roughness: { label: \"Roughness\", max: 1, min: 0, value: 1 },\r\n        wireframe: { label: \"Wireframe\", value: false },\r\n      }),\r\n    }),\r\n  });\r\n\r\n  return (\r\n    <meshStandardMaterial\r\n      color={color}\r\n      dithering={dithering}\r\n      emissive={emissive}\r\n      emissiveIntensity={emissiveIntensity}\r\n      metalness={metalness}\r\n      opacity={opacity}\r\n      refractionRatio={refractionRatio}\r\n      roughness={roughness}\r\n      transparent={transparent}\r\n      wireframe={wireframe}\r\n    />\r\n  );\r\n};\r\n\r\nexport default MaterialStandard;\r\n","import { Vector2 } from \"three\";\r\nimport { useNormalTexture } from \"@react-three/drei\";\r\nimport { folder, useControls } from \"leva\";\r\n\r\nconst MaterialStandardNormalMap = () => {\r\n  const {\r\n    normalAnisotropy,\r\n    normalOffset,\r\n    normalRepeat,\r\n    normalScale,\r\n    normalTextureId,\r\n  } = useControls(\"Components\", {\r\n    Textures: folder({\r\n      \"Normal Map\": folder({\r\n        normalAnisotropy: { label: \"Anisotropy\", step: 1, value: 8 },\r\n        normalOffset: {\r\n          label: \"Offset\",\r\n          min: -1,\r\n          max: 1,\r\n          step: 0.01,\r\n          value: { x: 0, y: 0 },\r\n        },\r\n        normalRepeat: {\r\n          label: \"Repeat\",\r\n          min: -2,\r\n          max: 2,\r\n          step: 0.01,\r\n          value: { x: 1, y: 1 },\r\n        },\r\n        normalScale: { label: \"Scale\", value: 1 },\r\n        normalTextureId: {\r\n          label: \"Texture ID\", // https://github.com/emmelleppi/normal-maps/blob/master/normals.json\r\n          min: 0,\r\n          max: 75,\r\n          step: 1,\r\n          value: 8,\r\n        },\r\n      }),\r\n    }),\r\n  });\r\n  const [normalMap] = useNormalTexture(\r\n    normalTextureId, // Index or file name, see: https://github.com/emmelleppi/normal-maps/\r\n    {\r\n      anisotropy: normalAnisotropy,\r\n      offset: [normalOffset.x, normalOffset.y],\r\n      repeat: [normalRepeat.x, normalRepeat.y],\r\n    }\r\n  );\r\n\r\n  return (\r\n    <meshStandardMaterial\r\n      normalMap={normalMap}\r\n      normalScale={new Vector2(normalScale, normalScale)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default MaterialStandardNormalMap;\r\n","import { folder, useControls } from \"leva\";\r\n\r\nconst MaterialToon = () => {\r\n  const { color, opacity, transparent, wireframe } = useControls(\"Components\", {\r\n    Materials: folder({\r\n      Material: folder({\r\n        dithering: { label: \"Dithering\", value: false },\r\n        opacity: { label: \"Transparent\", max: 1, min: 0, value: 1 },\r\n        transparent: { label: \"Transparent\", value: true },\r\n      }),\r\n      \"Toon Material\": folder({\r\n        color: { label: \"Color\", value: \"#ffffff\" },\r\n        wireframe: { label: \"Wireframe\", value: false },\r\n      }),\r\n    }),\r\n  });\r\n\r\n  return (\r\n    <meshToonMaterial\r\n      color={color}\r\n      opacity={opacity}\r\n      transparent={transparent}\r\n      wireframe={wireframe}\r\n    />\r\n  );\r\n};\r\n\r\nexport default MaterialToon;\r\n","import { folder, useControls } from \"leva\";\r\n\r\nimport Basic from \"./Basic\";\r\nimport Lambert from \"./Lambert\";\r\nimport MatCap from \"./MatCap\";\r\nimport Normal from \"./Normal\";\r\nimport Phong from \"./Phong\";\r\nimport Physical from \"./Physical\";\r\nimport PhysicalFrostedGlass from \"./PhysicalFrostedGlass\";\r\nimport Standard from \"./Standard\";\r\nimport StandardNormalMap from \"./StandardNormalMap\";\r\nimport Toon from \"./Toon\";\r\n\r\nconst MATERIAL = Object.freeze({\r\n  Basic: \"Basic\",\r\n  Lambert: \"Lambert\",\r\n  MatCap: \"MatCap\",\r\n  Normal: \"Normal\",\r\n  Phong: \"Phong\",\r\n  Physical: \"Physical\",\r\n  PhysicalFrostedGlass: \"PhysicalFrostedGlass\",\r\n  Standard: \"Standard\",\r\n  StandardNormalMap: \"StandardNormalMap\",\r\n  Toon: \"Toon\",\r\n});\r\n\r\nfunction enableMaterial(name) {\r\n  let element;\r\n  switch (name) {\r\n    case MATERIAL.Basic:\r\n      element = <Basic />;\r\n      break;\r\n    case MATERIAL.Lambert:\r\n      element = <Lambert />;\r\n      break;\r\n    case MATERIAL.MatCap:\r\n      element = <MatCap />;\r\n      break;\r\n    case MATERIAL.Normal:\r\n      element = <Normal />;\r\n      break;\r\n    case MATERIAL.Phong:\r\n      element = <Phong />;\r\n      break;\r\n    case MATERIAL.Physical:\r\n      element = <Physical />;\r\n      break;\r\n    case MATERIAL.PhysicalFrostedGlass:\r\n      element = <PhysicalFrostedGlass />;\r\n      break;\r\n    case MATERIAL.StandardNormalMap:\r\n      element = <StandardNormalMap />;\r\n      break;\r\n    case MATERIAL.Toon:\r\n      element = <Toon />;\r\n      break;\r\n    default:\r\n      element = <Standard />;\r\n  }\r\n  return element;\r\n}\r\n\r\nconst Material = () => {\r\n  const { materialName } = useControls(\"Components\", {\r\n    Materials: folder({\r\n      materialName: {\r\n        label: \"Material\",\r\n        options: MATERIAL,\r\n        value: MATERIAL.Standard,\r\n      },\r\n    }),\r\n  });\r\n\r\n  return enableMaterial(materialName);\r\n};\r\n\r\nexport default Material;\r\n","export default __webpack_public_path__ + \"static/media/suzanne.f8d5e374.glb\";","import { useGLTF } from \"@react-three/drei\";\r\n\r\nimport Material from \"../Material\";\r\nimport suzanneGlb from \"./assets/suzanne.glb\";\r\n\r\nconst SuzanneMaterial = ({ children }) => {\r\n  const { nodes } = useGLTF(suzanneGlb, true);\r\n\r\n  return (\r\n    <mesh geometry={nodes.Suzanne.geometry}>{children ?? <Material />}</mesh>\r\n  );\r\n};\r\n\r\nexport default SuzanneMaterial;\r\n","import MaterialPhysicalFrostedGlass from \"../Material/PhysicalFrostedGlass\";\r\nimport Painting from \"./Painting\";\r\nimport Suzanne from \"../Suzanne/CustomMaterial\";\r\n\r\nconst Composition = () => {\r\n  return (\r\n    <>\r\n      <Suzanne>\r\n        <MaterialPhysicalFrostedGlass />\r\n      </Suzanne>\r\n      <Painting />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Composition;\r\n","import { useState } from \"react\";\r\nimport { animated, useSpring } from \"@react-spring/three\";\r\n\r\nconst Cube = (props) => {\r\n  const colors = [\"#f00\", \"#ff0\", \"#0f0\", \"#0ff\", \"#00f\", \"#f0f\"];\r\n  const color = colors[Math.floor(Math.random() * colors.length)];\r\n  const [toggle, setToggle] = useState(true);\r\n  const { opacity, position } = useSpring({\r\n    opacity: toggle ? 1 : 0.5,\r\n    position: toggle ? [0, 0, 0] : getPosition(),\r\n  });\r\n\r\n  function getPosition() {\r\n    return [4, 4, 0].map((value) => (Math.random() * 2 - 1) * value);\r\n  }\r\n\r\n  return (\r\n    <animated.mesh\r\n      {...props}\r\n      onClick={() => setToggle(!toggle)}\r\n      position={position}\r\n    >\r\n      <boxGeometry args={[1, 1, 1]} />\r\n      <animated.meshMatcapMaterial\r\n        color={color}\r\n        opacity={opacity}\r\n        transparent={true}\r\n      />\r\n    </animated.mesh>\r\n  );\r\n};\r\n\r\nexport default Cube;\r\n","import { Bloom, EffectComposer } from \"@react-three/postprocessing\";\r\nimport { BlendFunction, Resizer, KernelSize } from \"postprocessing\";\r\nimport { folder, useControls } from \"leva\";\r\n\r\nconst EffectsBloom = () => {\r\n  const { blendFunction, intensity, luminanceSmoothing, luminanceThreshold } =\r\n    useControls(\"General\", {\r\n      Effects: folder({\r\n        Bloom: folder({\r\n          blendFunction: {\r\n            label: \"Blend Function\",\r\n            options: BlendFunction,\r\n            value: BlendFunction.SCREEN,\r\n          },\r\n          intensity: {\r\n            label: \"Intensity\",\r\n            max: 10,\r\n            min: 0,\r\n            step: 0.1,\r\n            value: 1,\r\n          },\r\n          luminanceSmoothing: {\r\n            label: \"Luminance Smoothing\",\r\n            max: 1,\r\n            min: 0,\r\n            step: 0.005,\r\n            value: 0.025,\r\n          },\r\n          luminanceThreshold: {\r\n            label: \"Luminance Threshold\",\r\n            max: 1,\r\n            min: 0,\r\n            step: 0.05,\r\n            value: 0.9,\r\n          },\r\n        }),\r\n      }),\r\n    });\r\n\r\n  return (\r\n    <EffectComposer>\r\n      <Bloom\r\n        blendFunction={blendFunction}\r\n        height={Resizer.AUTO_SIZE}\r\n        intensity={intensity}\r\n        kernelSize={KernelSize.LARGE}\r\n        luminanceSmoothing={luminanceSmoothing}\r\n        luminanceThreshold={luminanceThreshold}\r\n        width={Resizer.AUTO_SIZE}\r\n      />\r\n    </EffectComposer>\r\n  );\r\n};\r\n\r\nexport default EffectsBloom;\r\n","import {\r\n  BrightnessContrast,\r\n  EffectComposer,\r\n} from \"@react-three/postprocessing\";\r\nimport { BlendFunction } from \"postprocessing\";\r\nimport { folder, useControls } from \"leva\";\r\n\r\nconst EffectsHueSaturation = () => {\r\n  const { blendFunction, brightness, contrast } = useControls(\"General\", {\r\n    Effects: folder({\r\n      Glitch: folder({\r\n        blendFunction: {\r\n          label: \"Blend Function\",\r\n          options: BlendFunction,\r\n          value: BlendFunction.NORMAL,\r\n        },\r\n        brightness: {\r\n          label: \"Brightness\",\r\n          max: 1,\r\n          min: -1,\r\n          step: 0.001,\r\n          value: 0,\r\n        },\r\n        contrast: {\r\n          label: \"Contrast\",\r\n          max: 1,\r\n          min: -1,\r\n          step: 0.001,\r\n          value: 0,\r\n        },\r\n      }),\r\n    }),\r\n  });\r\n\r\n  return (\r\n    <EffectComposer>\r\n      <BrightnessContrast\r\n        blendFunction={blendFunction}\r\n        brightness={brightness}\r\n        contrast={contrast}\r\n      />\r\n    </EffectComposer>\r\n  );\r\n};\r\n\r\nexport default EffectsHueSaturation;\r\n","import { ColorAverage, EffectComposer } from \"@react-three/postprocessing\";\r\nimport { BlendFunction } from \"postprocessing\";\r\nimport { folder, useControls } from \"leva\";\r\n\r\nconst EffectsColorAverage = () => {\r\n  const { blendFunction } = useControls(\"General\", {\r\n    Effects: folder({\r\n      ColorAverage: folder({\r\n        blendFunction: {\r\n          label: \"Blend Function\",\r\n          options: BlendFunction,\r\n          value: BlendFunction.NORMAL,\r\n        },\r\n      }),\r\n    }),\r\n  });\r\n\r\n  return (\r\n    <EffectComposer>\r\n      <ColorAverage blendFunction={blendFunction} />\r\n    </EffectComposer>\r\n  );\r\n};\r\n\r\nexport default EffectsColorAverage;\r\n","import { ColorDepth, EffectComposer } from \"@react-three/postprocessing\";\r\nimport { BlendFunction } from \"postprocessing\";\r\nimport { folder, useControls } from \"leva\";\r\n\r\nconst EffectsColorDepth = () => {\r\n  const { bits, blendFunction } = useControls(\"General\", {\r\n    Effects: folder({\r\n      ColorDepth: folder({\r\n        bits: {\r\n          label: \"Bits\",\r\n          max: 24,\r\n          min: 0,\r\n          step: 1,\r\n          value: 16,\r\n        },\r\n        blendFunction: {\r\n          label: \"Blend Function\",\r\n          options: BlendFunction,\r\n          value: BlendFunction.NORMAL,\r\n        },\r\n      }),\r\n    }),\r\n  });\r\n\r\n  return (\r\n    <EffectComposer>\r\n      <ColorDepth bits={bits} blendFunction={blendFunction} />\r\n    </EffectComposer>\r\n  );\r\n};\r\n\r\nexport default EffectsColorDepth;\r\n","import { EffectComposer, Glitch } from \"@react-three/postprocessing\";\r\nimport { GlitchMode } from \"postprocessing\";\r\nimport { folder, useControls } from \"leva\";\r\n\r\nconst EffectsGlitch = () => {\r\n  const { active, delay, duration, mode, ratio, strength } = useControls(\r\n    \"General\",\r\n    {\r\n      Effects: folder({\r\n        Glitch: folder({\r\n          active: {\r\n            label: \"Active\",\r\n            value: true,\r\n          },\r\n          delay: {\r\n            label: \"Delay\",\r\n            max: 5,\r\n            min: 0,\r\n            step: 0.1,\r\n            value: [1.5, 3.5],\r\n          },\r\n          duration: {\r\n            label: \"Duration\",\r\n            max: 5,\r\n            min: 0,\r\n            step: 0.1,\r\n            value: [0.6, 1.0],\r\n          },\r\n          mode: {\r\n            label: \"Glitch Mode\",\r\n            options: GlitchMode,\r\n            value: GlitchMode.SPORADIC,\r\n          },\r\n          ratio: {\r\n            label: \"Ratio\",\r\n            hint: \"Threshold for strong glitches, 0 - no weak glitches, 1 - no strong glitches.\",\r\n            max: 1,\r\n            min: 0,\r\n            step: 0.05,\r\n            value: 0.85,\r\n          },\r\n          strength: {\r\n            label: \"Strength\",\r\n            max: 5,\r\n            min: 0,\r\n            step: 0.1,\r\n            value: [0.3, 1.0],\r\n          },\r\n        }),\r\n      }),\r\n    }\r\n  );\r\n\r\n  return (\r\n    <EffectComposer>\r\n      <Glitch\r\n        active={active}\r\n        delay={delay}\r\n        duration={duration}\r\n        mode={mode}\r\n        ratio={ratio}\r\n        strength={strength}\r\n      />\r\n    </EffectComposer>\r\n  );\r\n};\r\n\r\nexport default EffectsGlitch;\r\n","import { EffectComposer, Grid } from \"@react-three/postprocessing\";\r\nimport { BlendFunction } from \"postprocessing\";\r\nimport { folder, useControls } from \"leva\";\r\n\r\nconst EffectsGrid = () => {\r\n  const { blendFunction, lineWidth, scale } = useControls(\"General\", {\r\n    Effects: folder({\r\n      Grid: folder({\r\n        blendFunction: {\r\n          label: \"Blend Function\",\r\n          options: BlendFunction,\r\n          value: BlendFunction.OVERLAY,\r\n        },\r\n        lineWidth: {\r\n          label: \"Line Width\",\r\n          max: 5,\r\n          min: 0,\r\n          step: 0.1,\r\n          value: 0,\r\n        },\r\n        scale: {\r\n          label: \"Scale\",\r\n          max: 5,\r\n          min: 0.5,\r\n          step: 0.05,\r\n          value: 1,\r\n        },\r\n      }),\r\n    }),\r\n  });\r\n\r\n  return (\r\n    <EffectComposer>\r\n      <Grid blendFunction={blendFunction} lineWidth={lineWidth} scale={scale} />\r\n    </EffectComposer>\r\n  );\r\n};\r\n\r\nexport default EffectsGrid;\r\n","import { EffectComposer, HueSaturation } from \"@react-three/postprocessing\";\r\nimport { BlendFunction } from \"postprocessing\";\r\nimport { folder, useControls } from \"leva\";\r\n\r\nconst EffectsHueSaturation = () => {\r\n  const { blendFunction, hue, saturation } = useControls(\"General\", {\r\n    Effects: folder({\r\n      HueSaturation: folder({\r\n        blendFunction: {\r\n          label: \"Blend Function\",\r\n          options: BlendFunction,\r\n          value: BlendFunction.NORMAL,\r\n        },\r\n        hue: {\r\n          label: \"Hue\",\r\n          hint: \"In radians.\",\r\n          max: Math.PI,\r\n          min: -Math.PI,\r\n          step: 0.001,\r\n          value: 0,\r\n        },\r\n        saturation: {\r\n          label: \"Saturation\",\r\n          max: 1,\r\n          min: -1,\r\n          step: 0.001,\r\n          value: 0,\r\n        },\r\n      }),\r\n    }),\r\n  });\r\n\r\n  return (\r\n    <EffectComposer>\r\n      <HueSaturation\r\n        blendFunction={blendFunction}\r\n        hue={hue}\r\n        saturation={saturation}\r\n      />\r\n    </EffectComposer>\r\n  );\r\n};\r\n\r\nexport default EffectsHueSaturation;\r\n","import { BlendFunction } from \"postprocessing\";\r\nimport { EffectComposer, Scanline } from \"@react-three/postprocessing\";\r\nimport { folder, useControls } from \"leva\";\r\n\r\nconst EffectsScanline = () => {\r\n  const { density, blendFunction } = useControls(\"General\", {\r\n    Effects: folder({\r\n      Scanline: folder({\r\n        density: { label: \"density\", min: 0, max: 10, step: 0.01, value: 1.25 },\r\n        blendFunction: {\r\n          label: \"Blend Mode\",\r\n          options: BlendFunction,\r\n          value: BlendFunction.OVERLAY,\r\n        },\r\n      }),\r\n    }),\r\n  });\r\n\r\n  return (\r\n    <EffectComposer>\r\n      <Scanline blendFunction={blendFunction} density={density} />\r\n    </EffectComposer>\r\n  );\r\n};\r\n\r\nexport default EffectsScanline;\r\n","import { folder, useControls } from \"leva\";\r\n\r\nimport Bloom from \"./Bloom\";\r\nimport BrightnessContrast from \"./BrightnessContrast\";\r\nimport ColorAverage from \"./ColorAverage\";\r\nimport ColorDepth from \"./ColorDepth\";\r\nimport Glitch from \"./Glitch\";\r\nimport Grid from \"./Grid\";\r\nimport HueSaturation from \"./HueSaturation\";\r\nimport Scanline from \"./Scanline\";\r\n\r\nconst EFFECT = Object.freeze({\r\n  None: \"None\",\r\n  Bloom: \"Bloom\",\r\n  BrightnessContrast: \"BrightnessContrast\",\r\n  ColorAverage: \"ColorAverage\",\r\n  ColorDepth: \"ColorDepth\",\r\n  Glitch: \"Glitch\",\r\n  Grid: \"Grid\",\r\n  HueSaturation: \"HueSaturation\",\r\n  Scanline: \"Scanline\",\r\n});\r\n\r\nconst Effects = () => {\r\n  const { useEffect } = useControls(\"General\", {\r\n    Effects: folder({\r\n      useEffect: {\r\n        label: \"Effect\",\r\n        options: EFFECT,\r\n        value: EFFECT.None,\r\n      },\r\n    }),\r\n  });\r\n\r\n  function enableEffect(name, element) {\r\n    return useEffect === name ? element : null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {enableEffect(EFFECT.Bloom, <Bloom />)}\r\n      {enableEffect(EFFECT.BrightnessContrast, <BrightnessContrast />)}\r\n      {enableEffect(EFFECT.ColorAverage, <ColorAverage />)}\r\n      {enableEffect(EFFECT.ColorDepth, <ColorDepth />)}\r\n      {enableEffect(EFFECT.Glitch, <Glitch />)}\r\n      {enableEffect(EFFECT.Grid, <Grid />)}\r\n      {enableEffect(EFFECT.HueSaturation, <HueSaturation />)}\r\n      {enableEffect(EFFECT.Scanline, <Scanline />)}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Effects;\r\n","import { MathUtils } from \"three\";\r\nimport { Plane } from \"@react-three/drei\";\r\n\r\nconst Face = (props) => {\r\n  return (\r\n    <Plane\r\n      args={[10, 10]}\r\n      rotation={[MathUtils.degToRad(-90), 0, 0]}\r\n      {...props}\r\n    >\r\n      <meshStandardMaterial />\r\n    </Plane>\r\n  );\r\n};\r\n\r\nexport default Face;\r\n","// @todo Rotate gauge based on range, in stead of compensating rotation in calculation.\r\nimport { useRef } from \"react\";\r\nimport { MathUtils } from \"three\";\r\nimport { useFrame } from \"@react-three/fiber\";\r\nimport { Box, Circle, Cone, Cylinder } from \"@react-three/drei\";\r\n\r\nconst ANGLE_RANGE = 270;\r\nconst NEEDLE_STEP = {\r\n  DOWN: -250,\r\n  UP: 60,\r\n};\r\n\r\nconst Gauge = (props) => {\r\n  const TICK_MARKS = [\r\n    { color: \"green\", label: \"0\", ref: useRef(), value: 0 },\r\n    { color: \"white\", label: \"10\", ref: useRef(), value: 1000 },\r\n    { color: \"white\", label: \"20\", ref: useRef(), value: 2000 },\r\n    { color: \"white\", label: \"30\", ref: useRef(), value: 3000 },\r\n    { color: \"white\", label: \"40\", ref: useRef(), value: 4000 },\r\n    { color: \"white\", label: \"50\", ref: useRef(), value: 5000 },\r\n    { color: \"orange\", label: \"60\", ref: useRef(), value: 6000 },\r\n    { color: \"red\", label: \"70\", ref: useRef(), value: 7000 },\r\n    { color: \"red\", label: \"80\", ref: useRef(), value: 8000 },\r\n  ];\r\n  const angleStep = ANGLE_RANGE / (TICK_MARKS.length - 1);\r\n  const angleStart = MathUtils.degToRad(-(90 + (360 - ANGLE_RANGE) / 2));\r\n  const valueRange = (TICK_MARKS.length - 1) * 1000;\r\n  const valueStep = ANGLE_RANGE / valueRange;\r\n  const needleRef = useRef();\r\n  let needleAngle = 0;\r\n  let needleValue = 0;\r\n  let needleStep = NEEDLE_STEP.UP;\r\n\r\n  useFrame(() => {\r\n    if (needleValue <= 0) {\r\n      needleStep = NEEDLE_STEP.UP;\r\n    } else if (valueRange <= needleValue) {\r\n      needleStep = NEEDLE_STEP.DOWN;\r\n    }\r\n    needleValue += needleStep;\r\n    needleAngle = MathUtils.degToRad(-(valueStep * needleValue));\r\n    needleRef.current.rotation.z = needleAngle;\r\n\r\n    TICK_MARKS.forEach((tickMark) => {\r\n      tickMark.ref.current.children[0].material.color.setColorName(\r\n        tickMark.value <= needleValue ? \"blue\" : tickMark.color\r\n      );\r\n    });\r\n  });\r\n\r\n  return (\r\n    <group {...props} rotation={[0, 0, angleStart]}>\r\n      <Circle args={[1.2, 62]} position={[0, 0, 0]} receiveShadow={true}>\r\n        <meshStandardMaterial opacity={0.25} transparent={true} />\r\n      </Circle>\r\n      {TICK_MARKS.map((tickMark, index) => {\r\n        return (\r\n          <group\r\n            key={index}\r\n            ref={tickMark.ref}\r\n            rotation={[0, 0, -angleStep * index].map((degrees) =>\r\n              MathUtils.degToRad(degrees)\r\n            )}\r\n          >\r\n            <Box args={[0.25, 0.05, 0.02]} position={[1, 0, 0.01]}>\r\n              <meshStandardMaterial\r\n                color={tickMark.color}\r\n                metalness={0.1}\r\n                opacity={0.5}\r\n                roughness={0.6}\r\n                transparent={true}\r\n              />\r\n            </Box>\r\n          </group>\r\n        );\r\n      })}\r\n\r\n      <group position={[0, 0, 0.05]}>\r\n        <group ref={needleRef}>\r\n          <group\r\n            rotation={[0, 0, -90].map((degrees) => MathUtils.degToRad(degrees))}\r\n          >\r\n            <Cone args={[0.03, 1, 4]} castShadow={true} position={[0, 0.5, 0]}>\r\n              <meshStandardMaterial\r\n                color=\"orange\"\r\n                metalness={0.1}\r\n                roughness={0.6}\r\n              />\r\n            </Cone>\r\n          </group>\r\n        </group>\r\n        <Cylinder\r\n          args={[0.1, 0.05, 0.1, 36]}\r\n          castShadow={true}\r\n          rotation={[-90, 0, 0].map((degrees) => MathUtils.degToRad(degrees))}\r\n        >\r\n          <meshStandardMaterial />\r\n        </Cylinder>\r\n      </group>\r\n    </group>\r\n  );\r\n};\r\n\r\nexport default Gauge;\r\n","import { MathUtils } from \"three\";\r\nimport { Circle } from \"@react-three/drei\";\r\nimport { folder, useControls } from \"leva\";\r\n\r\nimport Material from \"../Material\";\r\n\r\nconst Geometry2DCircle = ({ children }) => {\r\n  const { radius, segments, θLength, θStart } = useControls(\"Components\", {\r\n    Geometry: folder({\r\n      Arguments: folder({\r\n        \"XY Plane\": folder({\r\n          radius: {\r\n            label: \"Radius\",\r\n            max: 3,\r\n            min: 0.1,\r\n            step: 0.1,\r\n            value: 1,\r\n          },\r\n          segments: {\r\n            label: \"Segments\",\r\n            max: 64,\r\n            min: 3,\r\n            step: 1,\r\n            value: 8,\r\n          },\r\n          Θ: folder({\r\n            θStart: {\r\n              label: \"Θ Start\",\r\n              max: 360,\r\n              min: -360,\r\n              step: 1,\r\n              value: 0,\r\n            },\r\n            θLength: {\r\n              label: \"Θ Length\",\r\n              max: 360,\r\n              min: 0,\r\n              step: 1,\r\n              value: 360,\r\n            },\r\n          }),\r\n        }),\r\n      }),\r\n    }),\r\n  });\r\n\r\n  return (\r\n    <Circle\r\n      args={[\r\n        radius,\r\n        segments,\r\n        MathUtils.degToRad(θStart),\r\n        MathUtils.degToRad(θLength),\r\n      ]}\r\n    >\r\n      {children ?? <Material />}\r\n    </Circle>\r\n  );\r\n};\r\n\r\nexport default Geometry2DCircle;\r\n","import { Plane } from \"@react-three/drei\";\r\nimport { folder, useControls } from \"leva\";\r\n\r\nimport Material from \"../Material\";\r\n\r\nconst Geometry2DPlane = ({ children }) => {\r\n  const { height, heightSegments, width, widthSegments } = useControls(\r\n    \"Components\",\r\n    {\r\n      Geometry: folder({\r\n        Arguments: folder({\r\n          \"X Axis\": folder({\r\n            width: {\r\n              label: \"Width\",\r\n              max: 5,\r\n              min: 0.1,\r\n              step: 0.1,\r\n              value: 1,\r\n            },\r\n            widthSegments: {\r\n              label: \"Segments\",\r\n              max: 10,\r\n              min: 1,\r\n              step: 1,\r\n              value: 1,\r\n            },\r\n          }),\r\n          \"Y Axis\": folder({\r\n            height: {\r\n              label: \"Height\",\r\n              max: 5,\r\n              min: 0.1,\r\n              step: 0.1,\r\n              value: 1,\r\n            },\r\n            heightSegments: {\r\n              label: \"Segments\",\r\n              max: 10,\r\n              min: 1,\r\n              step: 1,\r\n              value: 1,\r\n            },\r\n          }),\r\n        }),\r\n      }),\r\n    }\r\n  );\r\n\r\n  return (\r\n    <Plane args={[width, height, widthSegments, heightSegments]}>\r\n      {children ?? <Material />}\r\n    </Plane>\r\n  );\r\n};\r\n\r\nexport default Geometry2DPlane;\r\n","import { MathUtils } from \"three\";\r\nimport { Ring } from \"@react-three/drei\";\r\nimport { folder, useControls } from \"leva\";\r\n\r\nimport Material from \"../Material\";\r\n\r\nconst Geometry2DRing = ({ children }) => {\r\n  const { innerRadius, outerRadius, θLength, θSegments, θStart, φSegments } =\r\n    useControls(\"Components\", {\r\n      Geometry: folder({\r\n        Arguments: folder({\r\n          \"XY Plane\": folder({\r\n            innerRadius: {\r\n              label: \"Inner Radius\",\r\n              max: 3,\r\n              min: 0.1,\r\n              step: 0.1,\r\n              value: 0.5,\r\n            },\r\n            outerRadius: {\r\n              label: \"Outer Radius\",\r\n              max: 3,\r\n              min: 0.1,\r\n              step: 0.1,\r\n              value: 1,\r\n            },\r\n            Θ: folder({\r\n              θSegments: {\r\n                label: \"Θ Segments\",\r\n                max: 64,\r\n                min: 3,\r\n                step: 1,\r\n                value: 8,\r\n              },\r\n              θStart: {\r\n                label: \"Θ Start\",\r\n                max: 360,\r\n                min: -360,\r\n                step: 1,\r\n                value: 0,\r\n              },\r\n              θLength: {\r\n                label: \"Θ Length\",\r\n                max: 360,\r\n                min: 0,\r\n                step: 1,\r\n                value: 360,\r\n              },\r\n            }),\r\n            Φ: folder({\r\n              φSegments: {\r\n                label: \"Φ Segments\",\r\n                max: 64,\r\n                min: 1,\r\n                step: 1,\r\n                value: 8,\r\n              },\r\n            }),\r\n          }),\r\n        }),\r\n      }),\r\n    });\r\n\r\n  return (\r\n    <Ring\r\n      args={[\r\n        innerRadius,\r\n        outerRadius,\r\n        θSegments,\r\n        φSegments,\r\n        MathUtils.degToRad(θStart),\r\n        MathUtils.degToRad(θLength),\r\n      ]}\r\n    >\r\n      {children ?? <Material />}\r\n    </Ring>\r\n  );\r\n};\r\n\r\nexport default Geometry2DRing;\r\n","import { folder, useControls } from \"leva\";\r\n\r\nimport Circle from \"./Circle\";\r\nimport Plane from \"./Plane\";\r\nimport Ring from \"./Ring\";\r\n\r\nconst GEOMETRY_2D = Object.freeze({\r\n  Circle: \"Circle\",\r\n  None: \"None\",\r\n  Plane: \"Plane\",\r\n  Ring: \"Ring\",\r\n});\r\n\r\nfunction enableGeometry(name, children) {\r\n  let element;\r\n  switch (name) {\r\n    case GEOMETRY_2D.Circle:\r\n      element = <Circle>{children}</Circle>;\r\n      break;\r\n    case GEOMETRY_2D.Plane:\r\n      element = <Plane>{children}</Plane>;\r\n      break;\r\n    case GEOMETRY_2D.Ring:\r\n      element = <Ring>{children}</Ring>;\r\n      break;\r\n    default:\r\n      element = <></>;\r\n  }\r\n  return element;\r\n}\r\n\r\nconst Geometry2D = ({ children }) => {\r\n  const { geometry2DName } = useControls(\"Components\", {\r\n    Geometry: folder({\r\n      geometry2DName: {\r\n        label: \"Geometry\",\r\n        options: GEOMETRY_2D,\r\n        value: GEOMETRY_2D.Plane,\r\n      },\r\n    }),\r\n  });\r\n\r\n  return enableGeometry(geometry2DName, children);\r\n};\r\n\r\nexport default Geometry2D;\r\n","import { Box } from \"@react-three/drei\";\r\nimport { folder, useControls } from \"leva\";\r\n\r\nimport Material from \"../Material\";\r\n\r\nconst Geometry3DBox = ({ children }) => {\r\n  const { depth, depthSegment, height, heightSegments, width, widthSegments } =\r\n    useControls(\"Components\", {\r\n      Geometry: folder({\r\n        Arguments: folder({\r\n          \"X Axis\": folder({\r\n            width: {\r\n              label: \"Width\",\r\n              max: 5,\r\n              min: 0.1,\r\n              step: 0.1,\r\n              value: 1,\r\n            },\r\n            widthSegments: {\r\n              label: \"Segments\",\r\n              max: 10,\r\n              min: 1,\r\n              step: 1,\r\n              value: 1,\r\n            },\r\n          }),\r\n          \"Y Axis\": folder({\r\n            height: {\r\n              label: \"Height\",\r\n              max: 5,\r\n              min: 0.1,\r\n              step: 0.1,\r\n              value: 1,\r\n            },\r\n            heightSegments: {\r\n              label: \"Segments\",\r\n              max: 10,\r\n              min: 1,\r\n              step: 1,\r\n              value: 1,\r\n            },\r\n          }),\r\n          \"Z Axis\": folder({\r\n            depth: {\r\n              label: \"Depth\",\r\n              max: 5,\r\n              min: 0.1,\r\n              step: 0.1,\r\n              value: 1,\r\n            },\r\n            depthSegments: {\r\n              label: \"Segments\",\r\n              max: 10,\r\n              min: 1,\r\n              step: 1,\r\n              value: 1,\r\n            },\r\n          }),\r\n        }),\r\n      }),\r\n    });\r\n\r\n  return (\r\n    <Box\r\n      args={[width, height, depth, widthSegments, heightSegments, depthSegment]}\r\n    >\r\n      {children ?? <Material />}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Geometry3DBox;\r\n","import { MathUtils } from \"three\";\r\nimport { Cone } from \"@react-three/drei\";\r\nimport { folder, useControls } from \"leva\";\r\n\r\nimport Material from \"../Material\";\r\n\r\nconst Geometry3DCone = ({ children }) => {\r\n  const {\r\n    height,\r\n    heightSegments,\r\n    openEnded,\r\n    radialSegments,\r\n    radius,\r\n    θLength,\r\n    θStart,\r\n  } = useControls(\"Components\", {\r\n    Geometry: folder({\r\n      Arguments: folder({\r\n        \"XZ Plane\": folder({\r\n          radius: {\r\n            label: \"Radius\",\r\n            max: 3,\r\n            min: 0.1,\r\n            step: 0.1,\r\n            value: 1,\r\n          },\r\n          radialSegments: {\r\n            label: \"Segments\",\r\n            max: 64,\r\n            min: 3,\r\n            step: 1,\r\n            value: 8,\r\n          },\r\n          openEnded: {\r\n            label: \"Open Ended\",\r\n            value: false,\r\n          },\r\n          Θ: folder({\r\n            θStart: {\r\n              label: \"Θ Start\",\r\n              max: 360,\r\n              min: -360,\r\n              step: 1,\r\n              value: 0,\r\n            },\r\n            θLength: {\r\n              label: \"Θ Length\",\r\n              max: 360,\r\n              min: 0,\r\n              step: 1,\r\n              value: 360,\r\n            },\r\n          }),\r\n        }),\r\n        \"Y Axis\": folder({\r\n          height: {\r\n            label: \"Height\",\r\n            max: 3,\r\n            min: 0.1,\r\n            step: 0.1,\r\n            value: 1,\r\n          },\r\n          heightSegments: {\r\n            label: \"Segments\",\r\n            max: 8,\r\n            min: 1,\r\n            step: 1,\r\n            value: 1,\r\n          },\r\n        }),\r\n      }),\r\n    }),\r\n  });\r\n\r\n  return (\r\n    <Cone\r\n      args={[\r\n        radius,\r\n        height,\r\n        radialSegments,\r\n        heightSegments,\r\n        openEnded,\r\n        MathUtils.degToRad(θStart),\r\n        MathUtils.degToRad(θLength),\r\n      ]}\r\n    >\r\n      {children ?? <Material />}\r\n    </Cone>\r\n  );\r\n};\r\n\r\nexport default Geometry3DCone;\r\n","import { MathUtils } from \"three\";\r\nimport { Cylinder } from \"@react-three/drei\";\r\nimport { folder, useControls } from \"leva\";\r\n\r\nimport Material from \"../Material\";\r\n\r\nconst Geometry3DCylinder = ({ children }) => {\r\n  const {\r\n    height,\r\n    heightSegments,\r\n    openEnded,\r\n    radialSegments,\r\n    radiusBottom,\r\n    radiusTop,\r\n    θLength,\r\n    θStart,\r\n  } = useControls(\"Components\", {\r\n    Geometry: folder({\r\n      Arguments: folder({\r\n        \"XZ Plane\": folder({\r\n          radiusBottom: {\r\n            label: \"Radius Bottoms\",\r\n            max: 3,\r\n            min: 0.1,\r\n            step: 0.1,\r\n            value: 1,\r\n          },\r\n          radiusTop: {\r\n            label: \"Radius Top\",\r\n            max: 3,\r\n            min: 0.1,\r\n            step: 0.1,\r\n            value: 1,\r\n          },\r\n          radialSegments: {\r\n            label: \"Segments\",\r\n            max: 64,\r\n            min: 3,\r\n            step: 1,\r\n            value: 8,\r\n          },\r\n          openEnded: {\r\n            label: \"Open Ended\",\r\n            value: false,\r\n          },\r\n          Θ: folder({\r\n            θStart: {\r\n              label: \"Θ Start\",\r\n              max: 360,\r\n              min: -360,\r\n              step: 1,\r\n              value: 0,\r\n            },\r\n            θLength: {\r\n              label: \"Θ Length\",\r\n              max: 360,\r\n              min: 0,\r\n              step: 1,\r\n              value: 360,\r\n            },\r\n          }),\r\n        }),\r\n        \"Y Axis\": folder({\r\n          height: {\r\n            label: \"Height\",\r\n            max: 3,\r\n            min: 0.1,\r\n            step: 0.1,\r\n            value: 1,\r\n          },\r\n          heightSegments: {\r\n            label: \"Segments\",\r\n            max: 8,\r\n            min: 1,\r\n            step: 1,\r\n            value: 1,\r\n          },\r\n        }),\r\n      }),\r\n    }),\r\n  });\r\n\r\n  return (\r\n    <Cylinder\r\n      args={[\r\n        radiusTop,\r\n        radiusBottom,\r\n        height,\r\n        radialSegments,\r\n        heightSegments,\r\n        openEnded,\r\n        MathUtils.degToRad(θStart),\r\n        MathUtils.degToRad(θLength),\r\n      ]}\r\n    >\r\n      {children ?? <Material />}\r\n    </Cylinder>\r\n  );\r\n};\r\n\r\nexport default Geometry3DCylinder;\r\n","import { Tetrahedron } from \"@react-three/drei\";\r\nimport { folder, useControls } from \"leva\";\r\n\r\nimport Material from \"../Material\";\r\n\r\nconst Geometry3DTetrahedron = ({ children }) => {\r\n  const { detail, radius } = useControls(\"Components\", {\r\n    Geometry: folder({\r\n      Arguments: folder({\r\n        radius: {\r\n          label: \"Radius\",\r\n          max: 3,\r\n          min: 0.1,\r\n          step: 0.1,\r\n          value: 1,\r\n        },\r\n        detail: {\r\n          label: \"Detail\",\r\n          max: 8,\r\n          min: 0,\r\n          step: 1,\r\n          value: 0,\r\n        },\r\n      }),\r\n    }),\r\n  });\r\n\r\n  return (\r\n    <Tetrahedron args={[radius, detail]}>\r\n      {children ?? <Material />}\r\n    </Tetrahedron>\r\n  );\r\n};\r\n\r\nexport default Geometry3DTetrahedron;\r\n","import { Dodecahedron } from \"@react-three/drei\";\r\nimport { folder, useControls } from \"leva\";\r\n\r\nimport Material from \"../Material\";\r\n\r\nconst Geometry3DDodecahedron = ({ children }) => {\r\n  const { detail, radius } = useControls(\"Components\", {\r\n    Geometry: folder({\r\n      Arguments: folder({\r\n        radius: {\r\n          label: \"Radius\",\r\n          max: 3,\r\n          min: 0.1,\r\n          step: 0.1,\r\n          value: 1,\r\n        },\r\n        detail: {\r\n          label: \"Detail\",\r\n          max: 8,\r\n          min: 0,\r\n          step: 1,\r\n          value: 0,\r\n        },\r\n      }),\r\n    }),\r\n  });\r\n\r\n  return (\r\n    <Dodecahedron args={[radius, detail]}>\r\n      {children ?? <Material />}\r\n    </Dodecahedron>\r\n  );\r\n};\r\n\r\nexport default Geometry3DDodecahedron;\r\n","import { Icosahedron } from \"@react-three/drei\";\r\nimport { folder, useControls } from \"leva\";\r\n\r\nimport Material from \"../Material\";\r\n\r\nconst Geometry3DIcosahedron = ({ children }) => {\r\n  const { detail, radius } = useControls(\"Components\", {\r\n    Geometry: folder({\r\n      Arguments: folder({\r\n        radius: {\r\n          label: \"Radius\",\r\n          max: 3,\r\n          min: 0.1,\r\n          step: 0.1,\r\n          value: 1,\r\n        },\r\n        detail: {\r\n          label: \"Detail\",\r\n          max: 8,\r\n          min: 0,\r\n          step: 1,\r\n          value: 0,\r\n        },\r\n      }),\r\n    }),\r\n  });\r\n\r\n  return (\r\n    <Icosahedron args={[radius, detail]}>\r\n      {children ?? <Material />}\r\n    </Icosahedron>\r\n  );\r\n};\r\n\r\nexport default Geometry3DIcosahedron;\r\n","import { Octahedron } from \"@react-three/drei\";\r\nimport { folder, useControls } from \"leva\";\r\n\r\nimport Material from \"../Material\";\r\n\r\nconst Geometry3DOctahedron = ({ children }) => {\r\n  const { detail, radius } = useControls(\"Components\", {\r\n    Geometry: folder({\r\n      Arguments: folder({\r\n        radius: {\r\n          label: \"Radius\",\r\n          max: 3,\r\n          min: 0.1,\r\n          step: 0.1,\r\n          value: 1,\r\n        },\r\n        detail: {\r\n          label: \"Detail\",\r\n          max: 8,\r\n          min: 0,\r\n          step: 1,\r\n          value: 0,\r\n        },\r\n      }),\r\n    }),\r\n  });\r\n\r\n  return (\r\n    <Octahedron args={[radius, detail]}>{children ?? <Material />}</Octahedron>\r\n  );\r\n};\r\n\r\nexport default Geometry3DOctahedron;\r\n","import { MathUtils } from \"three\";\r\nimport { Sphere } from \"@react-three/drei\";\r\nimport { folder, useControls } from \"leva\";\r\n\r\nimport Material from \"../Material\";\r\n\r\nconst Geometry3DSphere = ({ children }) => {\r\n  const {\r\n    radius,\r\n    sphereHeightSegments,\r\n    sphereWidthSegments,\r\n    θLength,\r\n    θStart,\r\n    φLength,\r\n    φStart,\r\n  } = useControls(\"Components\", {\r\n    Geometry: folder({\r\n      Arguments: folder({\r\n        \"Transverse Plane\": folder({\r\n          radius: {\r\n            label: \"Radius\",\r\n            max: 3,\r\n            min: 0.1,\r\n            step: 0.1,\r\n            value: 1,\r\n          },\r\n          sphereWidthSegments: {\r\n            label: \"Width Segments\",\r\n            max: 64,\r\n            min: 3,\r\n            step: 1,\r\n            value: 32,\r\n          },\r\n          Φ: folder({\r\n            φStart: {\r\n              label: \"Φ Start\",\r\n              max: 360,\r\n              min: -360,\r\n              step: 1,\r\n              value: 0,\r\n            },\r\n            φLength: {\r\n              label: \"Φ Length\",\r\n              max: 360,\r\n              min: 0,\r\n              step: 1,\r\n              value: 360,\r\n            },\r\n          }),\r\n        }),\r\n        \"Frontal Plane\": folder({\r\n          sphereHeightSegments: {\r\n            label: \"Height Segments\",\r\n            max: 32,\r\n            min: 2,\r\n            step: 1,\r\n            value: 16,\r\n          },\r\n          Θ: folder({\r\n            θStart: {\r\n              label: \"Θ Start\",\r\n              max: 360,\r\n              min: -360,\r\n              step: 1,\r\n              value: 0,\r\n            },\r\n            θLength: {\r\n              label: \"Θ Length\",\r\n              max: 360,\r\n              min: 0,\r\n              step: 1,\r\n              value: 360,\r\n            },\r\n          }),\r\n        }),\r\n      }),\r\n    }),\r\n  });\r\n\r\n  return (\r\n    <Sphere\r\n      args={[\r\n        radius,\r\n        sphereWidthSegments,\r\n        sphereHeightSegments,\r\n        MathUtils.degToRad(φStart),\r\n        MathUtils.degToRad(φLength),\r\n        MathUtils.degToRad(θStart),\r\n        MathUtils.degToRad(θLength),\r\n      ]}\r\n    >\r\n      {children ?? <Material />}\r\n    </Sphere>\r\n  );\r\n};\r\n\r\nexport default Geometry3DSphere;\r\n","import { MathUtils } from \"three\";\r\nimport { Torus } from \"@react-three/drei\";\r\nimport { folder, useControls } from \"leva\";\r\n\r\nimport Material from \"../Material\";\r\n\r\nconst Geometry3DTorus = ({ children }) => {\r\n  const { arc, radialSegments, radius, tube, tubularSegments } = useControls(\r\n    \"Components\",\r\n    {\r\n      Geometry: folder({\r\n        Torus: folder({\r\n          radius: {\r\n            label: \"Radius\",\r\n            max: 3,\r\n            min: 0.1,\r\n            step: 0.1,\r\n            value: 1,\r\n          },\r\n          tube: {\r\n            label: \"Tube\",\r\n            max: 5,\r\n            min: 0,\r\n            step: 0.1,\r\n            value: 0.4,\r\n          },\r\n          radialSegments: {\r\n            label: \"Radial Segments\",\r\n            max: 64,\r\n            min: 3,\r\n            step: 1,\r\n            value: 8,\r\n          },\r\n          tubularSegments: {\r\n            label: \"Tubular Segments\",\r\n            max: 64,\r\n            min: 3,\r\n            step: 1,\r\n            value: 6,\r\n          },\r\n          arc: {\r\n            label: \"Arc\",\r\n            max: 360,\r\n            min: 0,\r\n            step: 1,\r\n            value: 360,\r\n          },\r\n        }),\r\n      }),\r\n    }\r\n  );\r\n\r\n  return (\r\n    <Torus\r\n      args={[\r\n        radius,\r\n        tube,\r\n        radialSegments,\r\n        tubularSegments,\r\n        MathUtils.degToRad(arc),\r\n      ]}\r\n    >\r\n      {children ?? <Material />}\r\n    </Torus>\r\n  );\r\n};\r\n\r\nexport default Geometry3DTorus;\r\n","import { TorusKnot } from \"@react-three/drei\";\r\nimport { folder, useControls } from \"leva\";\r\n\r\nimport Material from \"../Material\";\r\n\r\nconst Geometry3DTorusKnot = ({ children }) => {\r\n  const { radius, tube, radialSegments, tubularSegments, p, q } = useControls(\r\n    \"Components\",\r\n    {\r\n      Geometry: folder({\r\n        Arguments: folder({\r\n          radius: {\r\n            label: \"Radius\",\r\n            max: 3,\r\n            min: 0.1,\r\n            step: 0.1,\r\n            value: 1,\r\n          },\r\n          tube: {\r\n            label: \"Tube\",\r\n            max: 5,\r\n            min: 0,\r\n            step: 0.1,\r\n            value: 0.4,\r\n          },\r\n          tubularSegments: {\r\n            label: \"Tubular Segments\",\r\n            max: 256,\r\n            min: 3,\r\n            step: 1,\r\n            value: 64,\r\n          },\r\n          radialSegments: {\r\n            label: \"Radial Segments\",\r\n            max: 64,\r\n            min: 3,\r\n            step: 1,\r\n            value: 8,\r\n          },\r\n          p: {\r\n            label: \"P\",\r\n            max: 32,\r\n            min: 1,\r\n            step: 1,\r\n            value: 2,\r\n          },\r\n          q: {\r\n            label: \"Q\",\r\n            max: 32,\r\n            min: 1,\r\n            step: 1,\r\n            value: 3,\r\n          },\r\n        }),\r\n      }),\r\n    }\r\n  );\r\n  return (\r\n    <TorusKnot args={[radius, tube, tubularSegments, radialSegments, p, q]}>\r\n      {children ?? <Material />}\r\n    </TorusKnot>\r\n  );\r\n};\r\n\r\nexport default Geometry3DTorusKnot;\r\n","import { folder, useControls } from \"leva\";\r\n\r\nimport Box from \"./Box\";\r\nimport Cone from \"./Cone\";\r\nimport Cylinder from \"./Cylinder\";\r\nimport Tetrahedron from \"./Tetrahedron\";\r\nimport Dodecahedron from \"./Dodecahedron\";\r\nimport Icosahedron from \"./Icosahedron\";\r\nimport Octahedron from \"./Octahedron\";\r\nimport Sphere from \"./Sphere\";\r\n\r\nimport Torus from \"./Torus\";\r\nimport TorusKnot from \"./TorusKnot\";\r\n\r\nconst GEOMETRY_3D = Object.freeze({\r\n  Box: \"Box\",\r\n  Cone: \"Cone\",\r\n  Cylinder: \"Cylinder\",\r\n  Dodecahedron: \"Dodecahedron\",\r\n  Icosahedron: \"Icosahedron\",\r\n  None: \"None\",\r\n  Octahedron: \"Octahedron\",\r\n  Sphere: \"Sphere\",\r\n  Tetrahedron: \"Tetrahedron\",\r\n  Torus: \"Torus\",\r\n  TorusKnot: \"TorusKnot\",\r\n});\r\n\r\nfunction enableGeometry(name, children) {\r\n  let element;\r\n  switch (name) {\r\n    case GEOMETRY_3D.Box:\r\n      element = <Box>{children}</Box>;\r\n      break;\r\n    case GEOMETRY_3D.Cone:\r\n      element = <Cone>{children}</Cone>;\r\n      break;\r\n    case GEOMETRY_3D.Cylinder:\r\n      element = <Cylinder>{children}</Cylinder>;\r\n      break;\r\n    case GEOMETRY_3D.Dodecahedron:\r\n      element = <Dodecahedron>{children}</Dodecahedron>;\r\n      break;\r\n    case GEOMETRY_3D.Icosahedron:\r\n      element = <Icosahedron>{children}</Icosahedron>;\r\n      break;\r\n    case GEOMETRY_3D.Octahedron:\r\n      element = <Octahedron>{children}</Octahedron>;\r\n      break;\r\n    case GEOMETRY_3D.Sphere:\r\n      element = <Sphere>{children}</Sphere>;\r\n      break;\r\n    case GEOMETRY_3D.Tetrahedron:\r\n      element = <Tetrahedron>{children}</Tetrahedron>;\r\n      break;\r\n    case GEOMETRY_3D.Torus:\r\n      element = <Torus>{children}</Torus>;\r\n      break;\r\n    case GEOMETRY_3D.TorusKnot:\r\n      element = <TorusKnot>{children}</TorusKnot>;\r\n      break;\r\n    default:\r\n      element = <></>;\r\n  }\r\n  return element;\r\n}\r\n\r\nconst Geometry3D = ({ children }) => {\r\n  const { geometry3DName } = useControls(\"Components\", {\r\n    Geometry: folder({\r\n      geometry3DName: {\r\n        label: \"Geometry\",\r\n        options: GEOMETRY_3D,\r\n        value: GEOMETRY_3D.Box,\r\n      },\r\n    }),\r\n  });\r\n\r\n  return enableGeometry(geometry3DName, children);\r\n};\r\n\r\nexport default Geometry3D;\r\n","import { GizmoHelper, GizmoViewport } from \"@react-three/drei\";\r\nimport { folder, useControls } from \"leva\";\r\n\r\nconst Helpers = () => {\r\n  const { enableAxesHelper, enableGizmoHelper, enableGridHelper } = useControls(\r\n    \"General\",\r\n    {\r\n      Helpers: folder({\r\n        enableAxesHelper: { label: \"Axes\", value: false },\r\n        enableGizmoHelper: { label: \"Gizmo\", value: true },\r\n        enableGridHelper: { label: \"Grid\", value: false },\r\n      }),\r\n    }\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {enableAxesHelper && <axesHelper />}\r\n      {enableGizmoHelper && (\r\n        <GizmoHelper alignment=\"bottom-right\" margin={[80, 80]}>\r\n          <GizmoViewport\r\n            axisColors={[\r\n              \"hsl(0, 100%, 50%)\",\r\n              \"hsl(120, 100%, 50%)\",\r\n              \"hsl(240, 100%, 50%)\",\r\n            ]}\r\n            labelColor=\"black\"\r\n          />\r\n        </GizmoHelper>\r\n      )}\r\n      {enableGridHelper && <gridHelper args={[10, 10, 0xffffff, 0x333333]} />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Helpers;\r\n","export default __webpack_public_path__ + \"static/media/UV_Grid_Sm.8ab40f71.jpg\";","import { DoubleSide, Vector2 } from \"three\";\r\nimport { useTexture } from \"@react-three/drei\";\r\n\r\nimport uvGrid from \"./assets/UV_Grid_Sm.jpg\";\r\n\r\nconst ImageDefault = () => {\r\n  const texture = useTexture(uvGrid, true);\r\n  texture.offset = new Vector2(0, 0);\r\n  texture.repeat = new Vector2(1, 1);\r\n\r\n  return (\r\n    <mesh>\r\n      <planeGeometry args={[1, 1, 1]} />\r\n      <meshStandardMaterial center map={texture} side={DoubleSide} />\r\n    </mesh>\r\n  );\r\n};\r\n\r\nexport default ImageDefault;\r\n","export default __webpack_public_path__ + \"static/media/arteveldehogeschool_logo.6220cd57.svg\";","export default __webpack_public_path__ + \"static/media/SVG_logo.e87754b4.svg\";","import { SvgLoader } from \"App/components\";\r\n\r\nimport logoNl from \"./assets/arteveldehogeschool_logo.svg\";\r\nimport svgLogo from \"./assets/SVG_logo.svg\";\r\n\r\nconst svgLogoUrl =\r\n  \"https://upload.wikimedia.org/wikipedia/commons/0/02/SVG_logo.svg\";\r\n\r\nconst ImageSvg = (props) => {\r\n  const scale = 0.0075;\r\n\r\n  return (\r\n    <>\r\n      <SvgLoader position={[0, 0, 0]} scale={scale} source={svgLogoUrl} />;\r\n      <SvgLoader position={[0, 0, -1]} scale={scale} source={logoNl} />;\r\n      <SvgLoader position={[0, 0, -2]} scale={scale} source={svgLogo} />;\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImageSvg;\r\n","import { useControls } from \"leva\";\r\n\r\nimport Default from \"./Default\";\r\nimport Svg from \"./Svg\";\r\n\r\nconst IMAGE = Object.freeze({\r\n  Default: \"Default\",\r\n  Svg: \"Svg\",\r\n});\r\n\r\nconst Image = () => {\r\n  const { useImage } = useControls(\"Components\", {\r\n    useImage: {\r\n      label: \"Image\",\r\n      options: IMAGE,\r\n      value: IMAGE.Default,\r\n    },\r\n  });\r\n\r\n  function enableImage(name, element) {\r\n    return useImage === name ? element : null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {enableImage(IMAGE.Default, <Default />)}\r\n      {enableImage(IMAGE.Svg, <Svg />)}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Image;\r\n","import { OrbitControls, TrackballControls } from \"@react-three/drei\";\r\nimport { folder, useControls } from \"leva\";\r\n\r\nconst CONTROLS = Object.freeze({\r\n  Orbit: \"Orbit\",\r\n  Trackball: \"Trackball\",\r\n});\r\n\r\nconst InputControls = () => {\r\n  const { useInputControls } = useControls(\"General\", {\r\n    enableStats: { label: \"Stats\", value: false },\r\n    \"Input Controls\": folder({\r\n      useInputControls: {\r\n        label: \"Controls\",\r\n        options: CONTROLS,\r\n        value: CONTROLS.Orbit,\r\n      },\r\n    }),\r\n  });\r\n\r\n  function enableInputControls(name, element) {\r\n    return useInputControls === name ? element : null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {enableInputControls(\r\n        CONTROLS.Orbit,\r\n        <OrbitControls enablePan={true} enableRotate={true} enableZoom={true} />\r\n      )}\r\n      {enableInputControls(CONTROLS.Trackball, <TrackballControls />)}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InputControls;\r\n","import { useRef } from \"react\";\r\nimport {\r\n  DirectionalLightHelper,\r\n  HemisphereLightHelper,\r\n  MathUtils,\r\n  Object3D,\r\n  PointLightHelper,\r\n  SpotLightHelper,\r\n} from \"three\";\r\nimport { useFrame, useThree } from \"@react-three/fiber\";\r\nimport { useHelper } from \"@react-three/drei\";\r\nimport { folder, useControls } from \"leva\";\r\n\r\nconst LightingDemo = () => {\r\n  const { helpers, helperSize } = useControls(\"Lightings\", {\r\n    helpers: { label: \"Helpers\", value: false },\r\n    helperSize: { label: \"Helper Size\", max: 2, min: 0, value: 0.5 },\r\n  });\r\n  const ambientLight = useControls(\"Lightings\", {\r\n    \"Ambient Light\": folder({\r\n      color: { label: \"Color\", value: \"#ffffff\" },\r\n      intensity: {\r\n        label: \"Intensity\",\r\n        max: 1,\r\n        min: 0,\r\n        value: 0.1,\r\n      },\r\n    }),\r\n  });\r\n  const directionalLight = useControls(\"Lightings\", {\r\n    \"Directional Light\": folder({\r\n      castShadow: { label: \"Cast Shadow\", value: true },\r\n      color: { label: \"Color\", value: \"#ffffff\" },\r\n      intensity: {\r\n        label: \"Intensity\",\r\n        max: 1,\r\n        min: 0,\r\n        value: 1,\r\n      },\r\n      position: {\r\n        label: \"Position\",\r\n        value: { x: 4, y: 4, z: 1 },\r\n      },\r\n    }),\r\n  });\r\n  const hemisphereLight = useControls(\"Lightings\", {\r\n    \"Hemisphere Light\": folder({\r\n      castShadow: { label: \"Cast Shadow\", value: true },\r\n      color: { label: \"Sky Color\", value: \"#ffffff\" },\r\n      groundColor: { label: \"Ground Color\", value: \"#ffffff\" },\r\n      intensity: {\r\n        label: \"Intensity\",\r\n        max: 1,\r\n        min: 0,\r\n        value: 1,\r\n      },\r\n      position: {\r\n        label: \"Position\",\r\n        value: { x: 0, y: 1, z: 0 },\r\n      },\r\n    }),\r\n  });\r\n  const pointLight = useControls(\"Lightings\", {\r\n    \"Point Light\": folder({\r\n      castShadow: { label: \"Cast Shadow\", value: true },\r\n      color: { label: \"Color\", value: \"#ffcc77\" },\r\n      intensity: { label: \"Intensity\", max: 20, min: 0, value: 0.5 },\r\n      position: { label: \"Position\", value: { x: -4, y: 1, z: -4 } },\r\n    }),\r\n  });\r\n  const spotLight = useControls(\"Lightings\", {\r\n    Spotlight: folder({\r\n      castShadow: { label: \"Cast Shadow\", value: true },\r\n      color: { label: \"Color\", value: \"#ffcc77\" },\r\n      intensity: { label: \"Intensity\", max: 20, min: 0, value: 1 },\r\n      penumbra: { label: \"Penumbra\", value: 0.5 },\r\n      position: { label: \"Position\", value: { x: 0, y: 4, z: 0 } },\r\n      target: { label: \"Target\", value: { x: 0, y: 0, z: 0 } },\r\n    }),\r\n  });\r\n\r\n  const { scene } = useThree();\r\n  const target = new Object3D();\r\n  scene.add(target);\r\n\r\n  const nullRef = { current: null };\r\n  const directionalLightRef = useRef();\r\n  const hemisphereLightRef = useRef();\r\n  const pointLightRef = useRef();\r\n  const spotLightRef = useRef();\r\n\r\n  useHelper(\r\n    helpers ? directionalLightRef : nullRef,\r\n    DirectionalLightHelper,\r\n    helperSize,\r\n    directionalLight.color\r\n  );\r\n  useHelper(\r\n    helpers ? pointLightRef : nullRef,\r\n    PointLightHelper,\r\n    helperSize,\r\n    pointLight.color\r\n  );\r\n  useHelper(helpers ? spotLightRef : nullRef, SpotLightHelper, spotLight.color);\r\n  useHelper(\r\n    helpers ? hemisphereLightRef : nullRef,\r\n    HemisphereLightHelper,\r\n    helperSize\r\n  );\r\n\r\n  useFrame(() => {\r\n    target.translateX(spotLight.target.x);\r\n    target.translateZ(spotLight.target.z);\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <ambientLight\r\n        color={ambientLight.color}\r\n        intensity={ambientLight.intensity}\r\n      />\r\n      <directionalLight\r\n        castShadow={directionalLight.castShadow}\r\n        color={directionalLight.color}\r\n        intensity={directionalLight.intensity}\r\n        position={[\r\n          directionalLight.position.x,\r\n          directionalLight.position.y,\r\n          directionalLight.position.z,\r\n        ]}\r\n        ref={directionalLightRef}\r\n      />\r\n      <hemisphereLight\r\n        castShadow={hemisphereLight.castShadow}\r\n        color={hemisphereLight.color}\r\n        groundColor={hemisphereLight.groundColor}\r\n        intensity={hemisphereLight.intensity}\r\n        position={[\r\n          hemisphereLight.position.x,\r\n          hemisphereLight.position.y,\r\n          hemisphereLight.position.z,\r\n        ]}\r\n        ref={hemisphereLightRef}\r\n      />\r\n      <pointLight\r\n        castShadow={pointLight.castShadow}\r\n        color={pointLight.color}\r\n        intensity={pointLight.intensity}\r\n        position={[\r\n          pointLight.position.x,\r\n          pointLight.position.y,\r\n          pointLight.position.z,\r\n        ]}\r\n        ref={pointLightRef}\r\n      />\r\n      <spotLight\r\n        angle={MathUtils.degToRad(30)}\r\n        castShadow={spotLight.castShadow}\r\n        color={spotLight.color}\r\n        intensity={spotLight.intensity}\r\n        penumbra={spotLight.penumbra}\r\n        position={[\r\n          spotLight.position.x,\r\n          spotLight.position.y,\r\n          spotLight.position.z,\r\n        ]}\r\n        ref={spotLightRef}\r\n        target={target}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LightingDemo;\r\n","import { useRef } from \"react\";\r\nimport { DirectionalLightHelper } from \"three\";\r\nimport { folder, useControls } from \"leva\";\r\nimport { useHelper } from \"@react-three/drei\";\r\n\r\nconst LightingStudio = () => {\r\n  const { helpers, helperSize } = useControls(\"Lightings\", {\r\n    helpers: { label: \"Helpers\", value: false },\r\n    helperSize: { label: \"Helper Size\", max: 2, min: 0, value: 0.5 },\r\n  });\r\n  const ambientLight = useControls(\"Lightings\", {\r\n    \"Ambient Light\": folder({\r\n      color: { label: \"Color\", value: \"hsl(0, 0%, 100%)\" },\r\n      intensity: { label: \"Intensity\", max: 1, min: 0, value: 0.1 },\r\n    }),\r\n  });\r\n  const frontLight = useControls(\"Lightings\", {\r\n    \"Front Light\": folder({\r\n      castShadow: { label: \"Cast Shadow\", value: true },\r\n      color: { label: \"Color\", value: \"hsl(0, 0%, 70%)\" },\r\n      intensity: { label: \"Intensity\", max: 2, min: 0, value: 0.4 },\r\n      position: { label: \"Position\", value: { x: 0, y: 2, z: 4 } },\r\n    }),\r\n  });\r\n  const leftLight = useControls(\"Lightings\", {\r\n    \"Left Light\": folder({\r\n      castShadow: { label: \"Cast Shadow\", value: true },\r\n      color: { label: \"Color\", value: \"hsl(210, 100%, 70%)\" },\r\n      intensity: { label: \"Intensity\", max: 2, min: 0, value: 1 },\r\n      position: { label: \"Position\", value: { x: -4, y: 0, z: 0 } },\r\n    }),\r\n  });\r\n  const rightLight = useControls(\"Lightings\", {\r\n    \"Right Light\": folder({\r\n      castShadow: { label: \"Cast Shadow\", value: true },\r\n      color: { label: \"Color\", value: \"hsl(30, 100%, 70%)\" },\r\n      intensity: { label: \"Intensity\", max: 2, min: 0, value: 1 },\r\n      position: { label: \"Position\", value: { x: 4, y: 0, z: 0 } },\r\n    }),\r\n  });\r\n\r\n  const nullRef = { current: null };\r\n  const frontLightRef = useRef();\r\n  const leftLightRef = useRef();\r\n  const rightLightRef = useRef();\r\n\r\n  useHelper(\r\n    helpers ? frontLightRef : nullRef,\r\n    DirectionalLightHelper,\r\n    helperSize,\r\n    frontLight.color\r\n  );\r\n  useHelper(\r\n    helpers ? leftLightRef : nullRef,\r\n    DirectionalLightHelper,\r\n    helperSize,\r\n    leftLight.color\r\n  );\r\n  useHelper(\r\n    helpers ? rightLightRef : nullRef,\r\n    DirectionalLightHelper,\r\n    helperSize,\r\n    rightLight.color\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <ambientLight\r\n        color={ambientLight.color}\r\n        intensity={ambientLight.intensity}\r\n      />\r\n      <directionalLight\r\n        castShadow={frontLight.castShadow}\r\n        color={frontLight.color}\r\n        intensity={frontLight.intensity}\r\n        position={[\r\n          frontLight.position.x,\r\n          frontLight.position.y,\r\n          frontLight.position.z,\r\n        ]}\r\n        ref={frontLightRef}\r\n      />\r\n      <directionalLight\r\n        castShadow={leftLight.castShadow}\r\n        color={leftLight.color}\r\n        intensity={leftLight.intensity}\r\n        position={[\r\n          leftLight.position.x,\r\n          leftLight.position.y,\r\n          leftLight.position.z,\r\n        ]}\r\n        ref={leftLightRef}\r\n      />\r\n      <directionalLight\r\n        castShadow={rightLight.castShadow}\r\n        color={rightLight.color}\r\n        intensity={rightLight.intensity}\r\n        position={[\r\n          rightLight.position.x,\r\n          rightLight.position.y,\r\n          rightLight.position.z,\r\n        ]}\r\n        ref={rightLightRef}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LightingStudio;\r\n","import { useRef } from \"react\";\r\nimport { SpotLightHelper } from \"three\";\r\nimport { useHelper } from \"@react-three/drei\";\r\nimport { folder, useControls } from \"leva\";\r\n\r\nconst LightingThreePoint = () => {\r\n  const { helpers } = useControls(\"Lightings\", {\r\n    helpers: { label: \"Helpers\", value: false },\r\n  });\r\n  const ambientLight = useControls(\"Lightings\", {\r\n    \"Ambient Light\": folder({\r\n      color: { label: \"Color\", value: \"hsl(0, 0%, 100%)\" },\r\n      intensity: {\r\n        label: \"Intensity\",\r\n        max: 1,\r\n        min: 0,\r\n        value: 0.1,\r\n      },\r\n    }),\r\n  });\r\n  const backLight = useControls(\"Lightings\", {\r\n    \"Back Light\": folder({\r\n      castShadow: { label: \"Cast Shadow\", value: true },\r\n      color: { label: \"Color\", value: \"hsl(0, 0%, 70%)\" },\r\n      intensity: { label: \"Intensity\", max: 2, min: 0, value: 0.75 },\r\n      position: { label: \"Position\", value: { x: 4, y: 2, z: -4 } },\r\n    }),\r\n  });\r\n  const fillLight = useControls(\"Lightings\", {\r\n    \"Fill Light\": folder({\r\n      castShadow: { label: \"Cast Shadow\", value: true },\r\n      color: { label: \"Color\", value: \"hsl(210, 100%, 70%)\" },\r\n      intensity: { label: \"Intensity\", max: 2, min: 0, value: 0.75 },\r\n      position: { label: \"Position\", value: { x: -4, y: 2, z: 4 } },\r\n    }),\r\n  });\r\n  const keyLight = useControls(\"Lightings\", {\r\n    \"Key Light\": folder({\r\n      castShadow: { label: \"Cast Shadow\", value: true },\r\n      color: { label: \"Color\", value: \"hsl(30, 100%, 70%)\" },\r\n      intensity: { label: \"Intensity\", max: 2, min: 0, value: 0.75 },\r\n      position: { label: \"Position\", value: { x: 4, y: 2, z: 4 } },\r\n    }),\r\n  });\r\n\r\n  const nullRef = { current: null };\r\n  const backLightRef = useRef();\r\n  const fillLightRef = useRef();\r\n  const keyLightRef = useRef();\r\n\r\n  useHelper(helpers ? backLightRef : nullRef, SpotLightHelper, backLight.color);\r\n  useHelper(helpers ? fillLightRef : nullRef, SpotLightHelper, fillLight.color);\r\n  useHelper(helpers ? keyLightRef : nullRef, SpotLightHelper, keyLight.color);\r\n\r\n  return (\r\n    <>\r\n      <ambientLight\r\n        color={ambientLight.color}\r\n        intensity={ambientLight.intensity}\r\n      />\r\n      <spotLight\r\n        castShadow={backLight.castShadow}\r\n        color={backLight.color}\r\n        intensity={backLight.intensity}\r\n        position={[\r\n          backLight.position.x,\r\n          backLight.position.y,\r\n          backLight.position.z,\r\n        ]}\r\n        ref={backLightRef}\r\n      />\r\n      <spotLight\r\n        castShadow={fillLight.castShadow}\r\n        color={fillLight.color}\r\n        intensity={fillLight.intensity}\r\n        position={[\r\n          fillLight.position.x,\r\n          fillLight.position.y,\r\n          fillLight.position.z,\r\n        ]}\r\n        ref={fillLightRef}\r\n      />\r\n      <spotLight\r\n        castShadow={keyLight.castShadow}\r\n        color={keyLight.color}\r\n        intensity={keyLight.intensity}\r\n        position={[\r\n          keyLight.position.x,\r\n          keyLight.position.y,\r\n          keyLight.position.z,\r\n        ]}\r\n        ref={keyLightRef}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LightingThreePoint;\r\n","import { useControls } from \"leva\";\r\n\r\nimport Demo from \"./Demo\";\r\nimport Studio from \"./Studio\";\r\nimport ThreePoint from \"./ThreePoint\";\r\n\r\nconst LIGHTING = Object.freeze({\r\n  Demo: \"Demo\",\r\n  None: \"None\",\r\n  Studio: \"Studio\",\r\n  ThreePoint: \"ThreePoint\",\r\n});\r\n\r\nfunction enableLighting(name) {\r\n  let element;\r\n  switch (name) {\r\n    case LIGHTING.Demo:\r\n      element = <Demo />;\r\n      break;\r\n    case LIGHTING.Studio:\r\n      element = <Studio />;\r\n      break;\r\n    case LIGHTING.ThreePoint:\r\n      element = <ThreePoint />;\r\n      break;\r\n    default:\r\n      element = null;\r\n  }\r\n  return element;\r\n}\r\n\r\nconst Lighting = () => {\r\n  const { ligthingName } = useControls(\"Lightings\", {\r\n    ligthingName: {\r\n      label: \"Lighting\",\r\n      options: {\r\n        \"None       \": LIGHTING.None,\r\n        \"Demo       \": LIGHTING.Demo,\r\n        \"Studio     \": LIGHTING.Studio,\r\n        \"Three Point\": LIGHTING.ThreePoint,\r\n      },\r\n      value: LIGHTING.Studio,\r\n    },\r\n  });\r\n\r\n  return enableLighting(ligthingName);\r\n};\r\n\r\nexport default Lighting;\r\n","export default __webpack_public_path__ + \"static/media/gltf-logo.d3501fc2.glb\";","import { useRef, useState } from \"react\";\r\nimport { useFrame } from \"@react-three/fiber\";\r\nimport { useGLTF } from \"@react-three/drei\";\r\n\r\nimport gltfLogoGlb from \"./assets/gltf-logo.glb\";\r\n\r\nconst LogoDefault = () => {\r\n  const [clockwise, setClockwise] = useState(false);\r\n\r\n  const gltfLogo = useGLTF(gltfLogoGlb, true);\r\n  const logoRef = useRef();\r\n  const speed = 0.025;\r\n\r\n  useFrame(() => {\r\n    logoRef.current.rotation.y += speed * (clockwise ? 1 : -1);\r\n  });\r\n\r\n  return (\r\n    <primitive\r\n      object={gltfLogo.scene}\r\n      onClick={() => setClockwise(!clockwise)}\r\n      position={[0, 0, 0]}\r\n      ref={logoRef}\r\n    />\r\n  );\r\n};\r\n\r\nexport default LogoDefault;\r\n","import { useRef, useState } from \"react\";\r\nimport { useFrame } from \"@react-three/fiber\";\r\nimport { useGLTF } from \"@react-three/drei\";\r\n\r\nimport gltfLogoGlb from \"./assets/gltf-logo.glb\";\r\n\r\nconst LogoDouble = () => {\r\n  const [clockwise, setClockwise] = useState(false);\r\n\r\n  const gltfLogo = useGLTF(gltfLogoGlb, true);\r\n  const logo1Ref = useRef();\r\n  const logo2Ref = useRef();\r\n  const speed = 0.025;\r\n\r\n  useFrame(() => {\r\n    if (logo1Ref.current)\r\n      logo1Ref.current.rotation.x += speed * (clockwise ? 1 : -1);\r\n    if (logo2Ref.current)\r\n      logo2Ref.current.rotation.y += speed * (clockwise ? 1 : -1);\r\n  });\r\n\r\n  return (\r\n    <group onClick={() => setClockwise(!clockwise)}>\r\n      <primitive\r\n        object={gltfLogo.scene}\r\n        position={[-1, -1, 0]}\r\n        ref={logo1Ref}\r\n      />\r\n      <primitive\r\n        object={gltfLogo.scene.clone(true)}\r\n        position={[1, 1, 0]}\r\n        ref={logo2Ref}\r\n      />\r\n    </group>\r\n  );\r\n};\r\n\r\nexport default LogoDouble;\r\n","import { useControls } from \"leva\";\r\n\r\nimport Default from \"./Default\";\r\nimport Double from \"./Double\";\r\n\r\nconst LOGO = Object.freeze({\r\n  Default: \"Default\",\r\n  Double: \"Double\",\r\n});\r\n\r\nconst Image = () => {\r\n  const { useLogo } = useControls(\"Components\", {\r\n    useLogo: {\r\n      label: \"Logo\",\r\n      options: LOGO,\r\n      value: LOGO.Default,\r\n    },\r\n  });\r\n\r\n  function enableLogo(name, element) {\r\n    return useLogo === name ? element : null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {enableLogo(LOGO.Default, <Default />)}\r\n      {enableLogo(LOGO.Double, <Double />)}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Image;\r\n","import { Text, useMatcapTexture } from \"@react-three/drei\";\r\nimport { useControls } from \"leva\";\r\n\r\nimport { FontFamily, MatCap } from \"App/libs\";\r\n\r\nconst LoremIpsumDefault = () => {\r\n  const { size, string } = useControls(\"Components\", {\r\n    size: {\r\n      label: \"Size\",\r\n      value: 0.5,\r\n      min: 0.1,\r\n      max: 1,\r\n    },\r\n    string: {\r\n      label: \"String\",\r\n      value: \"Lorem ipsum dolor sit amet.\",\r\n    },\r\n  });\r\n\r\n  const [matcapGreenCrystal] = useMatcapTexture(\r\n    MatCap.id.GREEN_CRYSTAL,\r\n    MatCap.size.XL\r\n  );\r\n  const [matcapSilvery] = useMatcapTexture(MatCap.id.SILVERY, MatCap.size.XL);\r\n  const [matcapWornGold] = useMatcapTexture(\r\n    MatCap.id.WORN_GOLD,\r\n    MatCap.size.XL\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Text fontSize={size} position={[0, 1, -0.2]}>\r\n        {string}\r\n        <meshLambertMaterial />\r\n      </Text>\r\n      <Text\r\n        font={FontFamily.ROBOTO_SLAB.url}\r\n        fontSize={size}\r\n        position={[0, 0, 0]}\r\n      >\r\n        {string}\r\n        <meshMatcapMaterial matcap={matcapWornGold} />\r\n      </Text>\r\n      <Text\r\n        font={FontFamily.ARCHITECTS_DAUGHTER.url}\r\n        fontSize={size}\r\n        opacity={0.5}\r\n        position={[0, -1, 0.1]}\r\n        text={string}\r\n      >\r\n        <meshMatcapMaterial matcap={matcapGreenCrystal} />\r\n      </Text>\r\n      <Text\r\n        color={0x000000}\r\n        font={FontFamily.PRESS_START_2P.url}\r\n        fontSize={size}\r\n        outlineColor={0x00ff00}\r\n        outlineWidth={0.04}\r\n        position={[0, -2, 0.2]}\r\n        text={string}\r\n      >\r\n        <meshMatcapMaterial matcap={matcapSilvery} opacity={0.9} />\r\n      </Text>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoremIpsumDefault;\r\n","import { Text } from \"@react-three/drei\";\r\nimport { useControls } from \"leva\";\r\n\r\nimport { FontFamily } from \"App/libs\";\r\n\r\nconst length = Object.keys(FontFamily).length;\r\n\r\nconst LoremIpsumFonts = () => {\r\n  const { color, size, string } = useControls(\"Components\", {\r\n    color: {\r\n      label: \"Color\",\r\n      value: \"#ffffff\",\r\n    },\r\n    size: {\r\n      label: \"Size\",\r\n      value: 0.5,\r\n      min: 0.1,\r\n      max: 1,\r\n    },\r\n    string: {\r\n      label: \"String\",\r\n      value: \"Lorem ipsum dolor sit amet.\",\r\n    },\r\n  });\r\n\r\n  const start = (-length * size) / 2;\r\n\r\n  return (\r\n    <>\r\n      {Object.keys(FontFamily).map((name, index) => {\r\n        return (\r\n          <Text\r\n            color={color}\r\n            font={FontFamily[name].url}\r\n            fontSize={size}\r\n            key={name}\r\n            position={[0, start + index * size, 0]}\r\n          >\r\n            {string}\r\n          </Text>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoremIpsumFonts;\r\n","import { useControls } from \"leva\";\r\n\r\nimport Default from \"./Default\";\r\nimport Fonts from \"./Fonts\";\r\n\r\nconst LOREM_IPSUM = Object.freeze({\r\n  Default: \"Default\",\r\n  Fonts: \"Fonts\",\r\n});\r\n\r\nconst LoremIpsum = () => {\r\n  const { useLoremIpsum } = useControls(\"Components\", {\r\n    useLoremIpsum: {\r\n      label: \"LoremIpsum\",\r\n      options: LOREM_IPSUM,\r\n      value: LOREM_IPSUM.Default,\r\n    },\r\n  });\r\n\r\n  function enableLoremIpsum(name, element) {\r\n    return useLoremIpsum === name ? element : null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {enableLoremIpsum(LOREM_IPSUM.Default, <Default />)}\r\n      {enableLoremIpsum(LOREM_IPSUM.Fonts, <Fonts />)}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoremIpsum;\r\n","export default __webpack_public_path__ + \"static/media/normals.c5aed970.glb\";","import { useRef } from \"react\";\r\nimport { useGLTF } from \"@react-three/drei\";\r\nimport { useFrame } from \"@react-three/fiber\";\r\n\r\nimport normalsGlb from \"./assets/normals.glb\";\r\n\r\nconst Normals = () => {\r\n  const normals = useGLTF(normalsGlb, true);\r\n  const normalsRef = useRef();\r\n\r\n  useFrame(() => {\r\n    if (normalsRef.current) {\r\n      normalsRef.current.rotation.x += 0.02;\r\n    }\r\n  });\r\n\r\n  return <primitive object={normals.scene} ref={normalsRef} />;\r\n};\r\n\r\nexport default Normals;\r\n","import { folder, useControls } from \"leva\";\r\n\r\nconst ParticlesDefault = () => {\r\n  const { color, complexity, opacity, radius, size, transparent } = useControls(\r\n    \"Components\",\r\n    {\r\n      \"Icosahedron (20 faces)\": folder({\r\n        radius: { label: \"Radius\", max: 3, min: 0.5, step: 0.1, value: 2 },\r\n        complexity: {\r\n          label: \"Complexity\",\r\n          hint: \"0 → 12 vertices\",\r\n          max: 50,\r\n          min: 0,\r\n          step: 1,\r\n          value: 0,\r\n        },\r\n      }),\r\n      \"Points Material\": folder({\r\n        color: { label: \"Color\", value: \"hsl(0, 100%, 100%)\" },\r\n        opacity: {\r\n          label: \"Opacity\",\r\n          hint: \"`transparent` must be `true`\",\r\n          max: 1,\r\n          min: 0,\r\n          value: 1,\r\n        },\r\n        size: { label: \"Size\", max: 2, min: 0.05, step: 0.01, value: 1 },\r\n        transparent: { label: \"Transparent\", value: false },\r\n      }),\r\n    }\r\n  );\r\n\r\n  return (\r\n    <points>\r\n      <icosahedronGeometry args={[radius, complexity]} />\r\n      <pointsMaterial\r\n        color={color}\r\n        opacity={opacity}\r\n        size={size}\r\n        transparent={transparent}\r\n      />\r\n    </points>\r\n  );\r\n};\r\n\r\nexport default ParticlesDefault;\r\n","export default __webpack_public_path__ + \"static/media/Arteveldehogeschool_favicon.209a12d1.png\";","import { useTexture } from \"@react-three/drei\";\r\nimport { folder, useControls } from \"leva\";\r\n\r\nimport particleImage from \"./assets/Arteveldehogeschool_favicon.png\";\r\n\r\nconst ParticlesSprites = () => {\r\n  const { color, complexity, opacity, radius, size, transparent } = useControls(\r\n    \"Components\",\r\n    {\r\n      \"Icosahedron (20 faces)\": folder({\r\n        radius: { label: \"Radius\", max: 3, min: 0.5, step: 0.1, value: 2 },\r\n        complexity: {\r\n          label: \"Complexity\",\r\n          hint: \"0 → 12 vertices\",\r\n          max: 50,\r\n          min: 0,\r\n          step: 1,\r\n          value: 0,\r\n        },\r\n      }),\r\n      \"Points Material\": folder({\r\n        color: { label: \"Color\", value: \"hsl(0, 100%, 100%)\" },\r\n        opacity: {\r\n          label: \"Opacity\",\r\n          hint: \"`transparent` must be `true`\",\r\n          max: 1,\r\n          min: 0,\r\n          value: 1,\r\n        },\r\n        size: { label: \"Size\", max: 2, min: 0.05, step: 0.01, value: 1 },\r\n        transparent: { label: \"Transparent\", value: false },\r\n      }),\r\n    }\r\n  );\r\n\r\n  const sprite = useTexture(particleImage, true);\r\n\r\n  return (\r\n    <points>\r\n      <icosahedronGeometry args={[radius, complexity]} />\r\n      <pointsMaterial\r\n        color={color}\r\n        map={sprite}\r\n        opacity={opacity}\r\n        size={size}\r\n        transparent={transparent}\r\n      />\r\n    </points>\r\n  );\r\n};\r\n\r\nexport default ParticlesSprites;\r\n","import { useControls } from \"leva\";\r\n\r\nimport Default from \"./Default\";\r\nimport Sprites from \"./Sprites\";\r\n\r\nconst PARTICLES = Object.freeze({\r\n  Default: \"Default\",\r\n  Sprites: \"Sprites\",\r\n});\r\n\r\nconst Particles = () => {\r\n  const { useParticles } = useControls(\"Components\", {\r\n    useParticles: {\r\n      label: \"Particles\",\r\n      options: PARTICLES,\r\n      value: PARTICLES.Default,\r\n    },\r\n  });\r\n\r\n  function enableParticles(name, element) {\r\n    return useParticles === name ? element : null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {enableParticles(PARTICLES.Default, <Default />)}\r\n      {enableParticles(PARTICLES.Sprites, <Sprites />)}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Particles;\r\n","import { FrontSide } from \"three\";\r\nimport { Text } from \"@react-three/drei\";\r\n\r\nconst PlanesPlane = ({ color, name }) => {\r\n  const offset = 0.02;\r\n  const padding = 0.1;\r\n  const size = 3;\r\n\r\n  return (\r\n    <group>\r\n      <Text\r\n        position={[-size / 2 + padding / 2, size / 2 - padding, offset]}\r\n        anchorX=\"left\"\r\n      >\r\n        {name.en}\r\n        <meshBasicMaterial color={color} side={FrontSide} />\r\n      </Text>\r\n      <Text\r\n        position={[size / 2 - padding / 2, -size / 2 + padding, offset]}\r\n        anchorX=\"right\"\r\n      >\r\n        {name.nl}\r\n        <meshBasicMaterial color={color} side={FrontSide} />\r\n      </Text>\r\n    </group>\r\n  );\r\n};\r\n\r\nexport default PlanesPlane;\r\n","import { DoubleSide, MathUtils } from \"three\";\r\nimport { Plane } from \"@react-three/drei\";\r\n\r\nimport Text from \"./Text\";\r\n\r\nconst PlanesPlane = ({ color, name, rotation }) => {\r\n  const opacity = 0.25;\r\n  const size = 3;\r\n\r\n  return (\r\n    <group rotation={rotation.map((degrees) => MathUtils.degToRad(degrees))}>\r\n      <Plane args={[size, size]}>\r\n        <meshBasicMaterial\r\n          color={color}\r\n          opacity={opacity}\r\n          side={DoubleSide}\r\n          transparent={true}\r\n        />\r\n      </Plane>\r\n      {[\r\n        [0, 0, 0],\r\n        [0, 0, 90],\r\n        [0, 180, 0],\r\n        [0, 180, 90],\r\n      ].map((rotation) => (\r\n        <group\r\n          rotation={rotation.map((degrees) => MathUtils.degToRad(degrees))}\r\n        >\r\n          <Text color={color} name={name} />\r\n        </group>\r\n      ))}\r\n    </group>\r\n  );\r\n};\r\n\r\nexport default PlanesPlane;\r\n","import { useRef } from \"react\";\r\nimport { VertexNormalsHelper } from \"three-stdlib\";\r\nimport { useGLTF, useHelper } from \"@react-three/drei\";\r\nimport { useControls } from \"leva\";\r\n\r\nimport suzanneGlb from \"./assets/suzanne.glb\";\r\n\r\nconst SuzanneDefault = () => {\r\n  const { nodes, materials } = useGLTF(suzanneGlb, true);\r\n  const suzanneRef = useRef();\r\n\r\n  const { normalColor, enableVertexNormalsHelper, helperSize } = useControls(\r\n    \"Components\",\r\n    {\r\n      enableVertexNormalsHelper: {\r\n        label: \"Normals\",\r\n        value: false,\r\n      },\r\n      normalColor: { label: \"Normal Color\", value: \"cyan\" },\r\n      helperSize: {\r\n        label: \"Helper Size\",\r\n        max: 2,\r\n        min: 0,\r\n        step: 0.05,\r\n        value: 0.25,\r\n      },\r\n    }\r\n  );\r\n\r\n  useHelper(\r\n    enableVertexNormalsHelper ? suzanneRef : { current: null },\r\n    VertexNormalsHelper,\r\n    helperSize,\r\n    normalColor\r\n  );\r\n\r\n  return (\r\n    <mesh\r\n      ref={suzanneRef}\r\n      geometry={nodes.Suzanne.geometry}\r\n      material={materials[\"Paars\"]}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SuzanneDefault;\r\n","import Plane from \"./Plane\";\r\nimport Suzanne from \"../Suzanne/Default\";\r\n\r\nconst PLANE = Object.freeze({\r\n  FRONTAL: Object.freeze({\r\n    color: \"yellow\",\r\n    name: Object.freeze({\r\n      en: \"Frontal Plane\",\r\n      nl: \"Frontaal Vlak\",\r\n    }),\r\n    rotation: [0, 0, 0],\r\n  }),\r\n  SAGITTAL: Object.freeze({\r\n    color: \"cyan\",\r\n    name: Object.freeze({\r\n      en: \"Sagittal Plane\",\r\n      nl: \"Sagittaal Vlak\",\r\n    }),\r\n    rotation: [0, 90, 0],\r\n  }),\r\n  TRANSVERSE: Object.freeze({\r\n    color: \"magenta\",\r\n    name: Object.freeze({\r\n      en: \"Transverse Plane\",\r\n      nl: \"Transversaal Vlak\",\r\n    }),\r\n    rotation: [-90, 0, 0],\r\n  }),\r\n});\r\n\r\nconst Planes = () => {\r\n  return (\r\n    <>\r\n      <Suzanne />\r\n      {[PLANE.FRONTAL, PLANE.TRANSVERSE, PLANE.SAGITTAL].map((props, index) => (\r\n        <Plane {...props} key={index} />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Planes;\r\n","import { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Text } from \"@react-three/drei\";\r\nimport { useControls } from \"leva\";\r\n\r\nimport { ROUTES } from \"./ROUTES\";\r\n\r\nconst ReactRouter = () => {\r\n  const navigate = useNavigate();\r\n  const [hoverSubTitle, setHoverSubTitle] = useState(false);\r\n  const [hoverTitle, setHoverTitle] = useState(false);\r\n\r\n  useControls(\"Components\", {\r\n    route: {\r\n      label: \"Route\",\r\n      options: ROUTES,\r\n      value: ROUTES.Root,\r\n      onChange: (route) => {\r\n        navigate(route);\r\n      },\r\n    },\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Text\r\n        color={hoverTitle ? \"hsl(0, 100%, 50%)\" : \"hsl(120, 100%, 70%)\"}\r\n        fontSize={1}\r\n        onClick={() => navigate(ROUTES.Alpha)}\r\n        onPointerOut={() => setHoverTitle(false)}\r\n        onPointerOver={() => setHoverTitle(true)}\r\n        text=\"React Router\"\r\n      />\r\n      <Text\r\n        color={hoverSubTitle ? \"hsl(0, 100%, 50%)\" : \"hsl(120, 100%, 70%)\"}\r\n        fontSize={0.5}\r\n        onClick={() => navigate(ROUTES.Root)}\r\n        onPointerOut={() => setHoverSubTitle(false)}\r\n        onPointerOver={() => setHoverSubTitle(true)}\r\n        position={[0, -0.75, 0]}\r\n        text=\"(go back)\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ReactRouter;\r\n","import { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Text } from \"@react-three/drei\";\r\n\r\nimport { ROUTES } from \"./ROUTES\";\r\n\r\nconst WouterPathRouter = () => {\r\n  const navigate = useNavigate();\r\n  const [hover, setHover] = useState(false);\r\n\r\n  return (\r\n    <Text\r\n      color={hover ? \"hsl(0, 100%, 50%)\" : \"hsl(210, 100%, 70%)\"}\r\n      fontSize={0.5}\r\n      onClick={() => navigate(ROUTES.Omega)}\r\n      onPointerOut={() => setHover(false)}\r\n      onPointerOver={() => setHover(true)}\r\n      position={[0, 2, 0]}\r\n      text=\"Path Alpha\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default WouterPathRouter;\r\n","import { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Text } from \"@react-three/drei\";\r\n\r\nimport { ROUTES } from \"./ROUTES\";\r\n\r\nconst ReactRouterPathOmega = () => {\r\n  const navigate = useNavigate();\r\n  const [hover, setHover] = useState(false);\r\n\r\n  return (\r\n    <Text\r\n      color={hover ? \"hsl(0, 100%, 50%)\" : \"hsl(30, 100%, 70%)\"}\r\n      fontSize={0.5}\r\n      onClick={() => navigate(ROUTES.Alpha)}\r\n      onPointerOut={() => setHover(false)}\r\n      onPointerOver={() => setHover(true)}\r\n      position={[0, -2, 0]}\r\n      text=\"Path Omega\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default ReactRouterPathOmega;\r\n","import { useEffect, useRef } from \"react\";\r\nimport { Text } from \"@react-three/drei\";\r\nimport { Box, Flex } from \"@react-three/flex\";\r\nimport { Manager } from \"socket.io-client\";\r\nimport { ZeroFill } from \"App/utils\";\r\n\r\nconst Socket = () => {\r\n  const distanceRef = useRef();\r\n  const speedRef = useRef();\r\n\r\n  const PORT = 3001;\r\n  const manager = new Manager(`http://localhost:${PORT}`);\r\n  const socket = manager.socket(\"/\");\r\n\r\n  socket.on(\"connect\", () => {\r\n    console.log(\"Socket connected: \", socket.connected);\r\n  });\r\n\r\n  socket.on(\"disconnect\", () => {\r\n    console.log(\"Socket disconnected\");\r\n  });\r\n\r\n  useEffect(() => {\r\n    socket.on(\"telemetry\", (message) => {\r\n      const distance = new ZeroFill(message.distance, 6, \" km\");\r\n      const speed = new ZeroFill(message.speed, 3, \" km/u\");\r\n      if (distanceRef.current) distanceRef.current.text = distance;\r\n      if (speedRef.current) speedRef.current.text = speed;\r\n    });\r\n  }, [socket]);\r\n\r\n  return (\r\n    <Flex\r\n      flexDirection=\"row\"\r\n      flexWrap=\"wrap\"\r\n      justifyContent=\"space-between\"\r\n      position={[-3, 0, 0]}\r\n      size={[6, 0, 0]}\r\n    >\r\n      <Box>\r\n        <Text\r\n          color=\"hsl(210, 100%, 70%)\"\r\n          fontSize={1}\r\n          ref={distanceRef}\r\n          text=\"Socket.IO\"\r\n        />\r\n      </Box>\r\n      <Box>\r\n        <Text\r\n          color=\"hsl(30, 100%, 70%)\"\r\n          fontSize={1}\r\n          ref={speedRef}\r\n          text=\"Socket.IO\"\r\n        />\r\n      </Box>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default Socket;\r\n","import { useState } from \"react\";\r\nimport { DoubleSide, MathUtils } from \"three\";\r\nimport { useMatcapTexture } from \"@react-three/drei\";\r\nimport { animated, useSpring } from \"@react-spring/three\";\r\nimport * as easings from \"d3-ease\";\r\n\r\nconst Spring = (props) => {\r\n  const [toggle, setToggle] = useState(true);\r\n  const [matcap] = useMatcapTexture(\r\n    \"80CA23_B7EE37_D5FA4C_A3E434\", // Index or ID string, see: https://github.com/emmelleppi/matcaps/\r\n    1024 // Texture size (64, 128, 256, 512, 1024)\r\n  );\r\n  const { opacity, position } = useSpring({\r\n    config: {\r\n      duration: 200,\r\n      easing: easings.easeCubic,\r\n    },\r\n    delay: 100,\r\n    from: {\r\n      opacity: toggle ? 0.5 : 1,\r\n      position: toggle ? [0, 0, 0] : [0, 0, -2],\r\n    },\r\n    to: [\r\n      { opacity: toggle ? 1 : 0.5 },\r\n      { opacity: toggle ? 0.5 : 1 },\r\n      { opacity: toggle ? 1 : 0.5, position: toggle ? [0, 0, -2] : [0, 0, 0] },\r\n    ],\r\n  });\r\n\r\n  return (\r\n    <group {...props}>\r\n      <mesh onClick={() => setToggle(!toggle)}>\r\n        <ringGeometry\r\n          args={[\r\n            1.1, // innerRadius\r\n            1.9, // outerRadius\r\n            72, // thetaSegments\r\n            1, // phiSegments\r\n            MathUtils.degToRad(90), // thetaStart\r\n            MathUtils.degToRad(350), // thetaLength\r\n          ]}\r\n        />\r\n        <animated.meshMatcapMaterial\r\n          matcap={matcap}\r\n          opacity={opacity}\r\n          side={DoubleSide}\r\n          transparent={true}\r\n        />\r\n      </mesh>\r\n      <animated.mesh position={position}>\r\n        <torusGeometry\r\n          args={[\r\n            1.5, // radius\r\n            0.5, // tube\r\n            72, // radialSegments\r\n            32, // tubularSegments\r\n            MathUtils.degToRad(360), // arc\r\n          ]}\r\n        />\r\n        <meshMatcapMaterial matcap={matcap} opacity={0.25} transparent={true} />\r\n      </animated.mesh>\r\n    </group>\r\n  );\r\n};\r\n\r\nexport default Spring;\r\n","import { useRef, useState } from \"react\";\r\nimport { useFrame } from \"@react-three/fiber\";\r\nimport { folder, useControls } from \"leva\";\r\n\r\nimport Suzanne from \"./Default\";\r\n\r\nconst SuzanneRotating = () => {\r\n  const [clockwise, setClockwise] = useState(false);\r\n  const suzanneRef = useRef();\r\n\r\n  const { speed, rotate } = useControls(\"Components\", {\r\n    Rotation: folder({\r\n      rotate: { label: \"Rotate\", value: true },\r\n      speed: { label: \"Speed\", max: 0.5, min: 0, step: 0.005, value: 0.025 },\r\n    }),\r\n  });\r\n\r\n  useFrame(() => {\r\n    if (suzanneRef.current) {\r\n      suzanneRef.current.rotation.x +=\r\n        speed * (rotate ? 1 : 0) * (clockwise ? 1 : -1);\r\n      suzanneRef.current.rotation.y +=\r\n        speed * (rotate ? 1 : 0) * (clockwise ? 1 : -1);\r\n      suzanneRef.current.rotation.z +=\r\n        speed * (rotate ? 1 : 0) * (clockwise ? 1 : -1);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <group ref={suzanneRef} onClick={() => setClockwise(!clockwise)}>\r\n      <Suzanne />\r\n    </group>\r\n  );\r\n};\r\n\r\nexport default SuzanneRotating;\r\n","import { MathUtils } from \"three\";\r\nimport { Plane, Text } from \"@react-three/drei\";\r\nimport { useControls } from \"leva\";\r\n\r\nimport CustomMaterial from \"./CustomMaterial\";\r\nimport Default from \"./Default\";\r\nimport Rotating from \"./Rotating\";\r\n\r\nconst SUZANNE = Object.freeze({\r\n  CustomMaterial: \"CustomMaterial\",\r\n  Default: \"Default\",\r\n  Rotating: \"Rotating\",\r\n});\r\n\r\nconst Suzanne = () => {\r\n  const { useSuzanne } = useControls(\"Components\", {\r\n    useSuzanne: {\r\n      label: \"Suzanne\",\r\n      options: {\r\n        \"Custom Material \": SUZANNE.CustomMaterial,\r\n        \"Default         \": SUZANNE.Default,\r\n        \"Default Rotating\": SUZANNE.Rotating,\r\n      },\r\n      value: SUZANNE.Default,\r\n    },\r\n  });\r\n\r\n  function enableSuzanne(name, element) {\r\n    return useSuzanne === name ? element : null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Text fontSize={0.5} color={\"white\"} position={[0, 0, -1.499]}>\r\n        Suzanne\r\n      </Text>\r\n      <Plane\r\n        args={[4, 4]}\r\n        position={[0, 0, -1.5]}\r\n        rotation={[0, 0, 45].map((degree) => MathUtils.degToRad(degree))}\r\n      >\r\n        <meshBasicMaterial opacity={0.05} transparent={true} />\r\n      </Plane>\r\n      <>\r\n        {enableSuzanne(SUZANNE.CustomMaterial, <CustomMaterial />)}\r\n        {enableSuzanne(SUZANNE.Default, <Default />)}\r\n        {enableSuzanne(SUZANNE.Rotating, <Rotating />)}\r\n      </>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Suzanne;\r\n","import { DoubleSide } from \"three\";\r\n\r\nconst SvgLoaderShape = ({ color, index, shape }) => {\r\n  // console.log(\"Shape\", color, index);\r\n  return (\r\n    <mesh position={[0, 0, -0.05 * index]}>\r\n      <shapeGeometry args={[shape]} />\r\n      <meshBasicMaterial color={color} side={DoubleSide} />\r\n    </mesh>\r\n  );\r\n};\r\n\r\nexport default SvgLoaderShape;\r\n","import { MathUtils } from \"three\";\r\nimport Shape from \"./Shape\";\r\n\r\nconst SvgLoaderGroup = ({ paths, position, scale }) => {\r\n  // console.log(\"Group\", paths, scale);\r\n  return (\r\n    <group\r\n      position={position}\r\n      rotation={[180, 0, 0].map((degrees) => MathUtils.degToRad(degrees))}\r\n      scale={scale}\r\n    >\r\n      {paths.map((path, index) => {\r\n        // console.log(\"Path\", index, path, path.color, path.toShapes());\r\n        const shapes = path.toShapes();\r\n        const pathIndex = index;\r\n        return shapes.map((shape, index) => {\r\n          return (\r\n            <Shape\r\n              color={path.color}\r\n              index={index + pathIndex}\r\n              key={index}\r\n              shape={shape}\r\n            />\r\n          );\r\n        });\r\n      })}\r\n    </group>\r\n  );\r\n};\r\n\r\nexport default SvgLoaderGroup;\r\n","import { useEffect, useState } from \"react\";\r\nimport { SVGLoader } from \"three-stdlib\";\r\n\r\nimport Group from \"./Group\";\r\n\r\nconst SvgLoader = (props) => {\r\n  const [paths, setPaths] = useState([]);\r\n  const position = props.position;\r\n  const scale = [props.scale, props.scale, props.scale];\r\n\r\n  useEffect(() => {\r\n    const svgResource = new Promise((resolve) =>\r\n      new SVGLoader().load(props.source, (data) => resolve(data.paths))\r\n    );\r\n    svgResource.then(setPaths);\r\n  }, [props]);\r\n\r\n  return <Group paths={paths} position={position} scale={scale} />;\r\n};\r\n\r\nexport default SvgLoader;\r\n","export default __webpack_public_path__ + \"static/media/TexturedCube.2b78eebc.glb\";","import { useGLTF } from \"@react-three/drei\";\r\n\r\nimport cubeGlb from \"./assets/TexturedCube.glb\";\r\n\r\nconst TextureDefault = () => {\r\n  const { nodes, materials } = useGLTF(cubeGlb, true);\r\n  return (\r\n    <>\r\n      <group position={[-1.5, 0, 0]}>\r\n        <mesh\r\n          geometry={nodes.Cube_1.geometry}\r\n          material={materials[\"MaterialTexture\"]}\r\n        />\r\n        <mesh geometry={nodes.Cube_2.geometry} material={materials[\"Blue\"]} />\r\n      </group>\r\n      {nodes.Cube.children.map((child, index) => {\r\n        return (\r\n          <mesh\r\n            key={index}\r\n            geometry={child.geometry}\r\n            material={child.material}\r\n            position={[1.5, 0, 0]}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TextureDefault;\r\n","export default __webpack_public_path__ + \"static/media/BakedNormals.03580610.glb\";","import { MathUtils } from \"three\";\r\nimport { useGLTF } from \"@react-three/drei\";\r\n\r\nimport cubeGlb from \"./assets/BakedNormals.glb\";\r\n\r\nconst TextureBakedNormals = () => {\r\n  const { nodes, materials } = useGLTF(cubeGlb, true);\r\n  return (\r\n    <mesh\r\n      geometry={nodes.Plane.geometry}\r\n      material={materials[\"Material\"]}\r\n      rotation={[90, 0, 0].map((degree) => MathUtils.degToRad(degree))}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TextureBakedNormals;\r\n","import { useControls } from \"leva\";\r\n\r\nimport Default from \"./Default\";\r\nimport BakedNormals from \"./BakedNormals\";\r\n\r\nconst TEXTURE = Object.freeze({\r\n  Default: \"Default\",\r\n  BakedNormals: \"BakedNormals\",\r\n});\r\n\r\nconst Texture = () => {\r\n  const { useTexture } = useControls(\"Components\", {\r\n    useTexture: {\r\n      label: \"Type\",\r\n      options: {\r\n        \"Default      \": TEXTURE.Default,\r\n        \"Baked Normals\": TEXTURE.BakedNormals,\r\n      },\r\n      value: TEXTURE.Default,\r\n    },\r\n  });\r\n\r\n  function enableTexture(name, element) {\r\n    return useTexture === name ? element : null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {enableTexture(TEXTURE.Default, <Default />)}\r\n      {enableTexture(TEXTURE.BakedNormals, <BakedNormals />)}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Texture;\r\n","const Tripod = (props) => {\r\n  const length = 1;\r\n  const radius = (length / 100) * 2;\r\n  const segments = 32;\r\n  const thickness = length / 100;\r\n\r\n  return (\r\n    <group {...props}>\r\n      <mesh>\r\n        <boxGeometry args={[1, 1, 1].map((value) => value * 1.5 * thickness)} />\r\n        <meshBasicMaterial color={0xffffff} />\r\n      </mesh>\r\n\r\n      {Array(3)\r\n        .fill()\r\n        .map((value, index) => {\r\n          return (\r\n            <group\r\n              key={index}\r\n              position={[0, 0, 0].map((v, i) =>\r\n                index === i ? length / 2 + thickness * 2 : v\r\n              )}\r\n            >\r\n              <mesh>\r\n                <boxGeometry\r\n                  args={[1, 1, 1].map(\r\n                    (v, i) => v * (index === i ? length : thickness)\r\n                  )}\r\n                />\r\n                <meshBasicMaterial color={0xff0000 >> (8 * index)} />\r\n              </mesh>\r\n              <mesh\r\n                position={[0, 0, 0].map((v, i) =>\r\n                  index === i ? length / 2 + thickness * 3 : v\r\n                )}\r\n              >\r\n                <sphereGeometry args={[radius, segments, segments]} />\r\n                <meshBasicMaterial color={0xffffff} />\r\n              </mesh>\r\n            </group>\r\n          );\r\n        })}\r\n    </group>\r\n  );\r\n};\r\n\r\nexport default Tripod;\r\n","import { useEffect, useRef } from \"react\";\r\nimport { DoubleSide, MathUtils } from \"three\";\r\nimport { useFrame } from \"@react-three/fiber\";\r\nimport { Box, Plane, PointerLockControls } from \"@react-three/drei\";\r\nimport { useControls } from \"leva\";\r\n\r\nimport { KeyboardControls } from \"App/utils\";\r\n\r\nconst BOX_SIZE = 1;\r\nconst MOVE_SPEED = {\r\n  FORWARD: 0.1,\r\n  RIGHT: 0.05,\r\n  UP: 0.5,\r\n};\r\n\r\nconst WorldDefault = (props) => {\r\n  const { enablePointerLockControls } = useControls(\"Controls\", {\r\n    enablePointerLockControls: { label: \"PointerLock\", value: true },\r\n  });\r\n\r\n  const pointerRef = useRef();\r\n\r\n  useEffect(() => {\r\n    KeyboardControls.addEventListeners();\r\n\r\n    if (pointerRef.current) {\r\n      pointerRef.current.getObject().position.y = 1.75; // m\r\n    }\r\n\r\n    return KeyboardControls.removeEventListeners;\r\n  }, [enablePointerLockControls]);\r\n\r\n  useFrame(() => {\r\n    if (pointerRef.current) {\r\n      pointerRef.current.moveForward(\r\n        MOVE_SPEED.FORWARD * KeyboardControls.forwardDirection\r\n      );\r\n      pointerRef.current.moveRight(\r\n        MOVE_SPEED.RIGHT * KeyboardControls.rightDirection\r\n      );\r\n      pointerRef.current.getObject().position.y +=\r\n        MOVE_SPEED.UP * KeyboardControls.upDirection; // m\r\n    }\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {enablePointerLockControls && <PointerLockControls ref={pointerRef} />}\r\n      <Plane\r\n        args={[10, 10]}\r\n        rotation={[MathUtils.degToRad(-90), 0, 0]}\r\n        {...props}\r\n      >\r\n        <meshBasicMaterial color={0x666666} side={DoubleSide} />\r\n      </Plane>\r\n      <Box\r\n        args={[BOX_SIZE, BOX_SIZE, BOX_SIZE]}\r\n        position={[0, BOX_SIZE / 2, 0]}\r\n      >\r\n        <meshBasicMaterial color={0xff0000} opacity={0.75} transparent={true} />\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WorldDefault;\r\n","export default __webpack_public_path__ + \"static/media/bensound-evolution.4375aef0.mp3\";","import { useEffect, useRef } from \"react\";\r\nimport { AudioListener, AudioLoader, DoubleSide, MathUtils } from \"three\";\r\nimport { useFrame, useLoader } from \"@react-three/fiber\";\r\nimport { Plane, PointerLockControls, Text } from \"@react-three/drei\";\r\nimport { useControls } from \"leva\";\r\n\r\nimport { KeyboardControls } from \"App/utils\";\r\n\r\nimport evolutionAudioFile from \"./audio/bensound-evolution.mp3\";\r\n\r\nconst MOVE_SPEED = {\r\n  FORWARD: 0.1,\r\n  RIGHT: 0.05,\r\n  UP: 0.5,\r\n};\r\n\r\nconst WorldSound = () => {\r\n  const { enablePointerLockControls } = useControls(\"Controls\", {\r\n    enablePointerLockControls: { label: \"PointerLock\", value: true },\r\n  });\r\n\r\n  const pointerRef = useRef();\r\n  const audioRef = useRef();\r\n  const audioListener = new AudioListener();\r\n  const audioBuffer = useLoader(AudioLoader, evolutionAudioFile);\r\n\r\n  useEffect(() => {\r\n    KeyboardControls.addEventListeners();\r\n\r\n    if (pointerRef.current) {\r\n      pointerRef.current.getObject().position.y = 1.75; // m\r\n    }\r\n\r\n    return KeyboardControls.removeEventListeners;\r\n  }, [enablePointerLockControls]);\r\n\r\n  useEffect(() => {\r\n    if (audioRef.current) {\r\n      audioRef.current.setBuffer(audioBuffer);\r\n      audioRef.current.setLoop(true);\r\n      audioRef.current.setVolume(0.01);\r\n      audioRef.current.play();\r\n    }\r\n  }, [audioBuffer]);\r\n\r\n  useFrame(() => {\r\n    if (pointerRef.current) {\r\n      pointerRef.current.moveForward(\r\n        MOVE_SPEED.FORWARD * KeyboardControls.forwardDirection\r\n      );\r\n      pointerRef.current.moveRight(\r\n        MOVE_SPEED.RIGHT * KeyboardControls.rightDirection\r\n      );\r\n      pointerRef.current.getObject().position.y +=\r\n        MOVE_SPEED.UP * KeyboardControls.upDirection; // m\r\n    }\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {enablePointerLockControls && <PointerLockControls ref={pointerRef} />}\r\n      <Plane args={[10, 10]} rotation={[MathUtils.degToRad(-90), 0, 0]}>\r\n        <meshBasicMaterial color={0x666666} side={DoubleSide} />\r\n      </Plane>\r\n      <audio args={[audioListener]} ref={audioRef} />\r\n      <mesh position={[0, 0, 0]}>\r\n        <Text position={[0, 1, 0]}>Music: https://www.bensound.com</Text>\r\n      </mesh>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WorldSound;\r\n","import { useControls } from \"leva\";\r\n\r\nimport Default from \"./Default\";\r\n// import PositionalSound from \"./PositionalSound\";\r\nimport Sound from \"./Sound\";\r\n\r\nconst WORLD = Object.freeze({\r\n  Default: \"Default\",\r\n  // PositionalSound: \"PositionalSound\", // Bug in Drei\r\n  Sound: \"Sound\",\r\n});\r\n\r\nconst World = () => {\r\n  const { useWorld } = useControls(\"Components\", {\r\n    useWorld: {\r\n      label: \"World\",\r\n      options: WORLD,\r\n      value: WORLD.Default,\r\n    },\r\n  });\r\n\r\n  function enableWorld(name, element) {\r\n    return useWorld === name ? element : null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {enableWorld(WORLD.Default, <Default />)}\r\n      {/* {enableWorld(WORLD.PositionalSound, <PositionalSound />)} */}\r\n      {enableWorld(WORLD.Sound, <Sound />)}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default World;\r\n","import { Suspense } from \"react\";\r\nimport {\r\n  HashRouter as Router,\r\n  Navigate,\r\n  Route,\r\n  Routes,\r\n} from \"react-router-dom\";\r\nimport { MathUtils } from \"three\";\r\nimport { Stats } from \"@react-three/drei\";\r\nimport { useControls } from \"leva\";\r\n\r\nimport {\r\n  Animation,\r\n  Button,\r\n  Clock,\r\n  Cube,\r\n  Effects,\r\n  Composition,\r\n  Face,\r\n  Gauge,\r\n  Geometry2D,\r\n  Geometry3D,\r\n  Helpers,\r\n  Image,\r\n  InputControls,\r\n  Lighting,\r\n  Logo,\r\n  LoremIpsum,\r\n  Normals,\r\n  Particles,\r\n  Planes,\r\n  ReactRouter,\r\n  ReactRouterPathAlpha,\r\n  ReactRouterPathOmega,\r\n  Socket,\r\n  Spring,\r\n  Suzanne,\r\n  Texture,\r\n  Tripod,\r\n  World,\r\n  ROUTES,\r\n} from \"./components\";\r\n\r\nconst COMPONENT = Object.freeze({\r\n  Animation: \"Animation\",\r\n  Button: \"Button\",\r\n  Clock: \"Clock\",\r\n  Composition: \"Composition\",\r\n  Cube: \"Cube\",\r\n  Cube_Positioned: \"Cube_Positioned\",\r\n  Face: \"Face\",\r\n  Gauge: \"Gauge\",\r\n  Geometry2D: \"Geometry2D\",\r\n  Geometry3D: \"Geometry3D\",\r\n  Image: \"Image\",\r\n  Logo: \"Logo\",\r\n  LoremIpsum: \"LoremIpsum\",\r\n  None: \"None\",\r\n  Normals: \"Normals\",\r\n  Particles: \"Particles\",\r\n  Planes: \"Planes\",\r\n  ReactRouter: \"ReactRouter\",\r\n  Socket: \"Socket\",\r\n  Spring: \"Spring\",\r\n  Suzanne: \"Suzanne\",\r\n  Texture: \"Texture\",\r\n  Tripod: \"Tripod\",\r\n  World: \"World\",\r\n});\r\n\r\nconst Content = () => {\r\n  const { enableStats } = useControls(\"General\", {\r\n    enableStats: { label: \"Stats\", value: false },\r\n  });\r\n\r\n  const { useComponent } = useControls(\"Components\", {\r\n    useComponent: {\r\n      label: \"Component\",\r\n      options: {\r\n        \"None                  \": COMPONENT.None,\r\n        \"Animation             \": COMPONENT.Animation,\r\n        \"Button                \": COMPONENT.Button,\r\n        \"Clock                 \": COMPONENT.Clock,\r\n        \"Composition           \": COMPONENT.Composition,\r\n        \"Cube                  \": COMPONENT.Cube,\r\n        \"Cube (positioned)     \": COMPONENT.Cube_Positioned,\r\n        \"Face                  \": COMPONENT.Face,\r\n        \"Gauge                 \": COMPONENT.Gauge,\r\n        \"Geometry 2D           \": COMPONENT.Geometry2D,\r\n        \"Geometry 3D           \": COMPONENT.Geometry3D,\r\n        \"Image                 \": COMPONENT.Image,\r\n        \"Logo                  \": COMPONENT.Logo,\r\n        \"Lorem Ipsum           \": COMPONENT.LoremIpsum,\r\n        \"Normals               \": COMPONENT.Normals,\r\n        \"Particles             \": COMPONENT.Particles,\r\n        \"Planes                \": COMPONENT.Planes,\r\n        \"ReactRouter           \": COMPONENT.ReactRouter,\r\n        \"Socket (Socket.IO 4.4)\": COMPONENT.Socket,\r\n        \"Spring                \": COMPONENT.Spring,\r\n        \"Suzanne               \": COMPONENT.Suzanne,\r\n        \"Texture               \": COMPONENT.Texture,\r\n        \"Tripod                \": COMPONENT.Tripod,\r\n        \"World                 \": COMPONENT.World,\r\n      },\r\n      value: COMPONENT.Suzanne,\r\n    },\r\n  });\r\n\r\n  function enableComponent(name, element) {\r\n    return useComponent === name ? element : null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {enableStats && <Stats />}\r\n      <Effects />\r\n      <Helpers />\r\n      <InputControls />\r\n      <Lighting />\r\n\r\n      <Router>\r\n        {enableComponent(COMPONENT.Button, <Button />)}\r\n        {enableComponent(COMPONENT.Cube, <Cube />)}\r\n        {enableComponent(\r\n          COMPONENT.Cube_Positioned,\r\n          <Cube\r\n            position={[1, 1, 1]}\r\n            rotation={[45, 45, 45].map((degrees) =>\r\n              MathUtils.degToRad(degrees)\r\n            )}\r\n          />\r\n        )}\r\n        {enableComponent(COMPONENT.Face, <Face />)}\r\n        {enableComponent(COMPONENT.Gauge, <Gauge />)}\r\n        {enableComponent(COMPONENT.ReactRouter, <ReactRouter />)}\r\n        {enableComponent(COMPONENT.Socket, <Socket />)}\r\n        <Suspense fallback={null}>\r\n          {enableComponent(COMPONENT.Animation, <Animation />)}\r\n          {enableComponent(COMPONENT.Clock, <Clock />)}\r\n          {enableComponent(COMPONENT.Composition, <Composition />)}\r\n          {enableComponent(COMPONENT.Geometry2D, <Geometry2D />)}\r\n          {enableComponent(COMPONENT.Geometry3D, <Geometry3D />)}\r\n          {enableComponent(COMPONENT.Image, <Image />)}\r\n          {enableComponent(COMPONENT.Logo, <Logo />)}\r\n          {enableComponent(COMPONENT.LoremIpsum, <LoremIpsum />)}\r\n          {enableComponent(COMPONENT.Normals, <Normals />)}\r\n          {enableComponent(COMPONENT.Particles, <Particles />)}\r\n          {enableComponent(COMPONENT.Planes, <Planes />)}\r\n          {enableComponent(COMPONENT.Spring, <Spring />)}\r\n          {enableComponent(COMPONENT.Suzanne, <Suzanne />)}\r\n          {enableComponent(COMPONENT.Texture, <Texture />)}\r\n          {enableComponent(COMPONENT.World, <World />)}\r\n        </Suspense>\r\n        {enableComponent(COMPONENT.Tripod, <Tripod />)}\r\n        <Routes>\r\n          <Route element={<Navigate to={ROUTES.Root} />} path={ROUTES.All} />\r\n          <Route element={<ReactRouterPathAlpha />} path={ROUTES.Alpha} />\r\n          <Route element={<ReactRouterPathOmega />} path={ROUTES.Omega} />\r\n          <Route element={null} path={ROUTES.Root} />\r\n        </Routes>\r\n      </Router>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Content;\r\n","import { Canvas } from \"@react-three/fiber\";\r\nimport { Leva } from \"leva\";\r\n\r\nimport Content from \"./Content\";\r\n\r\nimport \"./index.css\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <Leva flat={true} oneLineLabels={true} />\r\n      <Canvas linear={false} shadows={true}>\r\n        <Content />\r\n      </Canvas>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { StrictMode } from \"react\";\nimport { render } from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nrender(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}